(function(){const x=document.createElement("link").relList;if(x&&x.supports&&x.supports("modulepreload"))return;for(const A of document.querySelectorAll('link[rel="modulepreload"]'))t(A);new MutationObserver(A=>{for(const B of A)if(B.type==="childList")for(const n of B.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function E(A){const B={};return A.integrity&&(B.integrity=A.integrity),A.referrerpolicy&&(B.referrerPolicy=A.referrerpolicy),A.crossorigin==="use-credentials"?B.credentials="include":A.crossorigin==="anonymous"?B.credentials="omit":B.credentials="same-origin",B}function t(A){if(A.ep)return;A.ep=!0;const B=E(A);fetch(A.href,B)}})();const u9="%[a-f0-9]{2}",g8=new RegExp("("+u9+")|([^%]+?)","gi"),_8=new RegExp("("+u9+")+","gi");function yE(e,x){try{return[decodeURIComponent(e.join(""))]}catch{}if(e.length===1)return e;x=x||1;const E=e.slice(0,x),t=e.slice(x);return Array.prototype.concat.call([],yE(E),yE(t))}function Re(e){try{return decodeURIComponent(e)}catch{let x=e.match(g8)||[];for(let E=1;E<x.length;E++)e=yE(x,E).join(""),x=e.match(g8)||[];return e}}function je(e){const x={"%FE%FF":"��","%FF%FE":"��"};let E=_8.exec(e);for(;E;){try{x[E[0]]=decodeURIComponent(E[0])}catch{const A=Re(E[0]);A!==E[0]&&(x[E[0]]=A)}E=_8.exec(e)}x["%C2"]="�";const t=Object.keys(x);for(const A of t)e=e.replace(new RegExp(A,"g"),x[A]);return e}function Ve(e){if(typeof e!="string")throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof e+"`");try{return decodeURIComponent(e)}catch{return je(e)}}function f9(e,x){if(!(typeof e=="string"&&typeof x=="string"))throw new TypeError("Expected the arguments to be of type `string`");if(e===""||x==="")return[];const E=e.indexOf(x);return E===-1?[]:[e.slice(0,E),e.slice(E+x.length)]}function He(e,x){const E={};if(Array.isArray(x))for(const t of x){const A=Object.getOwnPropertyDescriptor(e,t);A?.enumerable&&Object.defineProperty(E,t,A)}else for(const t of Reflect.ownKeys(e)){const A=Object.getOwnPropertyDescriptor(e,t);if(A.enumerable){const B=e[t];x(t,B,e)&&Object.defineProperty(E,t,A)}}return E}const We=e=>e==null,Ke=e=>encodeURIComponent(e).replace(/[!'()*]/g,x=>`%${x.charCodeAt(0).toString(16).toUpperCase()}`),wE=Symbol("encodeFragmentIdentifier");function Je(e){switch(e.arrayFormat){case"index":return x=>(E,t)=>{const A=E.length;return t===void 0||e.skipNull&&t===null||e.skipEmptyString&&t===""?E:t===null?[...E,[R(x,e),"[",A,"]"].join("")]:[...E,[R(x,e),"[",R(A,e),"]=",R(t,e)].join("")]};case"bracket":return x=>(E,t)=>t===void 0||e.skipNull&&t===null||e.skipEmptyString&&t===""?E:t===null?[...E,[R(x,e),"[]"].join("")]:[...E,[R(x,e),"[]=",R(t,e)].join("")];case"colon-list-separator":return x=>(E,t)=>t===void 0||e.skipNull&&t===null||e.skipEmptyString&&t===""?E:t===null?[...E,[R(x,e),":list="].join("")]:[...E,[R(x,e),":list=",R(t,e)].join("")];case"comma":case"separator":case"bracket-separator":{const x=e.arrayFormat==="bracket-separator"?"[]=":"=";return E=>(t,A)=>A===void 0||e.skipNull&&A===null||e.skipEmptyString&&A===""?t:(A=A===null?"":A,t.length===0?[[R(E,e),x,R(A,e)].join("")]:[[t,R(A,e)].join(e.arrayFormatSeparator)])}default:return x=>(E,t)=>t===void 0||e.skipNull&&t===null||e.skipEmptyString&&t===""?E:t===null?[...E,R(x,e)]:[...E,[R(x,e),"=",R(t,e)].join("")]}}function Ye(e){let x;switch(e.arrayFormat){case"index":return(E,t,A)=>{if(x=/\[(\d*)]$/.exec(E),E=E.replace(/\[\d*]$/,""),!x){A[E]=t;return}A[E]===void 0&&(A[E]={}),A[E][x[1]]=t};case"bracket":return(E,t,A)=>{if(x=/(\[])$/.exec(E),E=E.replace(/\[]$/,""),!x){A[E]=t;return}if(A[E]===void 0){A[E]=[t];return}A[E]=[...A[E],t]};case"colon-list-separator":return(E,t,A)=>{if(x=/(:list)$/.exec(E),E=E.replace(/:list$/,""),!x){A[E]=t;return}if(A[E]===void 0){A[E]=[t];return}A[E]=[...A[E],t]};case"comma":case"separator":return(E,t,A)=>{const B=typeof t=="string"&&t.includes(e.arrayFormatSeparator),n=typeof t=="string"&&!B&&r0(t,e).includes(e.arrayFormatSeparator);t=n?r0(t,e):t;const i=B||n?t.split(e.arrayFormatSeparator).map(r=>r0(r,e)):t===null?t:r0(t,e);A[E]=i};case"bracket-separator":return(E,t,A)=>{const B=/(\[])$/.test(E);if(E=E.replace(/\[]$/,""),!B){A[E]=t&&r0(t,e);return}const n=t===null?[]:t.split(e.arrayFormatSeparator).map(i=>r0(i,e));if(A[E]===void 0){A[E]=n;return}A[E]=[...A[E],...n]};default:return(E,t,A)=>{if(A[E]===void 0){A[E]=t;return}A[E]=[...[A[E]].flat(),t]}}}function h9(e){if(typeof e!="string"||e.length!==1)throw new TypeError("arrayFormatSeparator must be single character string")}function R(e,x){return x.encode?x.strict?Ke(e):encodeURIComponent(e):e}function r0(e,x){return x.decode?Ve(e):e}function d9(e){return Array.isArray(e)?e.sort():typeof e=="object"?d9(Object.keys(e)).sort((x,E)=>Number(x)-Number(E)).map(x=>e[x]):e}function p9(e){const x=e.indexOf("#");return x!==-1&&(e=e.slice(0,x)),e}function qe(e){let x="";const E=e.indexOf("#");return E!==-1&&(x=e.slice(E)),x}function v8(e,x){return x.parseNumbers&&!Number.isNaN(Number(e))&&typeof e=="string"&&e.trim()!==""?e=Number(e):x.parseBooleans&&e!==null&&(e.toLowerCase()==="true"||e.toLowerCase()==="false")&&(e=e.toLowerCase()==="true"),e}function RE(e){e=p9(e);const x=e.indexOf("?");return x===-1?"":e.slice(x+1)}function jE(e,x){x={decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1,...x},h9(x.arrayFormatSeparator);const E=Ye(x),t=Object.create(null);if(typeof e!="string"||(e=e.trim().replace(/^[?#&]/,""),!e))return t;for(const A of e.split("&")){if(A==="")continue;const B=x.decode?A.replace(/\+/g," "):A;let[n,i]=f9(B,"=");n===void 0&&(n=B),i=i===void 0?null:["comma","separator","bracket-separator"].includes(x.arrayFormat)?i:r0(i,x),E(r0(n,x),i,t)}for(const[A,B]of Object.entries(t))if(typeof B=="object"&&B!==null)for(const[n,i]of Object.entries(B))B[n]=v8(i,x);else t[A]=v8(B,x);return x.sort===!1?t:(x.sort===!0?Object.keys(t).sort():Object.keys(t).sort(x.sort)).reduce((A,B)=>{const n=t[B];return Boolean(n)&&typeof n=="object"&&!Array.isArray(n)?A[B]=d9(n):A[B]=n,A},Object.create(null))}function m9(e,x){if(!e)return"";x={encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:",",...x},h9(x.arrayFormatSeparator);const E=n=>x.skipNull&&We(e[n])||x.skipEmptyString&&e[n]==="",t=Je(x),A={};for(const[n,i]of Object.entries(e))E(n)||(A[n]=i);const B=Object.keys(A);return x.sort!==!1&&B.sort(x.sort),B.map(n=>{const i=e[n];return i===void 0?"":i===null?R(n,x):Array.isArray(i)?i.length===0&&x.arrayFormat==="bracket-separator"?R(n,x)+"[]":i.reduce(t(n),[]).join("&"):R(n,x)+"="+R(i,x)}).filter(n=>n.length>0).join("&")}function g9(e,x){x={decode:!0,...x};let[E,t]=f9(e,"#");return E===void 0&&(E=e),{url:E?.split("?")?.[0]??"",query:jE(RE(e),x),...x&&x.parseFragmentIdentifier&&t?{fragmentIdentifier:r0(t,x)}:{}}}function _9(e,x){x={encode:!0,strict:!0,[wE]:!0,...x};const E=p9(e.url).split("?")[0]||"",t=RE(e.url),A={...jE(t,{sort:!1}),...e.query};let B=m9(A,x);B&&(B=`?${B}`);let n=qe(e.url);if(e.fragmentIdentifier){const i=new URL(E);i.hash=e.fragmentIdentifier,n=x[wE]?i.hash:`#${e.fragmentIdentifier}`}return`${E}${B}${n}`}function v9(e,x,E){E={parseFragmentIdentifier:!0,[wE]:!1,...E};const{url:t,query:A,fragmentIdentifier:B}=g9(e,E);return _9({url:t,query:He(A,x),fragmentIdentifier:B},E)}function ze(e,x,E){const t=Array.isArray(x)?A=>!x.includes(A):(A,B)=>!x(A,B);return v9(e,t,E)}const Ge=Object.freeze(Object.defineProperty({__proto__:null,extract:RE,parse:jE,stringify:m9,parseUrl:g9,stringifyUrl:_9,pick:v9,exclude:ze},Symbol.toStringTag,{value:"Module"}));/**
 * @classdesc Midi Event abstract Structure
 * @author    imaya
 * @license   MIT
 */class VE{static events={};constructor(x,E,t){this.subtype=x,this.deltaTime=E,this.time=t}}class V extends VE{static table={8:"NoteOff",9:"NoteOn",10:"PolyPressure",11:"ControllerChange",12:"ProgramChange",13:"ChannelPressure",14:"PitchBend",15:"SystemCommonMessage"};constructor(x,E,t,A,B,n){super(x,E,t),this.channel=A,this.parameter1=B,this.parameter2=n}}class Y0 extends VE{static table={0:"SystemExclusive",1:"TimeCode",2:"SongPosition",3:"SongSelect",4:void 0,5:void 0,6:"TuneRequest",7:"SystemExclusive(F7)",8:"TimingClock",9:void 0,10:"Start",11:"Continue",12:"Stop",13:void 0,14:"ActiveSensing"};constructor(x,E,t,A){super(x,E,t),this.data=A}}class N extends VE{static table={0:"SequenceNumber",1:"TextEvent",2:"CopyrightNotice",3:"SequenceTrackName",4:"InstrumentName",5:"Lyrics",6:"Marker",7:"CuePoint",8:"ProgramName",9:"DeviceName",32:"MidiChannelPrefix",33:"ChannelPrefixOrPort",47:"EndOfTrack",75:"M-LiveTag",81:"SetTempo",84:"SmpteOffset",88:"TimeSignature",89:"KeySignature",127:"SequencerSpecific"};constructor(x,E,t,A){super(x,E,t),this.data=A}}/**
 * @class     PSGConverter
 * @classdesc Mabinogi MML and Maple Story 2 MML to MIDI Converter.
 * @version   3.0.5
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2007-2023 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class D0{static PATTERN=/[a-glnortv<>][+#-]?\d*\.?&?/g;static NOTE_TABLE={c:0,d:2,e:4,f:5,g:7,a:9,b:11};static VELOCITY_MAGNIFICATION=7;constructor(x={timeDivision:96,channel:0,timeOffset:0,mml:[]}){this.timeDivision=x.timeDivision?parseInt(x.timeDivision):96,this.channel=x.channel?parseInt(x.channel):0,this.timeOffset=x.timeOffset?parseInt(x.timeOffset):0,this.MINIM=this.timeDivision*2,this.SEMIBREVE=this.timeDivision*4,this.mml=x.mml,this.events=[],this.endTime=0,this.noteOffNegativeOffset=2,this.ignoreTempo=x.igonreTempo||!1,this.maxOctave=x.maxOctave||8,this.minOctave=x.minOctave||0,this.octaveMode=x.octaveMode||0,this.minNote=x.minNote||12,this.maxNote=x.minNote||98,this.parse()}parse(){let x=[];try{x=this.mml.toLowerCase().match(D0.PATTERN)}catch{return}if(!x)return;let E=this.timeOffset,t=this.timeDivision,A=0,B=8,n=4,i=!1;const r=[];for(const s of x){let o=t|0,a="",l=0;const h=s.match(/([lotv<>])([1-9]\d*|0?)(\.?)(&?)/);if(h)switch(a=h[1].toLowerCase(),l=parseInt(h[2]),i&&h[4]!=="&"&&(i=!1,r.push(new V("NoteOff",0,E-this.noteOffNegativeOffset,this.channel,A))),a){case"l":l>=1&&l<=this.MINIM&&(t=Math.floor(this.SEMIBREVE/l),RegExp.$3==="."&&(t=Math.floor(t*1.5)));break;case"o":l>=this.minOctave&&l<=this.maxOctave&&(n=l);break;case"t":r.push(new N("SetTempo",0,E,[Math.floor(6e7/l)]));break;case"v":l>=0&&l<=15&&(B=l);break;case"<":n=n<=this.minOctave?this.minOctave:n-1;break;case">":n=n>=this.maxOctave?this.maxOctave:n+1;break}else if(s.match(/([a-gn])([+#-]?)(\d*)(\.?)(&?)/)){let c=0;switch(a=RegExp.$1.toLowerCase(),l=RegExp.$3|0,a==="n"?c=l:(l>=1&&l<=this.MINIM&&(o=Math.floor(this.SEMIBREVE/l)),RegExp.$4==="."&&(o=Math.floor(o*1.5)),this.octaveMode!==2&&(c=12*n+D0.NOTE_TABLE[a],RegExp.$2==="+"||RegExp.$2==="#"?c++:RegExp.$2==="-"&&c--)),this.octaveMode){case 1:for(;c<this.minNote;)c=c+12;for(;c>this.maxNote;)c=c-12;c+=12;break;case 2:c=this.maxNote;break;default:c+=12;break}i?c!==A&&r.push(new V("NoteOff",0,E-this.noteOffNegativeOffset,this.channel,A)):r.push(new V("NoteOn",0,E,this.channel,c,B*D0.VELOCITY_MAGNIFICATION)),E+=o,RegExp.$5==="&"?(i=!0,A=c):(i=!1,r.push(new V("NoteOff",0,E-this.noteOffNegativeOffset,this.channel,c)))}else s.match(/R(\d*)(\.?)/i)&&(l=RegExp.$1|0,l>=1&&l<=this.MINIM&&(o=Math.floor(this.SEMIBREVE/l)),RegExp.$2==="."&&(o=Math.floor(o*1.5)),E+=o)}this.events=r,this.endTime=E}}const{hasOwnProperty:lE}=Object.prototype,Sx=typeof process<"u"&&process.platform==="win32"?`\r
`:`
`,SE=(e,x)=>{const E=[];let t="";typeof x=="string"?x={section:x,whitespace:!1}:(x=x||Object.create(null),x.whitespace=x.whitespace===!0);const A=x.whitespace?" = ":"=";for(const B of Object.keys(e)){const n=e[B];if(n&&Array.isArray(n))for(const i of n)t+=V0(B+"[]")+A+V0(i)+Sx;else n&&typeof n=="object"?E.push(B):t+=V0(B)+A+V0(n)+Sx}x.section&&t.length&&(t="["+V0(x.section)+"]"+Sx+t);for(const B of E){const n=T9(B).join("\\."),i=(x.section?x.section+".":"")+n,{whitespace:r}=x,s=SE(e[B],{section:i,whitespace:r});t.length&&s.length&&(t+=Sx),t+=s}return t},T9=e=>e.replace(/\1/g,"LITERAL\\1LITERAL").replace(/\\\./g,"").split(/\./).map(x=>x.replace(/\1/g,"\\.").replace(/\2LITERAL\\1LITERAL\2/g,"")),T8=e=>{const x=Object.create(null);let E=x,t=null;const A=/^\[([^\]]*)\]$|^([^=]+)(=(.*))?$/i,B=e.split(/[\r\n]+/g);for(const i of B){if(!i||i.match(/^\s*[;#]/))continue;const r=i.match(A);if(!r)continue;if(r[1]!==void 0){if(t=Ux(r[1]),t==="__proto__"){E=Object.create(null);continue}E=x[t]=x[t]||Object.create(null);continue}const s=Ux(r[2]),o=s.length>2&&s.slice(-2)==="[]",a=o?s.slice(0,-2):s;if(a==="__proto__")continue;const l=r[3]?Ux(r[4]):!0,h=l==="true"||l==="false"||l==="null"?JSON.parse(l):l;o&&(lE.call(E,a)?Array.isArray(E[a])||(E[a]=[E[a]]):E[a]=[]),Array.isArray(E[a])?E[a].push(h):E[a]=h}const n=[];for(const i of Object.keys(x)){if(!lE.call(x,i)||typeof x[i]!="object"||Array.isArray(x[i]))continue;const r=T9(i);E=x;const s=r.pop(),o=s.replace(/\\\./g,".");for(const a of r)a!=="__proto__"&&((!lE.call(E,a)||typeof E[a]!="object")&&(E[a]=Object.create(null)),E=E[a]);E===x&&o===s||(E[o]=x[i],n.push(i))}for(const i of n)delete x[i];return x},b9=e=>e.startsWith('"')&&e.endsWith('"')||e.startsWith("'")&&e.endsWith("'"),V0=e=>typeof e!="string"||e.match(/[=\r\n]/)||e.match(/^\[/)||e.length>1&&b9(e)||e!==e.trim()?JSON.stringify(e):e.split(";").join("\\;").split("#").join("\\#"),Ux=(e,x)=>{if(e=(e||"").trim(),b9(e)){e.charAt(0)==="'"&&(e=e.slice(1,-1));try{e=JSON.parse(e)}catch{}}else{let E=!1,t="";for(let A=0,B=e.length;A<B;A++){const n=e.charAt(A);if(E)"\\;#".indexOf(n)!==-1?t+=n:t+="\\"+n,E=!1;else{if(";#".indexOf(n)!==-1)break;n==="\\"?E=!0:t+=n}}return E&&(t+="\\"),t.trim()}return e};var Xe={parse:T8,decode:T8,stringify:SE,encode:SE,safe:V0,unsafe:Ux};/**
 * @classdesc MakiMabi Sequence File Parser
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2019,2023 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class Ex{static mmsInstTable=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,65,66,67,68,69,70,71,72,73,74,75,76,18];constructor(x,E={}){const t=String.fromCharCode.apply("",new Uint16Array(x));this.input=Xe.parse(t)||{},this.tracks=[],this.plainTracks=[],this.numberOfTracks=1,this.timeDivision=E.timeDivision?parseInt(E.timeDivision):96}parse(){this.parseHeader(),this.parseTracks(),this.toPlainTrack()}parseHeader(){this.encoder=new TextEncoder("shift_jis");const x=this.input.infomation||{};this.title=x.title||"",this.author=x.auther||"",this.timeDivision=x.timeBase?parseInt(x.timeBase):96;const E=[];E.push(new Y0("SystemExclusive",0,0,[126,127,9,1])),E.push(new N("SequenceTrackName",0,0,[this.title])),E.push(new N("CopyrightNotice",0,0,[this.author])),E.push(new N("TimeSignature",0,0,[parseInt(x.rythmNum)||4,parseInt(x.rythmBase)||4,0,0])),E.push(new N("EndOfTrack",0,0)),this.tracks.push(E),delete this.input.infomation,delete this.input["mms-file"]}parseTracks(){let x=[];const E=[];let t=0;for(const A in this.input){if(!Object.prototype.hasOwnProperty.call(this.input,A))continue;const B=this.input[A],n=[B.ch0_mml,B.ch1_mml,B.ch2_mml],i=parseInt(B.panpot)+64;x.push(new N("InsturumentName",0,48,[B.name])),x.push(new V("ProgramChange",0,96,t,Ex.mmsInstTable[B.instrument])),x.push(new V("ControlChange",0,154,t,10,i));for(const r in n){if(!Object.prototype.hasOwnProperty.call(n,r))continue;const s=new D0({timeDivision:this.timeDivision,channel:t,timeOffset:386,mml:n[r]});x=x.concat(s.events),E.push(s.endTime)}t++,x.concat(new N("EndOfTrack",0,Math.max(E))),this.tracks.push(x)}this.numberOfTracks=this.tracks.length}toPlainTrack(){for(let x=0;x<this.tracks.length;x++){let E=[],t=[];const A=this.tracks[x];for(const B of A){let n;if(B instanceof V)switch(B.subtype){case"NoteOn":B.parameter2===0?n=new Uint8Array([128|B.channel,B.parameter1,B.parameter2]):n=new Uint8Array([144|B.channel,B.parameter1,B.parameter2]);break;case"NoteOff":n=new Uint8Array([128|B.channel,B.parameter1,B.parameter2]);break;case"ControlChange":n=new Uint8Array([176|B.channel,B.parameter1,B.parameter2]);break;case"ProgramChange":n=new Uint8Array([192|B.channel,B.parameter1]);break}else if(B instanceof N){const i=this.encoder.encode(B.data);switch(B.subtype){case"TextEvent":n=new Uint8Array([255,1].concat(i));break;case"SequenceTrackName":n=new Uint8Array([255,3].concat(i));break;case"CopyrightNotice":n=new Uint8Array([255,2].concat(i));break;case"InsturumentName":n=new Uint8Array([255,4].concat(i));break;case"SetTempo":n=new Uint8Array([255,81].concat(i));break;case"TimeSignature":n=new Uint8Array([255,88].concat(i));break;case"EndOfTrack":n=new Uint8Array([255,47]);break}}else B instanceof Y0&&(n=new Uint8Array([240,5].concat(B.data)));t=t.concat(n)}E=E.concat(t),this.plainTracks[x]=E}}}/**
 * @classdesc Three Macro Language Editor (3MLE) mml file Parser
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2019 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class Ze extends Ex{constructor(x,E={}){super(x,E)}parse(){this.parseHeader(),this.parseTracks(),this.toPlainTrack()}parseHeader(){const x=this.input.Settings;this.encoder=new TextEncoder(x.Encoding||"shift_jis"),this.title=x.Title,this.author=x.Source,this.timeDivision=x.TimeBase?parseInt(x.TimeBase):32;const E=[];E.push(new Y0("SystemExclusive",0,0,[126,127,9,1])),E.push(new N("SequenceTrackName",0,0,[this.title])),E.push(new N("CopyrightNotice",0,0,[this.author])),E.push(new N("TextEvent",0,0,[x.Memo])),E.push(new N("TimeSignature",0,0,[x.TimeSignatureNN?parseInt(x.TimeSignatureNN):4,x.TimeSignatureDD?parseInt(x.TimeSignatureDD):4,0,0])),E.push(new N("EndOfTrack",0,0)),this.tracks.push(E),delete this.input["3MLE EXTENSION"],delete this.input.Settings}parseTracks(){const x=this.input,E=[],t=[],A=[];for(const n in this.input)Object.prototype.hasOwnProperty.call(this.input,n)&&(n.match(/^Channel(\d+)$/i)&&(t[(RegExp.$1|0)-1]=Object.keys(x[n]).join("").replace(/\/\*([^*]|\*[^/])*\*\//g,"")),n.match(/^ChannelProperty(\d+)$/i)&&(A[(RegExp.$1|0)-1]={name:x[n].Name,instrument:parseInt(x[n].Patch),panpot:parseInt(x[n].Pan)}));const B=[];for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(A[n]!==void 0?B[n]={mml:t[n],name:A[n].name||"",instrument:A[n].instrument||0,panpot:A[n].panpot||64}:B[n]={mml:t[n],name:"",instrument:0,panpot:64});for(const n in B){if(!Object.prototype.hasOwnProperty.call(B,n))continue;const i=n|0;let r=[];if(B[n].mml==="")return;r.push(new N("InsturumentName",0,48,[B[n].name])),r.push(new V("ProgramChange",0,96,i,B[n].instrument)),r.push(new V("ControlChange",0,154,i,10,B[n].panpot));const s=new D0({timeDivision:this.timeDivision,channel:i,timeOffset:386,mml:B[n].mml});r=r.concat(s.events),E.push(s.endTime),r.concat(new N("EndOfTrack",0,Math.max(E))),this.tracks.push(r)}this.numberOfTracks=this.tracks.length}}/**
 * @classdesc MapleStory2 Mml Parser
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2019 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class Qe extends Ex{constructor(x,E={}){super(x,E),this.encoder=new TextEncoder("utf-8");const A=new DOMParser().parseFromString(String.fromCharCode.apply("",new Uint16Array(x)),"text/xml");this.input=A.querySelectorAll("ms2 > *"),this.tracks=[],this.plainTracks=[],this.numberOfTracks=1,this.timeDivision=E.timeDivision||96}parse(){this.parseTracks(),this.toPlainTrack()}parseTracks(){let x=[];const E=[];for(const t of this.input){const A=new D0({timeDivision:this.timeDivision,channel:0,mml:this.input[t].textContent.trim(),ignoreTempo:!1});x=x.concat(A.events),E.push(A.endTime)}x.concat(new N("EndOfTrack",0,Math.max(E))),this.tracks.push(x)}}/**
 * @classdesc MabiIcco MML File Parser
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2019,2023 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class HE extends Ex{static multipleKeys=["mml-track","name","program","songProgram","panpot"];constructor(x,E={}){super(x,E),this.input=String.fromCharCode.apply("",new Uint16Array(x)).split(/\r\n|\r|\n/)||[],this.tracks=[],this.plainTracks=[],this.numberOfTracks=1,this.timeDivision=E.timeDivision?parseInt(E.timeDivision):96,this.encoder=new TextEncoder("utf-8")}parse(){this.parseHeader(),this.parseTracks(),this.toPlainTrack()}parseHeader(){const x={};let E=-1;x.track=[];for(let n=0;n<this.input.length;n++){const i=this.input[n].trim();if(n===0&&i!=="[mml-score]")throw new Error("Not MabiIcco File.");const[r,s]=i.split("=");HE.multipleKeys.includes(r)?r==="mml-track"?(E++,x.track[E]={},x.track[E].mml=s):x.track[E][r]=r==="name"?s:s|0:x[r]=s}this.title=x.title,this.author=x.author;const t=x.tempo!==""?x.tempo.split("T"):[0,120];this.timeDivision=96,this.tempo=parseInt(t[1])||120;const A=x.time.split("/"),B=[];B.push(new Y0("SystemExclusive",0,0,[126,127,9,1])),B.push(new N("SequenceTrackName",0,0,[this.title])),B.push(new N("CopyrightNotice",0,0,[this.author])),B.push(new N("TimeSignature",0,0,[parseInt(A[0])||4,parseInt(A[1])||4,0,0])),B.push(new N("SetTempo",0,0,[Math.floor(6e7/this.tempo)])),B.push(new N("EndOfTrack",0,0)),this.tracks.push(B),this.input=x.track}parseTracks(){let x=[];const E=[];for(let t=0;t<this.input.length;t++){const A=this.input[t];if(!A.mml.match(/^(?:MML@)(.*)/gm))continue;const B=RegExp.$1.split(",");x.push(new N("InsturumentName",0,48,[A.name])),x.push(new V("ProgramChange",0,96,t,A.program)),A.songProgram!==-1&&x.push(new V("ProgramChange",0,112,15,A.songProgram)),x.push(new V("ControlChange",0,154,t,10,A.panpot));for(let n=0;n<A.mml.length;n++){let i=t;if(n===3&&A.songProgram!==-1&&(i=15),B[n]===void 0)continue;const r=new D0({timeDivision:this.timeDivision,channel:i,timeOffset:386,mml:B[n],igonoreTempo:i===1});x=x.concat(r.events),E.push(r.endTime)}x.concat(new N("EndOfTrack",0,Math.max(E))),this.tracks.push(x)}this.numberOfTracks=this.tracks.length}}/**
 * @classdesc Mld Parser Class
 * @author    imaya
 * @license   MIT
 */class x5{constructor(x,E={}){this.input=x,this.ip=E.index||0,this.timeDivision=E.timeDivision||48,this.header={},this.dataInformation={},this.tracks=[]}parse(){this.parseHeader(),this.parseDataInformation(),this.parseTracks()}parseHeader(){const x=this.input;let E=this.ip;const t=this.header={},A=String.fromCharCode(x[E++],x[E++],x[E++],x[E++]);if(A!=="melo")throw new Error("invalid MFi signature:"+A);t.fileLength=(x[E++]<<24|x[E++]<<16|x[E++]<<8|x[E++])>>>0,t.trackOffset=(x[E++]<<16|x[E++])+E,t.dataMajorType=x[E++],t.dataMinorType=x[E++],t.numberOfTracks=x[E++],this.ip=E}parseDataInformation(){const x=this.input;let E=this.ip;const t=this.dataInformation={copy:null,date:null,exst:null,note:null,prot:null,sorc:null,titl:null,trac:null,vers:null};let A,B;for(;E<this.header.trackOffset;)switch(A=String.fromCharCode(x[E++],x[E++],x[E++],x[E++]),B=x[E++]<<8|x[E++],A){case"titl":case"copy":case"vers":case"date":case"prot":t[A]=String.fromCharCode.apply(null,x.subarray(E,E+=B));break;case"sorc":t[A]=x[E++];break;case"note":t[A]=x[E++]<<8|x[E++];break;case"exst":break;default:t[A]=x.subarray(E,E+=B);break}this.ip=E}parseTracks(){const x=this.input;let E=this.ip,t,A,B,n,i,r;const s=this.tracks=[];let o,a,l;const h=()=>{const p=x[E++]<<8|x[E++],m=E+p,T=[];let C;if(x[E++]!==1)throw new Error("invalid EditInstrument const value:"+x[E-1]);for(;E<m;)C={},C.part=x[E++]>>4&3,C.modulator={ML:x[E]>>5,VIV:x[E]>>4&1,EG:x[E]>>3&1,SUS:x[E]>>2&1,RR:(x[E++]&3)<<2|x[E]>>6,DR:x[E]>>4&15,AR:(x[E++]&3)<<2|x[E]>>6,SL:x[E]>>4&15,TL:(x[E++]&3)<<4|x[E]>>4,WF:x[E]>>3&1,FB:x[E++]&7},C.carrier={ML:x[E]>>5,VIV:x[E]>>4&1,EG:x[E]>>3&1,SUS:x[E]>>2&1,RR:(x[E++]&3)<<2|x[E]>>6,DR:x[E]>>4&15,AR:(x[E++]&3)<<2|x[E]>>6,SL:x[E]>>4&15,TL:(x[E++]&3)<<4|x[E]>>4,WF:x[E]>>3&1,FB:x[E++]&7},C.octaveSelect=x[E++]&3,T.push(C);return T},c=()=>{if(x[E++]!==1)throw new Error("invalid Vibrato const value:"+x[E-1]);return{part:x[E++]>>5&3,switch:x[E++]>>6}},F=()=>{const p=x[E++]<<8|x[E++],m=E+p;if(x[E++]!==17)throw new Error("invalid DeviceSpecific const value:"+x[E-1]);return{data:x.subarray(E,E+=m-E)}};for(a=0,l=this.header.numberOfTracks;a<l;++a){if(t=String.fromCharCode(x[E++],x[E++],x[E++],x[E++]),t!=="trac")throw new Error("invalid track signature:"+t);for(A=x[E++]<<24|x[E++]<<16|x[E++]<<8|x[E++],B=E+A,o=s[a]=[];E<B;){if(r={key:null,length:null,octaveShift:null,subType:null,type:null,value:{},velocity:null,voice:null},r.deltaTime=x[E++],n=x[E++],n!==255)r.type="note",r.subType="Note",r.voice=n>>6,r.key=n&63,this.dataInformation.note===1&&(i=x[E++],r.velocity=i>>2,r.octaveShift=i&3);else switch(r.type="meta",n=x[E++],n>>4){case 11:switch(n&15){case 0:r.subType="MasterVolume",r.value=x[E++];break;case 10:r.subType="DrumScale",r.value={channel:x[E]>>3&7,drum:x[E++]&1};break;default:throw new Error("unknown message type:"+n.toString(16))}break;case 12:r.subType="SetTempo",r.value={timeBase:(n&7)===7?NaN:Math.pow(2,n&7)*(n&8?15:6),tempo:x[E++]};break;case 13:switch(n&15){case 0:r.subType="Point",r.value=x[E++];break;case 13:r.subType="Loop",r.value={id:x[E]>>6,count:x[E]>>2&15,point:x[E++]&3};break;case 14:r.subType="Nop",r.value=x[E++];break;case 15:r.subType="EndOfTrack",r.value=x[E++];break;default:throw new Error("unkwnon message type:"+n.toString(16))}break;case 14:switch(n&15){case 0:r.subType="InstrumentLowPart",r.value={part:x[E]>>6,instrument:x[E++]&63};break;case 1:r.subType="InstrumentHighPart",r.value={part:x[E]>>6,instrument:x[E++]&1};break;case 2:r.subType="Volume",r.value={part:x[E]>>6,volume:x[E++]&63};break;case 3:r.subType="Valance",r.value={part:x[E]>>6,valance:x[E++]&63};break;case 4:r.subType="PitchBend",r.value={part:x[E]>>6,value:x[E++]&63};break;case 5:r.subType="ChannelAssign",r.value={part:x[E]>>6,channel:x[E++]&63};break;case 6:r.subType="VolumeChange",r.value={part:x[E]>>6,volume:(x[E++]&63)<<26>>26};break;case 7:r.subType="PitchBendRange",r.value={part:x[E]>>6,value:x[E++]&63};break;case 9:r.subType="MasterCoarseTuning",r.value={part:x[E]>>6,value:x[E++]&63};break;case 10:r.subType="Modulation",r.value={part:x[E]>>6,depth:x[E++]&63};break;default:throw new Error("unkwnon message type:"+n.toString(16))}break;case 15:switch(n&15){case 0:r.subType="EditInstrument",r.value=h();break;case 1:r.subType="Vibrato",r.value=c();break;case 15:r.subType="DeviceSpecific",r.value=F();break;default:throw new Error("unkwnon message type:"+n.toString(16))}break;default:throw new Error("unkwnon message type:"+n.toString(16))}o.push(r)}E=B}this.ip=E}convertToMidiTracks(){const x={timeDivision:this.timeDivision,trac:[],tracks:[],plainTracks:[]},E=x.tracks,t=x.plainTracks,A=this.tracks;let B,n,i,r,s,o,a,l,h,c,F,p,m;const T=[];let C;for(c=0;c<16;++c)t[c]=[],T[c]=0;for(c=0,F=A.length;c<F;++c){for(B=A[c],r=[],s=o=p=0,m=B.length;p<m;++p)switch(n=B[p],s+=n.deltaTime,n.id=o,n.time=s,n.subType){case"Nop":break;case"Note":r[o++]=n,r[o]={id:o,type:"internal",subType:"NoteOff",time:s+n.length,key:n.key,voice:n.voice,velocity:n.velocity,octaveShift:n.octaveShift},o++;break;case"InstrumentHighPart":if(i=n,n=B[++p],n.subType!=="InstrumentLowPart")throw new Error("broken instrument");r[o]={id:o,type:"internal",subType:"ProgramChange",time:s,part:n.value.part,instrument:i.value.instrument<<6|n.value.instrument},o++;break;default:r[o++]=n;break}for(r.sort((d,w)=>d.time>w.time?1:d.time<w.time?-1:d.id>w.id?1:d.id<w.id?-1:0),E[c]=[],s=p=0,m=r.length;p<m;++p){switch(n=r[p],s=n.time,n.subType){case"Note":a=this.applyOctaveShift(n.key+45,n.octaveShift),C=c*4+n.voice,C===9&&(a-=10),t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(144|C,a,n.velocity*2));break;case"NoteOff":a=this.applyOctaveShift(n.key+45,n.octaveShift),C=c*4+n.voice,C===9&&(a-=10),t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(128|C,a,n.velocity*2));break;case"ProgramChange":C=c*4+n.part,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(192|C,n.instrument));break;case"SetTempo":l=288e7/(n.value.tempo*n.value.timeBase),C=0,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(255,81,3,l>>16&255,l>>8&255,l&255));break;case"Loop":l=n.value.count,h="LOOP_"+(n.value.point===0?"START":"END")+"=ID:"+n.value.id+",COUNT:"+(l===0?-1:l),C=0,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat([255,6,h.length],h.split("").map(d=>d.charCodeAt(0))));break;case"MasterVolume":l=n.value,C=0,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(240,7,127,127,4,1,l,l,247));break;case"Modulation":C=c*4+n.value.part,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(176|C,1,n.value.depth*2));break;case"Volume":C=c*4+n.value.part,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(176|C,7,n.value.volume*2));break;case"Valance":C=c*4+n.value.part,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(176|C,10,(n.value.valance-32)*2+64));break;case"PitchBend":C=c*4+n.value.part,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(224|C,n.value.value*2,n.value.value*2));break;case"PitchBendRange":C=c*4+n.value.part,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(176|C,100,0),[0,176|C,101,0],[0,176|C,6,n.value.value*2]);break;case"MasterCoarseTuning":C=c*4+n.value.part,t[C].push(this.deltaTimeToByteArray(s-T[C]).concat(176|C,100,0),[0,176|C,101,2],[0,176|C,6,n.value.value*2]);break;default:continue}T[C]=n.time}}return this.toSMF(t)}applyOctaveShift(x,E){const t=[0,12,-24,-12];if(t[E]!==void 0)return x+t[E];throw new Error("invalid OctaveShift value:"+E)}toSMF(x){let t,A,B=[77,84,104,100,0,0,0,6,0,1,0,16,0,48],n,i,r,s;function o(a){let l;const h=a.length,c=new Array(h);for(l=0;l<h;++l)c[l]=a.charCodeAt(l);return c}if(this.dataInformation.copy!==void 0){let a=o(this.dataInformation.copy);i=a.length,a=[0,255,2].concat(this.deltaTimeToByteArray(i),a),x[0].unshift(a)}for(n=0,i=x.length;n<i;++n){const a=x[n];for(A=[],r=0,s=a.length;r<s;++r)Array.prototype.push.apply(A,a[r]);s=A.length,t=[77,84,114,107,s>>24&255,s>>16&255,s>>8&255,s&255],B=B.concat(t,A)}return new Uint8Array(B)}deltaTimeToByteArray(x){const E=[];for(;x>=128;)E.unshift(x&127|(E.length===0?0:128)),x>>>=7;return E.unshift(x|(E.length===0?0:128)),E}}const b8={version:"0.5.0-beta.0",date:"2023-02-02T01:55:42.374Z"};/**
 * @classdesc Riff Parser class
 * @author    imaya
 * @license   MIT
 */class E5{constructor(x,E={}){this.input=x,this.ip=E.index||0,this.length=E.length||x.length-this.ip,this.chunkList=[],this.offset=this.ip,this.padding=E.padding!==void 0?E.padding:!0,this.bigEndian=E.bigEndian!==void 0?E.bigEndian:!1}parse(){const x=this.length+this.offset;for(this.chunkList=[];this.ip<x;)this.parseChunk()}parseChunk(){const x=this.input;let E=this.ip,t;this.chunkList.push(new e5(String.fromCharCode(x[E++],x[E++],x[E++],x[E++]),t=this.bigEndian?(x[E++]<<24|x[E++]<<16|x[E++]<<8|x[E++])>>>0:(x[E++]|x[E++]<<8|x[E++]<<16|x[E++]<<24)>>>0,E)),E+=t,this.padding&&(E-this.offset&1)===1&&E++,this.ip=E}getChunk(x){const E=this.chunkList[x];return E===void 0?null:E}getNumberOfChunks(){return this.chunkList.length}}class e5{constructor(x,E,t){this.type=x,this.size=E,this.offset=t}}/**
 * @classdesc Standard Midi File Parser class
 * @author    imaya
 * @license   MIT
 */class t5{constructor(x,E={}){E.padding=!1,E.bigEndian=!0,this.input=x,this.ip=E.index||0,this.chunkIndex=0,this.riffParser_=new E5(x,E),this.formatType=0,this.numberOfTracks=0,this.timeDivision=480,this.tracks=[],this.plainTracks=[],this.version=b8.version,this.build=b8.build}parse(){let x=0,E=0;for(this.riffParser_.parse(),this.parseHeaderChunk(),x=0,E=this.numberOfTracks;x<E;++x)this.parseTrackChunk()}parseHeaderChunk(){const x=this.riffParser_.getChunk(this.chunkIndex++),E=this.input;let t=x.offset;if(!x||x.type!=="MThd")throw new Error("invalid header signature");this.formatType=E[t++]<<8|E[t++],this.numberOfTracks=E[t++]<<8|E[t++],this.timeDivision=E[t++]<<8|E[t++]}parseTrackChunk(){const x=this.riffParser_.getChunk(this.chunkIndex++),E=this.input;let t=x.offset,A=0,B=0,n=0,i=0,r=-1,s=-1,o=0,a=0,l=0,h=0,c=0,F,p;const m=()=>{let d=0;o=0;do o=E[t++],d=d<<7|o&127;while(o&128);return d};if(!x||x.type!=="MTrk")throw new Error("invalid header signature");A=x.offset+x.size;const T=[],C=[];for(;t<A;){if(B=m(),a+=B,l=t,c=E[t++],n=c>>4&15,i=c&15,n<8?(n=r,i=s,c=r<<4|s,t--,l--):(r=n,s=i),n!==15)F=new V(V.table[n],B,a,i,E[t++],n===12?void 0:E[t++]);else if(i!==15){if(o=m(),i===0&&E[t+o-1]!==247)throw new Error("invalid SysEx event");F=new Y0(Y0.table[i],B,a,E.subarray(t,(t+=o)-1))}else switch(n=E[t++],o=m(),n){case 0:F=new N("SequenceNumber",B,a,[E[t++],E[t++]]);break;case 1:case 2:case 3:case 4:case 5:case 6:case 7:F=new N(N.table[n],B,a,[String.fromCharCode.apply(null,E.subarray(t,t+=o))]);break;case 47:F=new N("EndOfTrack",B,a,[]);break;case 81:F=new N("SetTempo",B,a,[E[t++]<<16|E[t++]<<8|E[t++]]);break;case 84:F=new N("SmpteOffset",B,a,[E[t++],E[t++],E[t++],E[t++],E[t++]]);break;case 88:F=new N("TimeSignature",B,a,[E[t++],E[t++],E[t++],E[t++]]);break;case 89:F=new N("KeySignature",B,a,[E[t++],E[t++]]);break;case 127:F=new N("SequencerSpecific",B,a,[E.subarray(t,t+=o)]);break;default:F=new N(N.table[n],B,a,[n,E.subarray(t,t+=o)])}h=t-l,p=E.subarray(l,l+h),p[0]=c,F instanceof V&&F.subtype==="NoteOn"&&F.parameter2===0&&(F.subtype=V.table[8],p=new Uint8Array([128|F.channel,F.parameter1,F.parameter2])),C.push(p),T.push(F)}this.tracks.push(T),this.plainTracks.push(C)}}/**
 * @classdesc Midi Player Class
 * @author    imaya
 * @license   MIT
 */class A5{constructor(x="#wml",E="*"){this.tempo=5e5,this.webMidiLink=null,this.resume=0,this.pause=!0,this.ready=!1,this.position=0,this.track=[],this.timer=0,this.sequence={},this.enableCC111Loop=!1,this.enableFalcomLoop=!1,this.enableMFiLoop=!1,this.enableLoop=!1,this.tempoRate=1,this.masterVolume=16383,this.textEvent="",this.sequenceName="",this.copyright="",this.lyrics="",this.webMidiLink=null,this.length=0,this.time=0,this.timeTotal=0,this.loaded=0,this.window=window,this.target=this.window.document.querySelector(x),this.targetOrigin=E}setCC111Loop(x){this.enableCC111Loop=x}setFalcomLoop(x){this.enableFalcomLoop=x}setMFiLoop(x){this.enableMFiLoop=x}setLoop(x){this.enableLoop=x}stop(){let x;if(this.pause=!0,this.resume=window.performance.now(),this.webMidiLink)for(x=0;x<16;++x)this.webMidiLink.contentWindow.postMessage("midi,b"+x.toString(16)+",78,0",this.targetOrigin)}getWebMidiLink(){return this.webMidiLink}init(){this.stop(),this.initSequence(),this.pause=!0,this.track=null,this.resume=-1,this.text=null,this.sequence=null,this.sequenceName=null,this.copyright=null,this.lyrics=null,this.textEvent=null,this.length=0,this.position=0,this.time=0,this.timeTotal=0,this.window.clearTimeout(this.timer);const x=this;this.ready?this.sendInitMessage():this.window.addEventListener("message",E=>{if(E.target.origin!=="*"&&E.origin!==this.targetOrigin)throw Error(`Cross orgin ${E.origin} is refused.`);E.data==="link,ready"&&x.sendInitMessage()},!1)}initSequence(){this.tempo=5e5,this.position=0,this.sendInitMessage(),this.pause=!1}play(){const x=this;if(!this.webMidiLink)throw new Error("WebMidiLink not found");this.ready?this.track&&(this.length=this.track.length,this.track instanceof Array&&this.position>=this.length&&(this.position=0),this.playSequence()):this.window.addEventListener("message",E=>{if(E.target.origin!=="*"&&E.origin!==this.targetOrigin)throw Error(`Cross orgin ${E.origin} is refused.`);E.data==="link,ready"&&(x.ready=!0,x.webMidiLink.style.height=this.webMidiLink.contentWindow.document.body.scrollHeight+"px",x.playSequence())},!1)}onSequenceEnd(){this.pause=!0,this.webMidiLink.contentWindow.postMessage("endoftrack",this.targetOrigin)}sendInitMessage(){const x=this.webMidiLink.contentWindow;let E;for(E=0;E<16;++E)x.postMessage("midi,b"+E.toString(16)+",128,0",this.targetOrigin),x.postMessage("midi,b"+E.toString(16)+",07,64",this.targetOrigin),x.postMessage("midi,b"+E.toString(16)+",0a,40",this.targetOrigin),x.postMessage("midi,e"+E.toString(16)+",00,40",this.targetOrigin),x.postMessage("midi,b"+E.toString(16)+",64,00",this.targetOrigin),x.postMessage("midi,b"+E.toString(16)+",65,00",this.targetOrigin),x.postMessage("midi,b"+E.toString(16)+",06,02",this.targetOrigin),x.postMessage("midi,b"+E.toString(16)+",26,00",this.targetOrigin);this.sendGmReset()}setWebMidiLink(x="https://logue.dev/sf2synth.js/?soundfont=Yamaha XG Sound Set Ver.2.0.sf2"){const E=this,t=A=>{if(typeof A.data=="string"){const B=A.data.split(",");B[0]==="link"&&(B[1]==="ready"?(E.ready=!0,E.loaded=100,E.setMasterVolume(E.masterVolume)):B[1]==="progress"&&(E.loaded=Math.round(B[2]/B[3]*1e4)))}};if(typeof x=="string"){this.webMidiLink&&this.webMidiLink.parentNode.removeChild(this.webMidiLink),this.target.firstChild&&this.target.removeChild(this.target.firstChild);const A=document.createElement("iframe");A.src=x,A.crossOrigin="anonymous",A.allow="autoplay",A.className="wml",this.target.appendChild(A),this.window.addEventListener("message",t,!1);const B=()=>{A.style.height=this.webMidiLink.contentWindow.document.body.scrollHeight+"px"};this.window.addEventListener("load",B,!1);let n=0;this.window.addEventListener("resize",()=>{n>0&&clearTimeout(n),n=setTimeout(B,100)},!1),this.webMidiLink=A}else this.webMidiLink.addEventListener("message",t,!1)}setMasterVolume(x){this.masterVolume=x,this.webMidiLink&&this.webMidiLink.contentWindow.postMessage("midi,f0,7f,7f,04,01,"+[("0"+(x&127).toString(16)).substr(-2),("0"+(x>>7&127).toString(16)).substr(-2),"7f"].join(","),this.targetOrigin)}setTempoRate(x){this.tempoRate=x}playSequence(){const x=this,E=this.sequence.timeDivision,t=this.track,A=this.webMidiLink.contentWindow;let B=this.position||0;const n=[],i=()=>{const r=t[B].time,s=t.length;let o,a,l,h=window.performance.now();if(x.pause){x.resume=h-x.resume;return}do{switch(o=t[B].event,o.subtype){case"TextEvent":x.textEvent=o.data[0];break;case"Lyrics":x.lyrics=o.data[0];break;case"Maker":if(x.enableFalcomLoop)switch(o.data[0]){case"A":n[0]={pos:B};break;case"B":if(n[0]&&typeof n[0].pos=="number"){B=n[0].pos,x.timer=x.window.setTimeout(i,0),x.position=B;return}break}if(x.enableMFiLoop&&(a=o.data[0].match(/^LOOP_(START|END)=ID:(\d+),COUNT:(-?\d+)$/),a)){if(a[1]==="START")n[a[2]|0]=n[a[2]]||{pos:B,count:a[3]|0};else if(a[1]==="END"&&x.enableMFiLoop)if(l=n[a[2]|0],l.count!==0){l.count>0&&l.count--,B=l.pos,x.timer=x.window.setTimeout(i,0),x.position=B;return}else n[a[2]|0]=null}break;case"SetTempo":x.tempo=o.data[0];break}o.subtype==="ControlChange"&&o.parameter1===111&&(n[0]={pos:B}),A.postMessage(t[B++].webMidiLink,this.targetOrigin)}while(B<s&&t[B].time===r);if(B<s?(h=window.performance.now()-h,x.timer=x.window.setTimeout(i,x.tempo/(1e3*E)*(t[B].time-r-h)*(1/x.tempoRate))):(x.pause=!0,x.enableCC111Loop&&n[0]&&typeof n[0].pos=="number"?B=n[0].pos:x.enableLoop&&(x.initSequence(),x.playSequence())),x.position=B,x.time=r,this.timeTotal===r)return this.onSequenceEnd(),2};this.pause?(this.timer=x.window.setTimeout(i,this.resume),this.pause=!1,this.resume=-1):this.timer=x.window.setTimeout(i,this.tempo/1e3*E*this.track[0].time)}loadMidiFile(x){const E=new t5(x);this.init(),E.parse(),this.mergeMidiTracks(E)}loadMldFile(x){const E=new x5(x);this.init(),E.parse(),this.mergeMidiTracks(E.convertToMidiTracks())}loadMs2MmlFile(x){const E=new Qe(x);this.init(),E.parse(),this.mergeMidiTracks(E)}loadMakiMabiSequenceFile(x){const E=new Ex(x);this.init(),E.parse(),this.mergeMidiTracks(E)}load3MleFile(x){const E=new Ze(x);this.init(),E.parse(),this.mergeMidiTracks(E)}loadMabiIccoFile(x){const E=new HE(x);this.init(),E.parse(),this.mergeMidiTracks(E)}mergeMidiTracks(x){const E=this.track=[],t=x.tracks,A=new Array(t.length),B=x.plainTracks;let n,i,r,s,o;for(i=0,r=t.length;i<r;++i)A[i]=0;for(i=0,r=t.length;i<r;++i)for(n=t[i],s=0,o=n.length;s<o;++s)(x.formatType===0||i===0)&&(n[s].subtype==="SequenceTrackName"?this.sequenceName=n[s].data[0]:n[s].subtype==="CopyrightNotice"&&(this.copyright=n[s].data[0])),E.push({track:i,eventId:s,time:n[s].time,event:n[s],webMidiLink:"midi,"+Array.prototype.map.call(B[i][s],a=>a.toString(16)).join(",")});E.sort((a,l)=>a.time>l.time?1:a.time<l.time?-1:a.track>l.track?1:a.track<l.track?-1:a.eventId>l.eventId?1:a.eventId<l.eventId?-1:0),this.timeTotal=E.slice(-1)[0].time,this.sequence=x}getSequenceName(){return this.sequenceName}getCopyright(){return this.copyright}getLyrics(){return this.lyrics}getTextEvent(){return this.textEvent}getPosition(){return this.position}setPosition(x){this.position=x}getLength(){return this.length}sendGmReset(){this.webMidiLink&&this.webMidiLink.contentWindow.postMessage("midi,F0,7E,7F,09,01,F7",this.targetOrigin)}sendAllSoundOff(){this.webMidiLink&&this.webMidiLink.contentWindow.postMessage("midi,b0,78,0",this.targetOrigin)}getTempo(){return Math.floor(60/(this.tempo/1e6))}tick2time(x){const t=this.tempo/1e6/this.sequence.timeDivision,A=x*t|0,B=A%3600,n=B%60;return Math.floor(A/3600)+":"+Math.floor(B/60).toString().padStart(2,"0")+":"+Math.ceil(n).toString().padStart(2,"0")}getTime(){return this.tick2time(this.time)}getTotalTime(){return this.tick2time(this.timeTotal)}}var H="top",Y="bottom",q="right",W="left",qx="auto",ex=[H,Y,q,W],O0="start",q0="end",y9="clippingParents",WE="viewport",H0="popper",w9="reference",OE=ex.reduce(function(e,x){return e.concat([x+"-"+O0,x+"-"+q0])},[]),KE=[].concat(ex,[qx]).reduce(function(e,x){return e.concat([x,x+"-"+O0,x+"-"+q0])},[]),S9="beforeRead",O9="read",I9="afterRead",L9="beforeMain",N9="main",k9="afterMain",M9="beforeWrite",$9="write",U9="afterWrite",P9=[S9,O9,I9,L9,N9,k9,M9,$9,U9];function n0(e){return e?(e.nodeName||"").toLowerCase():null}function Q(e){if(e==null)return window;if(e.toString()!=="[object Window]"){var x=e.ownerDocument;return x&&x.defaultView||window}return e}function I0(e){var x=Q(e).Element;return e instanceof x||e instanceof Element}function X(e){var x=Q(e).HTMLElement;return e instanceof x||e instanceof HTMLElement}function JE(e){if(typeof ShadowRoot>"u")return!1;var x=Q(e).ShadowRoot;return e instanceof x||e instanceof ShadowRoot}function B5(e){var x=e.state;Object.keys(x.elements).forEach(function(E){var t=x.styles[E]||{},A=x.attributes[E]||{},B=x.elements[E];!X(B)||!n0(B)||(Object.assign(B.style,t),Object.keys(A).forEach(function(n){var i=A[n];i===!1?B.removeAttribute(n):B.setAttribute(n,i===!0?"":i)}))})}function n5(e){var x=e.state,E={popper:{position:x.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(x.elements.popper.style,E.popper),x.styles=E,x.elements.arrow&&Object.assign(x.elements.arrow.style,E.arrow),function(){Object.keys(x.elements).forEach(function(t){var A=x.elements[t],B=x.attributes[t]||{},n=Object.keys(x.styles.hasOwnProperty(t)?x.styles[t]:E[t]),i=n.reduce(function(r,s){return r[s]="",r},{});!X(A)||!n0(A)||(Object.assign(A.style,i),Object.keys(B).forEach(function(r){A.removeAttribute(r)}))})}}const YE={name:"applyStyles",enabled:!0,phase:"write",fn:B5,effect:n5,requires:["computeStyles"]};function A0(e){return e.split("-")[0]}var S0=Math.max,Hx=Math.min,z0=Math.round;function IE(){var e=navigator.userAgentData;return e!=null&&e.brands?e.brands.map(function(x){return x.brand+"/"+x.version}).join(" "):navigator.userAgent}function R9(){return!/^((?!chrome|android).)*safari/i.test(IE())}function G0(e,x,E){x===void 0&&(x=!1),E===void 0&&(E=!1);var t=e.getBoundingClientRect(),A=1,B=1;x&&X(e)&&(A=e.offsetWidth>0&&z0(t.width)/e.offsetWidth||1,B=e.offsetHeight>0&&z0(t.height)/e.offsetHeight||1);var n=I0(e)?Q(e):window,i=n.visualViewport,r=!R9()&&E,s=(t.left+(r&&i?i.offsetLeft:0))/A,o=(t.top+(r&&i?i.offsetTop:0))/B,a=t.width/A,l=t.height/B;return{width:a,height:l,top:o,right:s+a,bottom:o+l,left:s,x:s,y:o}}function qE(e){var x=G0(e),E=e.offsetWidth,t=e.offsetHeight;return Math.abs(x.width-E)<=1&&(E=x.width),Math.abs(x.height-t)<=1&&(t=x.height),{x:e.offsetLeft,y:e.offsetTop,width:E,height:t}}function j9(e,x){var E=x.getRootNode&&x.getRootNode();if(e.contains(x))return!0;if(E&&JE(E)){var t=x;do{if(t&&e.isSameNode(t))return!0;t=t.parentNode||t.host}while(t)}return!1}function a0(e){return Q(e).getComputedStyle(e)}function i5(e){return["table","td","th"].indexOf(n0(e))>=0}function p0(e){return((I0(e)?e.ownerDocument:e.document)||window.document).documentElement}function zx(e){return n0(e)==="html"?e:e.assignedSlot||e.parentNode||(JE(e)?e.host:null)||p0(e)}function y8(e){return!X(e)||a0(e).position==="fixed"?null:e.offsetParent}function r5(e){var x=/firefox/i.test(IE()),E=/Trident/i.test(IE());if(E&&X(e)){var t=a0(e);if(t.position==="fixed")return null}var A=zx(e);for(JE(A)&&(A=A.host);X(A)&&["html","body"].indexOf(n0(A))<0;){var B=a0(A);if(B.transform!=="none"||B.perspective!=="none"||B.contain==="paint"||["transform","perspective"].indexOf(B.willChange)!==-1||x&&B.willChange==="filter"||x&&B.filter&&B.filter!=="none")return A;A=A.parentNode}return null}function Fx(e){for(var x=Q(e),E=y8(e);E&&i5(E)&&a0(E).position==="static";)E=y8(E);return E&&(n0(E)==="html"||n0(E)==="body"&&a0(E).position==="static")?x:E||r5(e)||x}function zE(e){return["top","bottom"].indexOf(e)>=0?"x":"y"}function ox(e,x,E){return S0(e,Hx(x,E))}function s5(e,x,E){var t=ox(e,x,E);return t>E?E:t}function V9(){return{top:0,right:0,bottom:0,left:0}}function H9(e){return Object.assign({},V9(),e)}function W9(e,x){return x.reduce(function(E,t){return E[t]=e,E},{})}var o5=function(x,E){return x=typeof x=="function"?x(Object.assign({},E.rects,{placement:E.placement})):x,H9(typeof x!="number"?x:W9(x,ex))};function a5(e){var x,E=e.state,t=e.name,A=e.options,B=E.elements.arrow,n=E.modifiersData.popperOffsets,i=A0(E.placement),r=zE(i),s=[W,q].indexOf(i)>=0,o=s?"height":"width";if(!(!B||!n)){var a=o5(A.padding,E),l=qE(B),h=r==="y"?H:W,c=r==="y"?Y:q,F=E.rects.reference[o]+E.rects.reference[r]-n[r]-E.rects.popper[o],p=n[r]-E.rects.reference[r],m=Fx(B),T=m?r==="y"?m.clientHeight||0:m.clientWidth||0:0,C=F/2-p/2,d=a[h],w=T-l[o]-a[c],I=T/2-l[o]/2+C,L=ox(d,I,w),$=r;E.modifiersData[t]=(x={},x[$]=L,x.centerOffset=L-I,x)}}function l5(e){var x=e.state,E=e.options,t=E.element,A=t===void 0?"[data-popper-arrow]":t;A!=null&&(typeof A=="string"&&(A=x.elements.popper.querySelector(A),!A)||j9(x.elements.popper,A)&&(x.elements.arrow=A))}const K9={name:"arrow",enabled:!0,phase:"main",fn:a5,effect:l5,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function X0(e){return e.split("-")[1]}var C5={top:"auto",right:"auto",bottom:"auto",left:"auto"};function F5(e){var x=e.x,E=e.y,t=window,A=t.devicePixelRatio||1;return{x:z0(x*A)/A||0,y:z0(E*A)/A||0}}function w8(e){var x,E=e.popper,t=e.popperRect,A=e.placement,B=e.variation,n=e.offsets,i=e.position,r=e.gpuAcceleration,s=e.adaptive,o=e.roundOffsets,a=e.isFixed,l=n.x,h=l===void 0?0:l,c=n.y,F=c===void 0?0:c,p=typeof o=="function"?o({x:h,y:F}):{x:h,y:F};h=p.x,F=p.y;var m=n.hasOwnProperty("x"),T=n.hasOwnProperty("y"),C=W,d=H,w=window;if(s){var I=Fx(E),L="clientHeight",$="clientWidth";if(I===Q(E)&&(I=p0(E),a0(I).position!=="static"&&i==="absolute"&&(L="scrollHeight",$="scrollWidth")),I=I,A===H||(A===W||A===q)&&B===q0){d=Y;var u=a&&I===w&&w.visualViewport?w.visualViewport.height:I[L];F-=u-t.height,F*=r?1:-1}if(A===W||(A===H||A===Y)&&B===q0){C=q;var f=a&&I===w&&w.visualViewport?w.visualViewport.width:I[$];h-=f-t.width,h*=r?1:-1}}var v=Object.assign({position:i},s&&C5),g=o===!0?F5({x:h,y:F}):{x:h,y:F};if(h=g.x,F=g.y,r){var O;return Object.assign({},v,(O={},O[d]=T?"0":"",O[C]=m?"0":"",O.transform=(w.devicePixelRatio||1)<=1?"translate("+h+"px, "+F+"px)":"translate3d("+h+"px, "+F+"px, 0)",O))}return Object.assign({},v,(x={},x[d]=T?F+"px":"",x[C]=m?h+"px":"",x.transform="",x))}function c5(e){var x=e.state,E=e.options,t=E.gpuAcceleration,A=t===void 0?!0:t,B=E.adaptive,n=B===void 0?!0:B,i=E.roundOffsets,r=i===void 0?!0:i,s={placement:A0(x.placement),variation:X0(x.placement),popper:x.elements.popper,popperRect:x.rects.popper,gpuAcceleration:A,isFixed:x.options.strategy==="fixed"};x.modifiersData.popperOffsets!=null&&(x.styles.popper=Object.assign({},x.styles.popper,w8(Object.assign({},s,{offsets:x.modifiersData.popperOffsets,position:x.options.strategy,adaptive:n,roundOffsets:r})))),x.modifiersData.arrow!=null&&(x.styles.arrow=Object.assign({},x.styles.arrow,w8(Object.assign({},s,{offsets:x.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:r})))),x.attributes.popper=Object.assign({},x.attributes.popper,{"data-popper-placement":x.placement})}const GE={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:c5,data:{}};var Ox={passive:!0};function D5(e){var x=e.state,E=e.instance,t=e.options,A=t.scroll,B=A===void 0?!0:A,n=t.resize,i=n===void 0?!0:n,r=Q(x.elements.popper),s=[].concat(x.scrollParents.reference,x.scrollParents.popper);return B&&s.forEach(function(o){o.addEventListener("scroll",E.update,Ox)}),i&&r.addEventListener("resize",E.update,Ox),function(){B&&s.forEach(function(o){o.removeEventListener("scroll",E.update,Ox)}),i&&r.removeEventListener("resize",E.update,Ox)}}const XE={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:D5,data:{}};var u5={left:"right",right:"left",bottom:"top",top:"bottom"};function Px(e){return e.replace(/left|right|bottom|top/g,function(x){return u5[x]})}var f5={start:"end",end:"start"};function S8(e){return e.replace(/start|end/g,function(x){return f5[x]})}function ZE(e){var x=Q(e),E=x.pageXOffset,t=x.pageYOffset;return{scrollLeft:E,scrollTop:t}}function QE(e){return G0(p0(e)).left+ZE(e).scrollLeft}function h5(e,x){var E=Q(e),t=p0(e),A=E.visualViewport,B=t.clientWidth,n=t.clientHeight,i=0,r=0;if(A){B=A.width,n=A.height;var s=R9();(s||!s&&x==="fixed")&&(i=A.offsetLeft,r=A.offsetTop)}return{width:B,height:n,x:i+QE(e),y:r}}function d5(e){var x,E=p0(e),t=ZE(e),A=(x=e.ownerDocument)==null?void 0:x.body,B=S0(E.scrollWidth,E.clientWidth,A?A.scrollWidth:0,A?A.clientWidth:0),n=S0(E.scrollHeight,E.clientHeight,A?A.scrollHeight:0,A?A.clientHeight:0),i=-t.scrollLeft+QE(e),r=-t.scrollTop;return a0(A||E).direction==="rtl"&&(i+=S0(E.clientWidth,A?A.clientWidth:0)-B),{width:B,height:n,x:i,y:r}}function x8(e){var x=a0(e),E=x.overflow,t=x.overflowX,A=x.overflowY;return/auto|scroll|overlay|hidden/.test(E+A+t)}function J9(e){return["html","body","#document"].indexOf(n0(e))>=0?e.ownerDocument.body:X(e)&&x8(e)?e:J9(zx(e))}function ax(e,x){var E;x===void 0&&(x=[]);var t=J9(e),A=t===((E=e.ownerDocument)==null?void 0:E.body),B=Q(t),n=A?[B].concat(B.visualViewport||[],x8(t)?t:[]):t,i=x.concat(n);return A?i:i.concat(ax(zx(n)))}function LE(e){return Object.assign({},e,{left:e.x,top:e.y,right:e.x+e.width,bottom:e.y+e.height})}function p5(e,x){var E=G0(e,!1,x==="fixed");return E.top=E.top+e.clientTop,E.left=E.left+e.clientLeft,E.bottom=E.top+e.clientHeight,E.right=E.left+e.clientWidth,E.width=e.clientWidth,E.height=e.clientHeight,E.x=E.left,E.y=E.top,E}function O8(e,x,E){return x===WE?LE(h5(e,E)):I0(x)?p5(x,E):LE(d5(p0(e)))}function m5(e){var x=ax(zx(e)),E=["absolute","fixed"].indexOf(a0(e).position)>=0,t=E&&X(e)?Fx(e):e;return I0(t)?x.filter(function(A){return I0(A)&&j9(A,t)&&n0(A)!=="body"}):[]}function g5(e,x,E,t){var A=x==="clippingParents"?m5(e):[].concat(x),B=[].concat(A,[E]),n=B[0],i=B.reduce(function(r,s){var o=O8(e,s,t);return r.top=S0(o.top,r.top),r.right=Hx(o.right,r.right),r.bottom=Hx(o.bottom,r.bottom),r.left=S0(o.left,r.left),r},O8(e,n,t));return i.width=i.right-i.left,i.height=i.bottom-i.top,i.x=i.left,i.y=i.top,i}function Y9(e){var x=e.reference,E=e.element,t=e.placement,A=t?A0(t):null,B=t?X0(t):null,n=x.x+x.width/2-E.width/2,i=x.y+x.height/2-E.height/2,r;switch(A){case H:r={x:n,y:x.y-E.height};break;case Y:r={x:n,y:x.y+x.height};break;case q:r={x:x.x+x.width,y:i};break;case W:r={x:x.x-E.width,y:i};break;default:r={x:x.x,y:x.y}}var s=A?zE(A):null;if(s!=null){var o=s==="y"?"height":"width";switch(B){case O0:r[s]=r[s]-(x[o]/2-E[o]/2);break;case q0:r[s]=r[s]+(x[o]/2-E[o]/2);break}}return r}function Z0(e,x){x===void 0&&(x={});var E=x,t=E.placement,A=t===void 0?e.placement:t,B=E.strategy,n=B===void 0?e.strategy:B,i=E.boundary,r=i===void 0?y9:i,s=E.rootBoundary,o=s===void 0?WE:s,a=E.elementContext,l=a===void 0?H0:a,h=E.altBoundary,c=h===void 0?!1:h,F=E.padding,p=F===void 0?0:F,m=H9(typeof p!="number"?p:W9(p,ex)),T=l===H0?w9:H0,C=e.rects.popper,d=e.elements[c?T:l],w=g5(I0(d)?d:d.contextElement||p0(e.elements.popper),r,o,n),I=G0(e.elements.reference),L=Y9({reference:I,element:C,strategy:"absolute",placement:A}),$=LE(Object.assign({},C,L)),u=l===H0?$:I,f={top:w.top-u.top+m.top,bottom:u.bottom-w.bottom+m.bottom,left:w.left-u.left+m.left,right:u.right-w.right+m.right},v=e.modifiersData.offset;if(l===H0&&v){var g=v[A];Object.keys(f).forEach(function(O){var k=[q,Y].indexOf(O)>=0?1:-1,U=[H,Y].indexOf(O)>=0?"y":"x";f[O]+=g[U]*k})}return f}function _5(e,x){x===void 0&&(x={});var E=x,t=E.placement,A=E.boundary,B=E.rootBoundary,n=E.padding,i=E.flipVariations,r=E.allowedAutoPlacements,s=r===void 0?KE:r,o=X0(t),a=o?i?OE:OE.filter(function(c){return X0(c)===o}):ex,l=a.filter(function(c){return s.indexOf(c)>=0});l.length===0&&(l=a);var h=l.reduce(function(c,F){return c[F]=Z0(e,{placement:F,boundary:A,rootBoundary:B,padding:n})[A0(F)],c},{});return Object.keys(h).sort(function(c,F){return h[c]-h[F]})}function v5(e){if(A0(e)===qx)return[];var x=Px(e);return[S8(e),x,S8(x)]}function T5(e){var x=e.state,E=e.options,t=e.name;if(!x.modifiersData[t]._skip){for(var A=E.mainAxis,B=A===void 0?!0:A,n=E.altAxis,i=n===void 0?!0:n,r=E.fallbackPlacements,s=E.padding,o=E.boundary,a=E.rootBoundary,l=E.altBoundary,h=E.flipVariations,c=h===void 0?!0:h,F=E.allowedAutoPlacements,p=x.options.placement,m=A0(p),T=m===p,C=r||(T||!c?[Px(p)]:v5(p)),d=[p].concat(C).reduce(function(U0,F0){return U0.concat(A0(F0)===qx?_5(x,{placement:F0,boundary:o,rootBoundary:a,padding:s,flipVariations:c,allowedAutoPlacements:F}):F0)},[]),w=x.rects.reference,I=x.rects.popper,L=new Map,$=!0,u=d[0],f=0;f<d.length;f++){var v=d[f],g=A0(v),O=X0(v)===O0,k=[H,Y].indexOf(g)>=0,U=k?"width":"height",M=Z0(x,{placement:v,boundary:o,rootBoundary:a,altBoundary:l,padding:s}),P=k?O?q:W:O?Y:H;w[U]>I[U]&&(P=Px(P));var C0=Px(P),v0=[];if(B&&v0.push(M[g]<=0),i&&v0.push(M[P]<=0,M[C0]<=0),v0.every(function(U0){return U0})){u=v,$=!1;break}L.set(v,v0)}if($)for(var Tx=c?3:1,rE=function(F0){var ix=d.find(function(yx){var T0=L.get(yx);if(T0)return T0.slice(0,F0).every(function(sE){return sE})});if(ix)return u=ix,"break"},nx=Tx;nx>0;nx--){var bx=rE(nx);if(bx==="break")break}x.placement!==u&&(x.modifiersData[t]._skip=!0,x.placement=u,x.reset=!0)}}const q9={name:"flip",enabled:!0,phase:"main",fn:T5,requiresIfExists:["offset"],data:{_skip:!1}};function I8(e,x,E){return E===void 0&&(E={x:0,y:0}),{top:e.top-x.height-E.y,right:e.right-x.width+E.x,bottom:e.bottom-x.height+E.y,left:e.left-x.width-E.x}}function L8(e){return[H,q,Y,W].some(function(x){return e[x]>=0})}function b5(e){var x=e.state,E=e.name,t=x.rects.reference,A=x.rects.popper,B=x.modifiersData.preventOverflow,n=Z0(x,{elementContext:"reference"}),i=Z0(x,{altBoundary:!0}),r=I8(n,t),s=I8(i,A,B),o=L8(r),a=L8(s);x.modifiersData[E]={referenceClippingOffsets:r,popperEscapeOffsets:s,isReferenceHidden:o,hasPopperEscaped:a},x.attributes.popper=Object.assign({},x.attributes.popper,{"data-popper-reference-hidden":o,"data-popper-escaped":a})}const z9={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:b5};function y5(e,x,E){var t=A0(e),A=[W,H].indexOf(t)>=0?-1:1,B=typeof E=="function"?E(Object.assign({},x,{placement:e})):E,n=B[0],i=B[1];return n=n||0,i=(i||0)*A,[W,q].indexOf(t)>=0?{x:i,y:n}:{x:n,y:i}}function w5(e){var x=e.state,E=e.options,t=e.name,A=E.offset,B=A===void 0?[0,0]:A,n=KE.reduce(function(o,a){return o[a]=y5(a,x.rects,B),o},{}),i=n[x.placement],r=i.x,s=i.y;x.modifiersData.popperOffsets!=null&&(x.modifiersData.popperOffsets.x+=r,x.modifiersData.popperOffsets.y+=s),x.modifiersData[t]=n}const G9={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:w5};function S5(e){var x=e.state,E=e.name;x.modifiersData[E]=Y9({reference:x.rects.reference,element:x.rects.popper,strategy:"absolute",placement:x.placement})}const E8={name:"popperOffsets",enabled:!0,phase:"read",fn:S5,data:{}};function O5(e){return e==="x"?"y":"x"}function I5(e){var x=e.state,E=e.options,t=e.name,A=E.mainAxis,B=A===void 0?!0:A,n=E.altAxis,i=n===void 0?!1:n,r=E.boundary,s=E.rootBoundary,o=E.altBoundary,a=E.padding,l=E.tether,h=l===void 0?!0:l,c=E.tetherOffset,F=c===void 0?0:c,p=Z0(x,{boundary:r,rootBoundary:s,padding:a,altBoundary:o}),m=A0(x.placement),T=X0(x.placement),C=!T,d=zE(m),w=O5(d),I=x.modifiersData.popperOffsets,L=x.rects.reference,$=x.rects.popper,u=typeof F=="function"?F(Object.assign({},x.rects,{placement:x.placement})):F,f=typeof u=="number"?{mainAxis:u,altAxis:u}:Object.assign({mainAxis:0,altAxis:0},u),v=x.modifiersData.offset?x.modifiersData.offset[x.placement]:null,g={x:0,y:0};if(I){if(B){var O,k=d==="y"?H:W,U=d==="y"?Y:q,M=d==="y"?"height":"width",P=I[d],C0=P+p[k],v0=P-p[U],Tx=h?-$[M]/2:0,rE=T===O0?L[M]:$[M],nx=T===O0?-$[M]:-L[M],bx=x.elements.arrow,U0=h&&bx?qE(bx):{width:0,height:0},F0=x.modifiersData["arrow#persistent"]?x.modifiersData["arrow#persistent"].padding:V9(),ix=F0[k],yx=F0[U],T0=ox(0,L[M],U0[M]),sE=C?L[M]/2-Tx-T0-ix-f.mainAxis:rE-T0-ix-f.mainAxis,Ne=C?-L[M]/2+Tx+T0+yx+f.mainAxis:nx+T0+yx+f.mainAxis,oE=x.elements.arrow&&Fx(x.elements.arrow),ke=oE?d==="y"?oE.clientTop||0:oE.clientLeft||0:0,F8=(O=v?.[d])!=null?O:0,Me=P+sE-F8-ke,$e=P+Ne-F8,c8=ox(h?Hx(C0,Me):C0,P,h?S0(v0,$e):v0);I[d]=c8,g[d]=c8-P}if(i){var D8,Ue=d==="x"?H:W,Pe=d==="x"?Y:q,b0=I[w],wx=w==="y"?"height":"width",u8=b0+p[Ue],f8=b0-p[Pe],aE=[H,W].indexOf(m)!==-1,h8=(D8=v?.[w])!=null?D8:0,d8=aE?u8:b0-L[wx]-$[wx]-h8+f.altAxis,p8=aE?b0+L[wx]+$[wx]-h8-f.altAxis:f8,m8=h&&aE?s5(d8,b0,p8):ox(h?d8:u8,b0,h?p8:f8);I[w]=m8,g[w]=m8-b0}x.modifiersData[t]=g}}const X9={name:"preventOverflow",enabled:!0,phase:"main",fn:I5,requiresIfExists:["offset"]};function L5(e){return{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}}function N5(e){return e===Q(e)||!X(e)?ZE(e):L5(e)}function k5(e){var x=e.getBoundingClientRect(),E=z0(x.width)/e.offsetWidth||1,t=z0(x.height)/e.offsetHeight||1;return E!==1||t!==1}function M5(e,x,E){E===void 0&&(E=!1);var t=X(x),A=X(x)&&k5(x),B=p0(x),n=G0(e,A,E),i={scrollLeft:0,scrollTop:0},r={x:0,y:0};return(t||!t&&!E)&&((n0(x)!=="body"||x8(B))&&(i=N5(x)),X(x)?(r=G0(x,!0),r.x+=x.clientLeft,r.y+=x.clientTop):B&&(r.x=QE(B))),{x:n.left+i.scrollLeft-r.x,y:n.top+i.scrollTop-r.y,width:n.width,height:n.height}}function $5(e){var x=new Map,E=new Set,t=[];e.forEach(function(B){x.set(B.name,B)});function A(B){E.add(B.name);var n=[].concat(B.requires||[],B.requiresIfExists||[]);n.forEach(function(i){if(!E.has(i)){var r=x.get(i);r&&A(r)}}),t.push(B)}return e.forEach(function(B){E.has(B.name)||A(B)}),t}function U5(e){var x=$5(e);return P9.reduce(function(E,t){return E.concat(x.filter(function(A){return A.phase===t}))},[])}function P5(e){var x;return function(){return x||(x=new Promise(function(E){Promise.resolve().then(function(){x=void 0,E(e())})})),x}}function R5(e){var x=e.reduce(function(E,t){var A=E[t.name];return E[t.name]=A?Object.assign({},A,t,{options:Object.assign({},A.options,t.options),data:Object.assign({},A.data,t.data)}):t,E},{});return Object.keys(x).map(function(E){return x[E]})}var N8={placement:"bottom",modifiers:[],strategy:"absolute"};function k8(){for(var e=arguments.length,x=new Array(e),E=0;E<e;E++)x[E]=arguments[E];return!x.some(function(t){return!(t&&typeof t.getBoundingClientRect=="function")})}function Gx(e){e===void 0&&(e={});var x=e,E=x.defaultModifiers,t=E===void 0?[]:E,A=x.defaultOptions,B=A===void 0?N8:A;return function(i,r,s){s===void 0&&(s=B);var o={placement:"bottom",orderedModifiers:[],options:Object.assign({},N8,B),modifiersData:{},elements:{reference:i,popper:r},attributes:{},styles:{}},a=[],l=!1,h={state:o,setOptions:function(m){var T=typeof m=="function"?m(o.options):m;F(),o.options=Object.assign({},B,o.options,T),o.scrollParents={reference:I0(i)?ax(i):i.contextElement?ax(i.contextElement):[],popper:ax(r)};var C=U5(R5([].concat(t,o.options.modifiers)));return o.orderedModifiers=C.filter(function(d){return d.enabled}),c(),h.update()},forceUpdate:function(){if(!l){var m=o.elements,T=m.reference,C=m.popper;if(k8(T,C)){o.rects={reference:M5(T,Fx(C),o.options.strategy==="fixed"),popper:qE(C)},o.reset=!1,o.placement=o.options.placement,o.orderedModifiers.forEach(function(f){return o.modifiersData[f.name]=Object.assign({},f.data)});for(var d=0;d<o.orderedModifiers.length;d++){if(o.reset===!0){o.reset=!1,d=-1;continue}var w=o.orderedModifiers[d],I=w.fn,L=w.options,$=L===void 0?{}:L,u=w.name;typeof I=="function"&&(o=I({state:o,options:$,name:u,instance:h})||o)}}}},update:P5(function(){return new Promise(function(p){h.forceUpdate(),p(o)})}),destroy:function(){F(),l=!0}};if(!k8(i,r))return h;h.setOptions(s).then(function(p){!l&&s.onFirstUpdate&&s.onFirstUpdate(p)});function c(){o.orderedModifiers.forEach(function(p){var m=p.name,T=p.options,C=T===void 0?{}:T,d=p.effect;if(typeof d=="function"){var w=d({state:o,name:m,instance:h,options:C}),I=function(){};a.push(w||I)}})}function F(){a.forEach(function(p){return p()}),a=[]}return h}}var j5=Gx(),V5=[XE,E8,GE,YE],H5=Gx({defaultModifiers:V5}),W5=[XE,E8,GE,YE,G9,q9,X9,K9,z9],e8=Gx({defaultModifiers:W5});const Z9=Object.freeze(Object.defineProperty({__proto__:null,popperGenerator:Gx,detectOverflow:Z0,createPopperBase:j5,createPopper:e8,createPopperLite:H5,top:H,bottom:Y,right:q,left:W,auto:qx,basePlacements:ex,start:O0,end:q0,clippingParents:y9,viewport:WE,popper:H0,reference:w9,variationPlacements:OE,placements:KE,beforeRead:S9,read:O9,afterRead:I9,beforeMain:L9,main:N9,afterMain:k9,beforeWrite:M9,write:$9,afterWrite:U9,modifierPhases:P9,applyStyles:YE,arrow:K9,computeStyles:GE,eventListeners:XE,flip:q9,hide:z9,offset:G9,popperOffsets:E8,preventOverflow:X9},Symbol.toStringTag,{value:"Module"}));/*!
  * Bootstrap v5.3.0-alpha1 (https://getbootstrap.com/)
  * Copyright 2011-2022 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */const K5=1e6,J5=1e3,NE="transitionend",Q9=e=>(e&&window.CSS&&window.CSS.escape&&(e=e.replace(/#([^\s"#']+)/g,(x,E)=>`#${CSS.escape(E)}`)),e),Y5=e=>e==null?`${e}`:Object.prototype.toString.call(e).match(/\s([a-z]+)/i)[1].toLowerCase(),q5=e=>{do e+=Math.floor(Math.random()*K5);while(document.getElementById(e));return e},z5=e=>{if(!e)return 0;let{transitionDuration:x,transitionDelay:E}=window.getComputedStyle(e);const t=Number.parseFloat(x),A=Number.parseFloat(E);return!t&&!A?0:(x=x.split(",")[0],E=E.split(",")[0],(Number.parseFloat(x)+Number.parseFloat(E))*J5)},xe=e=>{e.dispatchEvent(new Event(NE))},s0=e=>!e||typeof e!="object"?!1:(typeof e.jquery<"u"&&(e=e[0]),typeof e.nodeType<"u"),f0=e=>s0(e)?e.jquery?e[0]:e:typeof e=="string"&&e.length>0?document.querySelector(Q9(e)):null,tx=e=>{if(!s0(e)||e.getClientRects().length===0)return!1;const x=getComputedStyle(e).getPropertyValue("visibility")==="visible",E=e.closest("details:not([open])");if(!E)return x;if(E!==e){const t=e.closest("summary");if(t&&t.parentNode!==E||t===null)return!1}return x},h0=e=>!e||e.nodeType!==Node.ELEMENT_NODE||e.classList.contains("disabled")?!0:typeof e.disabled<"u"?e.disabled:e.hasAttribute("disabled")&&e.getAttribute("disabled")!=="false",Ee=e=>{if(!document.documentElement.attachShadow)return null;if(typeof e.getRootNode=="function"){const x=e.getRootNode();return x instanceof ShadowRoot?x:null}return e instanceof ShadowRoot?e:e.parentNode?Ee(e.parentNode):null},Wx=()=>{},cx=e=>{e.offsetHeight},ee=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,CE=[],G5=e=>{document.readyState==="loading"?(CE.length||document.addEventListener("DOMContentLoaded",()=>{for(const x of CE)x()}),CE.push(e)):e()},Z=()=>document.documentElement.dir==="rtl",x0=e=>{G5(()=>{const x=ee();if(x){const E=e.NAME,t=x.fn[E];x.fn[E]=e.jQueryInterface,x.fn[E].Constructor=e,x.fn[E].noConflict=()=>(x.fn[E]=t,e.jQueryInterface)}})},K=(e,x=[],E=e)=>typeof e=="function"?e(...x):E,te=(e,x,E=!0)=>{if(!E){K(e);return}const t=5,A=z5(x)+t;let B=!1;const n=({target:i})=>{i===x&&(B=!0,x.removeEventListener(NE,n),K(e))};x.addEventListener(NE,n),setTimeout(()=>{B||xe(x)},A)},t8=(e,x,E,t)=>{const A=e.length;let B=e.indexOf(x);return B===-1?!E&&t?e[A-1]:e[0]:(B+=E?1:-1,t&&(B=(B+A)%A),e[Math.max(0,Math.min(B,A-1))])},X5=/[^.]*(?=\..*)\.|.*/,Z5=/\..*/,Q5=/::\d+$/,FE={};let M8=1;const Ae={mouseenter:"mouseover",mouseleave:"mouseout"},x6=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function Be(e,x){return x&&`${x}::${M8++}`||e.uidEvent||M8++}function ne(e){const x=Be(e);return e.uidEvent=x,FE[x]=FE[x]||{},FE[x]}function E6(e,x){return function E(t){return A8(t,{delegateTarget:e}),E.oneOff&&D.off(e,t.type,x),x.apply(e,[t])}}function e6(e,x,E){return function t(A){const B=e.querySelectorAll(x);for(let{target:n}=A;n&&n!==this;n=n.parentNode)for(const i of B)if(i===n)return A8(A,{delegateTarget:n}),t.oneOff&&D.off(e,A.type,x,E),E.apply(n,[A])}}function ie(e,x,E=null){return Object.values(e).find(t=>t.callable===x&&t.delegationSelector===E)}function re(e,x,E){const t=typeof x=="string",A=t?E:x||E;let B=se(e);return x6.has(B)||(B=e),[t,A,B]}function $8(e,x,E,t,A){if(typeof x!="string"||!e)return;let[B,n,i]=re(x,E,t);x in Ae&&(n=(c=>function(F){if(!F.relatedTarget||F.relatedTarget!==F.delegateTarget&&!F.delegateTarget.contains(F.relatedTarget))return c.call(this,F)})(n));const r=ne(e),s=r[i]||(r[i]={}),o=ie(s,n,B?E:null);if(o){o.oneOff=o.oneOff&&A;return}const a=Be(n,x.replace(X5,"")),l=B?e6(e,E,n):E6(e,n);l.delegationSelector=B?E:null,l.callable=n,l.oneOff=A,l.uidEvent=a,s[a]=l,e.addEventListener(i,l,B)}function kE(e,x,E,t,A){const B=ie(x[E],t,A);B&&(e.removeEventListener(E,B,Boolean(A)),delete x[E][B.uidEvent])}function t6(e,x,E,t){const A=x[E]||{};for(const[B,n]of Object.entries(A))B.includes(t)&&kE(e,x,E,n.callable,n.delegationSelector)}function se(e){return e=e.replace(Z5,""),Ae[e]||e}const D={on(e,x,E,t){$8(e,x,E,t,!1)},one(e,x,E,t){$8(e,x,E,t,!0)},off(e,x,E,t){if(typeof x!="string"||!e)return;const[A,B,n]=re(x,E,t),i=n!==x,r=ne(e),s=r[n]||{},o=x.startsWith(".");if(typeof B<"u"){if(!Object.keys(s).length)return;kE(e,r,n,B,A?E:null);return}if(o)for(const a of Object.keys(r))t6(e,r,a,x.slice(1));for(const[a,l]of Object.entries(s)){const h=a.replace(Q5,"");(!i||x.includes(h))&&kE(e,r,n,l.callable,l.delegationSelector)}},trigger(e,x,E){if(typeof x!="string"||!e)return null;const t=ee(),A=se(x),B=x!==A;let n=null,i=!0,r=!0,s=!1;B&&t&&(n=t.Event(x,E),t(e).trigger(n),i=!n.isPropagationStopped(),r=!n.isImmediatePropagationStopped(),s=n.isDefaultPrevented());let o=new Event(x,{bubbles:i,cancelable:!0});return o=A8(o,E),s&&o.preventDefault(),r&&e.dispatchEvent(o),o.defaultPrevented&&n&&n.preventDefault(),o}};function A8(e,x={}){for(const[E,t]of Object.entries(x))try{e[E]=t}catch{Object.defineProperty(e,E,{configurable:!0,get(){return t}})}return e}const c0=new Map,cE={set(e,x,E){c0.has(e)||c0.set(e,new Map);const t=c0.get(e);!t.has(x)&&t.size!==0||t.set(x,E)},get(e,x){return c0.has(e)&&c0.get(e).get(x)||null},remove(e,x){if(!c0.has(e))return;const E=c0.get(e);E.delete(x),E.size===0&&c0.delete(e)}};function U8(e){if(e==="true")return!0;if(e==="false")return!1;if(e===Number(e).toString())return Number(e);if(e===""||e==="null")return null;if(typeof e!="string")return e;try{return JSON.parse(decodeURIComponent(e))}catch{return e}}function DE(e){return e.replace(/[A-Z]/g,x=>`-${x.toLowerCase()}`)}const o0={setDataAttribute(e,x,E){e.setAttribute(`data-bs-${DE(x)}`,E)},removeDataAttribute(e,x){e.removeAttribute(`data-bs-${DE(x)}`)},getDataAttributes(e){if(!e)return{};const x={},E=Object.keys(e.dataset).filter(t=>t.startsWith("bs")&&!t.startsWith("bsConfig"));for(const t of E){let A=t.replace(/^bs/,"");A=A.charAt(0).toLowerCase()+A.slice(1,A.length),x[A]=U8(e.dataset[t])}return x},getDataAttribute(e,x){return U8(e.getAttribute(`data-bs-${DE(x)}`))}};class Dx{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(x){return x=this._mergeConfigObj(x),x=this._configAfterMerge(x),this._typeCheckConfig(x),x}_configAfterMerge(x){return x}_mergeConfigObj(x,E){const t=s0(E)?o0.getDataAttribute(E,"config"):{};return{...this.constructor.Default,...typeof t=="object"?t:{},...s0(E)?o0.getDataAttributes(E):{},...typeof x=="object"?x:{}}}_typeCheckConfig(x,E=this.constructor.DefaultType){for(const[t,A]of Object.entries(E)){const B=x[t],n=s0(B)?"element":Y5(B);if(!new RegExp(A).test(n))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${t}" provided type "${n}" but expected type "${A}".`)}}}const A6="5.3.0-alpha1";class E0 extends Dx{constructor(x,E){super(),x=f0(x),x&&(this._element=x,this._config=this._getConfig(E),cE.set(this._element,this.constructor.DATA_KEY,this))}dispose(){cE.remove(this._element,this.constructor.DATA_KEY),D.off(this._element,this.constructor.EVENT_KEY);for(const x of Object.getOwnPropertyNames(this))this[x]=null}_queueCallback(x,E,t=!0){te(x,E,t)}_getConfig(x){return x=this._mergeConfigObj(x,this._element),x=this._configAfterMerge(x),this._typeCheckConfig(x),x}static getInstance(x){return cE.get(f0(x),this.DATA_KEY)}static getOrCreateInstance(x,E={}){return this.getInstance(x)||new this(x,typeof E=="object"?E:null)}static get VERSION(){return A6}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}static eventName(x){return`${x}${this.EVENT_KEY}`}}const uE=e=>{let x=e.getAttribute("data-bs-target");if(!x||x==="#"){let E=e.getAttribute("href");if(!E||!E.includes("#")&&!E.startsWith("."))return null;E.includes("#")&&!E.startsWith("#")&&(E=`#${E.split("#")[1]}`),x=E&&E!=="#"?E.trim():null}return Q9(x)},b={find(e,x=document.documentElement){return[].concat(...Element.prototype.querySelectorAll.call(x,e))},findOne(e,x=document.documentElement){return Element.prototype.querySelector.call(x,e)},children(e,x){return[].concat(...e.children).filter(E=>E.matches(x))},parents(e,x){const E=[];let t=e.parentNode.closest(x);for(;t;)E.push(t),t=t.parentNode.closest(x);return E},prev(e,x){let E=e.previousElementSibling;for(;E;){if(E.matches(x))return[E];E=E.previousElementSibling}return[]},next(e,x){let E=e.nextElementSibling;for(;E;){if(E.matches(x))return[E];E=E.nextElementSibling}return[]},focusableChildren(e){const x=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map(E=>`${E}:not([tabindex^="-"])`).join(",");return this.find(x,e).filter(E=>!h0(E)&&tx(E))},getSelectorFromElement(e){const x=uE(e);return x&&b.findOne(x)?x:null},getElementFromSelector(e){const x=uE(e);return x?b.findOne(x):null},getMultipleElementsFromSelector(e){const x=uE(e);return x?b.find(x):[]}},Xx=(e,x="hide")=>{const E=`click.dismiss${e.EVENT_KEY}`,t=e.NAME;D.on(document,E,`[data-bs-dismiss="${t}"]`,function(A){if(["A","AREA"].includes(this.tagName)&&A.preventDefault(),h0(this))return;const B=b.getElementFromSelector(this)||this.closest(`.${t}`);e.getOrCreateInstance(B)[x]()})},B6="alert",n6="bs.alert",oe=`.${n6}`,i6=`close${oe}`,r6=`closed${oe}`,s6="fade",o6="show";class Zx extends E0{static get NAME(){return B6}close(){if(D.trigger(this._element,i6).defaultPrevented)return;this._element.classList.remove(o6);const E=this._element.classList.contains(s6);this._queueCallback(()=>this._destroyElement(),this._element,E)}_destroyElement(){this._element.remove(),D.trigger(this._element,r6),this.dispose()}static jQueryInterface(x){return this.each(function(){const E=Zx.getOrCreateInstance(this);if(typeof x=="string"){if(E[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);E[x](this)}})}}Xx(Zx,"close");x0(Zx);const a6="button",l6="bs.button",C6=`.${l6}`,F6=".data-api",c6="active",P8='[data-bs-toggle="button"]',D6=`click${C6}${F6}`;class Qx extends E0{static get NAME(){return a6}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle(c6))}static jQueryInterface(x){return this.each(function(){const E=Qx.getOrCreateInstance(this);x==="toggle"&&E[x]()})}}D.on(document,D6,P8,e=>{e.preventDefault();const x=e.target.closest(P8);Qx.getOrCreateInstance(x).toggle()});x0(Qx);const u6="swipe",Ax=".bs.swipe",f6=`touchstart${Ax}`,h6=`touchmove${Ax}`,d6=`touchend${Ax}`,p6=`pointerdown${Ax}`,m6=`pointerup${Ax}`,g6="touch",_6="pen",v6="pointer-event",T6=40,b6={endCallback:null,leftCallback:null,rightCallback:null},y6={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class Kx extends Dx{constructor(x,E){super(),this._element=x,!(!x||!Kx.isSupported())&&(this._config=this._getConfig(E),this._deltaX=0,this._supportPointerEvents=Boolean(window.PointerEvent),this._initEvents())}static get Default(){return b6}static get DefaultType(){return y6}static get NAME(){return u6}dispose(){D.off(this._element,Ax)}_start(x){if(!this._supportPointerEvents){this._deltaX=x.touches[0].clientX;return}this._eventIsPointerPenTouch(x)&&(this._deltaX=x.clientX)}_end(x){this._eventIsPointerPenTouch(x)&&(this._deltaX=x.clientX-this._deltaX),this._handleSwipe(),K(this._config.endCallback)}_move(x){this._deltaX=x.touches&&x.touches.length>1?0:x.touches[0].clientX-this._deltaX}_handleSwipe(){const x=Math.abs(this._deltaX);if(x<=T6)return;const E=x/this._deltaX;this._deltaX=0,E&&K(E>0?this._config.rightCallback:this._config.leftCallback)}_initEvents(){this._supportPointerEvents?(D.on(this._element,p6,x=>this._start(x)),D.on(this._element,m6,x=>this._end(x)),this._element.classList.add(v6)):(D.on(this._element,f6,x=>this._start(x)),D.on(this._element,h6,x=>this._move(x)),D.on(this._element,d6,x=>this._end(x)))}_eventIsPointerPenTouch(x){return this._supportPointerEvents&&(x.pointerType===_6||x.pointerType===g6)}static isSupported(){return"ontouchstart"in document.documentElement||navigator.maxTouchPoints>0}}const w6="carousel",S6="bs.carousel",m0=`.${S6}`,ae=".data-api",O6="ArrowLeft",I6="ArrowRight",L6=500,rx="next",P0="prev",W0="left",Rx="right",N6=`slide${m0}`,fE=`slid${m0}`,k6=`keydown${m0}`,M6=`mouseenter${m0}`,$6=`mouseleave${m0}`,U6=`dragstart${m0}`,P6=`load${m0}${ae}`,R6=`click${m0}${ae}`,le="carousel",Ix="active",j6="slide",V6="carousel-item-end",H6="carousel-item-start",W6="carousel-item-next",K6="carousel-item-prev",Ce=".active",Fe=".carousel-item",J6=Ce+Fe,Y6=".carousel-item img",q6=".carousel-indicators",z6="[data-bs-slide], [data-bs-slide-to]",G6='[data-bs-ride="carousel"]',X6={[O6]:Rx,[I6]:W0},Z6={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},Q6={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class ux extends E0{constructor(x,E){super(x,E),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=b.findOne(q6,this._element),this._addEventListeners(),this._config.ride===le&&this.cycle()}static get Default(){return Z6}static get DefaultType(){return Q6}static get NAME(){return w6}next(){this._slide(rx)}nextWhenVisible(){!document.hidden&&tx(this._element)&&this.next()}prev(){this._slide(P0)}pause(){this._isSliding&&xe(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval(()=>this.nextWhenVisible(),this._config.interval)}_maybeEnableCycle(){if(this._config.ride){if(this._isSliding){D.one(this._element,fE,()=>this.cycle());return}this.cycle()}}to(x){const E=this._getItems();if(x>E.length-1||x<0)return;if(this._isSliding){D.one(this._element,fE,()=>this.to(x));return}const t=this._getItemIndex(this._getActive());if(t===x)return;const A=x>t?rx:P0;this._slide(A,E[x])}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(x){return x.defaultInterval=x.interval,x}_addEventListeners(){this._config.keyboard&&D.on(this._element,k6,x=>this._keydown(x)),this._config.pause==="hover"&&(D.on(this._element,M6,()=>this.pause()),D.on(this._element,$6,()=>this._maybeEnableCycle())),this._config.touch&&Kx.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const t of b.find(Y6,this._element))D.on(t,U6,A=>A.preventDefault());const E={leftCallback:()=>this._slide(this._directionToOrder(W0)),rightCallback:()=>this._slide(this._directionToOrder(Rx)),endCallback:()=>{this._config.pause==="hover"&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout(()=>this._maybeEnableCycle(),L6+this._config.interval))}};this._swipeHelper=new Kx(this._element,E)}_keydown(x){if(/input|textarea/i.test(x.target.tagName))return;const E=X6[x.key];E&&(x.preventDefault(),this._slide(this._directionToOrder(E)))}_getItemIndex(x){return this._getItems().indexOf(x)}_setActiveIndicatorElement(x){if(!this._indicatorsElement)return;const E=b.findOne(Ce,this._indicatorsElement);E.classList.remove(Ix),E.removeAttribute("aria-current");const t=b.findOne(`[data-bs-slide-to="${x}"]`,this._indicatorsElement);t&&(t.classList.add(Ix),t.setAttribute("aria-current","true"))}_updateInterval(){const x=this._activeElement||this._getActive();if(!x)return;const E=Number.parseInt(x.getAttribute("data-bs-interval"),10);this._config.interval=E||this._config.defaultInterval}_slide(x,E=null){if(this._isSliding)return;const t=this._getActive(),A=x===rx,B=E||t8(this._getItems(),t,A,this._config.wrap);if(B===t)return;const n=this._getItemIndex(B),i=h=>D.trigger(this._element,h,{relatedTarget:B,direction:this._orderToDirection(x),from:this._getItemIndex(t),to:n});if(i(N6).defaultPrevented||!t||!B)return;const s=Boolean(this._interval);this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(n),this._activeElement=B;const o=A?H6:V6,a=A?W6:K6;B.classList.add(a),cx(B),t.classList.add(o),B.classList.add(o);const l=()=>{B.classList.remove(o,a),B.classList.add(Ix),t.classList.remove(Ix,a,o),this._isSliding=!1,i(fE)};this._queueCallback(l,t,this._isAnimated()),s&&this.cycle()}_isAnimated(){return this._element.classList.contains(j6)}_getActive(){return b.findOne(J6,this._element)}_getItems(){return b.find(Fe,this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(x){return Z()?x===W0?P0:rx:x===W0?rx:P0}_orderToDirection(x){return Z()?x===P0?W0:Rx:x===P0?Rx:W0}static jQueryInterface(x){return this.each(function(){const E=ux.getOrCreateInstance(this,x);if(typeof x=="number"){E.to(x);return}if(typeof x=="string"){if(E[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);E[x]()}})}}D.on(document,R6,z6,function(e){const x=b.getElementFromSelector(this);if(!x||!x.classList.contains(le))return;e.preventDefault();const E=ux.getOrCreateInstance(x),t=this.getAttribute("data-bs-slide-to");if(t){E.to(t),E._maybeEnableCycle();return}if(o0.getDataAttribute(this,"slide")==="next"){E.next(),E._maybeEnableCycle();return}E.prev(),E._maybeEnableCycle()});D.on(window,P6,()=>{const e=b.find(G6);for(const x of e)ux.getOrCreateInstance(x)});x0(ux);const xt="collapse",Et="bs.collapse",fx=`.${Et}`,et=".data-api",tt=`show${fx}`,At=`shown${fx}`,Bt=`hide${fx}`,nt=`hidden${fx}`,it=`click${fx}${et}`,hE="show",J0="collapse",Lx="collapsing",rt="collapsed",st=`:scope .${J0} .${J0}`,ot="collapse-horizontal",at="width",lt="height",Ct=".collapse.show, .collapse.collapsing",ME='[data-bs-toggle="collapse"]',Ft={parent:null,toggle:!0},ct={parent:"(null|element)",toggle:"boolean"};class Cx extends E0{constructor(x,E){super(x,E),this._isTransitioning=!1,this._triggerArray=[];const t=b.find(ME);for(const A of t){const B=b.getSelectorFromElement(A),n=b.find(B).filter(i=>i===this._element);B!==null&&n.length&&this._triggerArray.push(A)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return Ft}static get DefaultType(){return ct}static get NAME(){return xt}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let x=[];if(this._config.parent&&(x=this._getFirstLevelChildren(Ct).filter(i=>i!==this._element).map(i=>Cx.getOrCreateInstance(i,{toggle:!1}))),x.length&&x[0]._isTransitioning||D.trigger(this._element,tt).defaultPrevented)return;for(const i of x)i.hide();const t=this._getDimension();this._element.classList.remove(J0),this._element.classList.add(Lx),this._element.style[t]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const A=()=>{this._isTransitioning=!1,this._element.classList.remove(Lx),this._element.classList.add(J0,hE),this._element.style[t]="",D.trigger(this._element,At)},n=`scroll${t[0].toUpperCase()+t.slice(1)}`;this._queueCallback(A,this._element,!0),this._element.style[t]=`${this._element[n]}px`}hide(){if(this._isTransitioning||!this._isShown()||D.trigger(this._element,Bt).defaultPrevented)return;const E=this._getDimension();this._element.style[E]=`${this._element.getBoundingClientRect()[E]}px`,cx(this._element),this._element.classList.add(Lx),this._element.classList.remove(J0,hE);for(const A of this._triggerArray){const B=b.getElementFromSelector(A);B&&!this._isShown(B)&&this._addAriaAndCollapsedClass([A],!1)}this._isTransitioning=!0;const t=()=>{this._isTransitioning=!1,this._element.classList.remove(Lx),this._element.classList.add(J0),D.trigger(this._element,nt)};this._element.style[E]="",this._queueCallback(t,this._element,!0)}_isShown(x=this._element){return x.classList.contains(hE)}_configAfterMerge(x){return x.toggle=Boolean(x.toggle),x.parent=f0(x.parent),x}_getDimension(){return this._element.classList.contains(ot)?at:lt}_initializeChildren(){if(!this._config.parent)return;const x=this._getFirstLevelChildren(ME);for(const E of x){const t=b.getElementFromSelector(E);t&&this._addAriaAndCollapsedClass([E],this._isShown(t))}}_getFirstLevelChildren(x){const E=b.find(st,this._config.parent);return b.find(x,this._config.parent).filter(t=>!E.includes(t))}_addAriaAndCollapsedClass(x,E){if(x.length)for(const t of x)t.classList.toggle(rt,!E),t.setAttribute("aria-expanded",E)}static jQueryInterface(x){const E={};return typeof x=="string"&&/show|hide/.test(x)&&(E.toggle=!1),this.each(function(){const t=Cx.getOrCreateInstance(this,E);if(typeof x=="string"){if(typeof t[x]>"u")throw new TypeError(`No method named "${x}"`);t[x]()}})}}D.on(document,it,ME,function(e){(e.target.tagName==="A"||e.delegateTarget&&e.delegateTarget.tagName==="A")&&e.preventDefault();for(const x of b.getMultipleElementsFromSelector(this))Cx.getOrCreateInstance(x,{toggle:!1}).toggle()});x0(Cx);const R8="dropdown",Dt="bs.dropdown",N0=`.${Dt}`,B8=".data-api",ut="Escape",j8="Tab",ft="ArrowUp",V8="ArrowDown",ht=2,dt=`hide${N0}`,pt=`hidden${N0}`,mt=`show${N0}`,gt=`shown${N0}`,ce=`click${N0}${B8}`,De=`keydown${N0}${B8}`,_t=`keyup${N0}${B8}`,K0="show",vt="dropup",Tt="dropend",bt="dropstart",yt="dropup-center",wt="dropdown-center",y0='[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',St=`${y0}.${K0}`,jx=".dropdown-menu",Ot=".navbar",It=".navbar-nav",Lt=".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",Nt=Z()?"top-end":"top-start",kt=Z()?"top-start":"top-end",Mt=Z()?"bottom-end":"bottom-start",$t=Z()?"bottom-start":"bottom-end",Ut=Z()?"left-start":"right-start",Pt=Z()?"right-start":"left-start",Rt="top",jt="bottom",Vt={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},Ht={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class B0 extends E0{constructor(x,E){super(x,E),this._popper=null,this._parent=this._element.parentNode,this._menu=b.next(this._element,jx)[0]||b.prev(this._element,jx)[0]||b.findOne(jx,this._parent),this._inNavbar=this._detectNavbar()}static get Default(){return Vt}static get DefaultType(){return Ht}static get NAME(){return R8}toggle(){return this._isShown()?this.hide():this.show()}show(){if(h0(this._element)||this._isShown())return;const x={relatedTarget:this._element};if(!D.trigger(this._element,mt,x).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(It))for(const t of[].concat(...document.body.children))D.on(t,"mouseover",Wx);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(K0),this._element.classList.add(K0),D.trigger(this._element,gt,x)}}hide(){if(h0(this._element)||!this._isShown())return;const x={relatedTarget:this._element};this._completeHide(x)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(x){if(!D.trigger(this._element,dt,x).defaultPrevented){if("ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))D.off(t,"mouseover",Wx);this._popper&&this._popper.destroy(),this._menu.classList.remove(K0),this._element.classList.remove(K0),this._element.setAttribute("aria-expanded","false"),o0.removeDataAttribute(this._menu,"popper"),D.trigger(this._element,pt,x)}}_getConfig(x){if(x=super._getConfig(x),typeof x.reference=="object"&&!s0(x.reference)&&typeof x.reference.getBoundingClientRect!="function")throw new TypeError(`${R8.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return x}_createPopper(){if(typeof Z9>"u")throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let x=this._element;this._config.reference==="parent"?x=this._parent:s0(this._config.reference)?x=f0(this._config.reference):typeof this._config.reference=="object"&&(x=this._config.reference);const E=this._getPopperConfig();this._popper=e8(x,this._menu,E)}_isShown(){return this._menu.classList.contains(K0)}_getPlacement(){const x=this._parent;if(x.classList.contains(Tt))return Ut;if(x.classList.contains(bt))return Pt;if(x.classList.contains(yt))return Rt;if(x.classList.contains(wt))return jt;const E=getComputedStyle(this._menu).getPropertyValue("--bs-position").trim()==="end";return x.classList.contains(vt)?E?kt:Nt:E?$t:Mt}_detectNavbar(){return this._element.closest(Ot)!==null}_getOffset(){const{offset:x}=this._config;return typeof x=="string"?x.split(",").map(E=>Number.parseInt(E,10)):typeof x=="function"?E=>x(E,this._element):x}_getPopperConfig(){const x={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||this._config.display==="static")&&(o0.setDataAttribute(this._menu,"popper","static"),x.modifiers=[{name:"applyStyles",enabled:!1}]),{...x,...K(this._config.popperConfig,[x])}}_selectMenuItem({key:x,target:E}){const t=b.find(Lt,this._menu).filter(A=>tx(A));t.length&&t8(t,E,x===V8,!t.includes(E)).focus()}static jQueryInterface(x){return this.each(function(){const E=B0.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof E[x]>"u")throw new TypeError(`No method named "${x}"`);E[x]()}})}static clearMenus(x){if(x.button===ht||x.type==="keyup"&&x.key!==j8)return;const E=b.find(St);for(const t of E){const A=B0.getInstance(t);if(!A||A._config.autoClose===!1)continue;const B=x.composedPath(),n=B.includes(A._menu);if(B.includes(A._element)||A._config.autoClose==="inside"&&!n||A._config.autoClose==="outside"&&n||A._menu.contains(x.target)&&(x.type==="keyup"&&x.key===j8||/input|select|option|textarea|form/i.test(x.target.tagName)))continue;const i={relatedTarget:A._element};x.type==="click"&&(i.clickEvent=x),A._completeHide(i)}}static dataApiKeydownHandler(x){const E=/input|textarea/i.test(x.target.tagName),t=x.key===ut,A=[ft,V8].includes(x.key);if(!A&&!t||E&&!t)return;x.preventDefault();const B=this.matches(y0)?this:b.prev(this,y0)[0]||b.next(this,y0)[0]||b.findOne(y0,x.delegateTarget.parentNode),n=B0.getOrCreateInstance(B);if(A){x.stopPropagation(),n.show(),n._selectMenuItem(x);return}n._isShown()&&(x.stopPropagation(),n.hide(),B.focus())}}D.on(document,De,y0,B0.dataApiKeydownHandler);D.on(document,De,jx,B0.dataApiKeydownHandler);D.on(document,ce,B0.clearMenus);D.on(document,_t,B0.clearMenus);D.on(document,ce,y0,function(e){e.preventDefault(),B0.getOrCreateInstance(this).toggle()});x0(B0);const H8=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",W8=".sticky-top",Nx="padding-right",K8="margin-right";class $E{constructor(){this._element=document.body}getWidth(){const x=document.documentElement.clientWidth;return Math.abs(window.innerWidth-x)}hide(){const x=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,Nx,E=>E+x),this._setElementAttributes(H8,Nx,E=>E+x),this._setElementAttributes(W8,K8,E=>E-x)}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,Nx),this._resetElementAttributes(H8,Nx),this._resetElementAttributes(W8,K8)}isOverflowing(){return this.getWidth()>0}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(x,E,t){const A=this.getWidth(),B=n=>{if(n!==this._element&&window.innerWidth>n.clientWidth+A)return;this._saveInitialAttribute(n,E);const i=window.getComputedStyle(n).getPropertyValue(E);n.style.setProperty(E,`${t(Number.parseFloat(i))}px`)};this._applyManipulationCallback(x,B)}_saveInitialAttribute(x,E){const t=x.style.getPropertyValue(E);t&&o0.setDataAttribute(x,E,t)}_resetElementAttributes(x,E){const t=A=>{const B=o0.getDataAttribute(A,E);if(B===null){A.style.removeProperty(E);return}o0.removeDataAttribute(A,E),A.style.setProperty(E,B)};this._applyManipulationCallback(x,t)}_applyManipulationCallback(x,E){if(s0(x)){E(x);return}for(const t of b.find(x,this._element))E(t)}}const ue="backdrop",Wt="fade",J8="show",Y8=`mousedown.bs.${ue}`,Kt={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},Jt={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class fe extends Dx{constructor(x){super(),this._config=this._getConfig(x),this._isAppended=!1,this._element=null}static get Default(){return Kt}static get DefaultType(){return Jt}static get NAME(){return ue}show(x){if(!this._config.isVisible){K(x);return}this._append();const E=this._getElement();this._config.isAnimated&&cx(E),E.classList.add(J8),this._emulateAnimation(()=>{K(x)})}hide(x){if(!this._config.isVisible){K(x);return}this._getElement().classList.remove(J8),this._emulateAnimation(()=>{this.dispose(),K(x)})}dispose(){this._isAppended&&(D.off(this._element,Y8),this._element.remove(),this._isAppended=!1)}_getElement(){if(!this._element){const x=document.createElement("div");x.className=this._config.className,this._config.isAnimated&&x.classList.add(Wt),this._element=x}return this._element}_configAfterMerge(x){return x.rootElement=f0(x.rootElement),x}_append(){if(this._isAppended)return;const x=this._getElement();this._config.rootElement.append(x),D.on(x,Y8,()=>{K(this._config.clickCallback)}),this._isAppended=!0}_emulateAnimation(x){te(x,this._getElement(),this._config.isAnimated)}}const Yt="focustrap",qt="bs.focustrap",Jx=`.${qt}`,zt=`focusin${Jx}`,Gt=`keydown.tab${Jx}`,Xt="Tab",Zt="forward",q8="backward",Qt={autofocus:!0,trapElement:null},xA={autofocus:"boolean",trapElement:"element"};class he extends Dx{constructor(x){super(),this._config=this._getConfig(x),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return Qt}static get DefaultType(){return xA}static get NAME(){return Yt}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),D.off(document,Jx),D.on(document,zt,x=>this._handleFocusin(x)),D.on(document,Gt,x=>this._handleKeydown(x)),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,D.off(document,Jx))}_handleFocusin(x){const{trapElement:E}=this._config;if(x.target===document||x.target===E||E.contains(x.target))return;const t=b.focusableChildren(E);t.length===0?E.focus():this._lastTabNavDirection===q8?t[t.length-1].focus():t[0].focus()}_handleKeydown(x){x.key===Xt&&(this._lastTabNavDirection=x.shiftKey?q8:Zt)}}const EA="modal",eA="bs.modal",e0=`.${eA}`,tA=".data-api",AA="Escape",BA=`hide${e0}`,nA=`hidePrevented${e0}`,de=`hidden${e0}`,pe=`show${e0}`,iA=`shown${e0}`,rA=`resize${e0}`,sA=`click.dismiss${e0}`,oA=`mousedown.dismiss${e0}`,aA=`keydown.dismiss${e0}`,lA=`click${e0}${tA}`,z8="modal-open",CA="fade",G8="show",dE="modal-static",FA=".modal.show",cA=".modal-dialog",DA=".modal-body",uA='[data-bs-toggle="modal"]',fA={backdrop:!0,focus:!0,keyboard:!0},hA={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class Q0 extends E0{constructor(x,E){super(x,E),this._dialog=b.findOne(cA,this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new $E,this._addEventListeners()}static get Default(){return fA}static get DefaultType(){return hA}static get NAME(){return EA}toggle(x){return this._isShown?this.hide():this.show(x)}show(x){this._isShown||this._isTransitioning||D.trigger(this._element,pe,{relatedTarget:x}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(z8),this._adjustDialog(),this._backdrop.show(()=>this._showElement(x)))}hide(){!this._isShown||this._isTransitioning||D.trigger(this._element,BA).defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove(G8),this._queueCallback(()=>this._hideModal(),this._element,this._isAnimated()))}dispose(){for(const x of[window,this._dialog])D.off(x,e0);this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new fe({isVisible:Boolean(this._config.backdrop),isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new he({trapElement:this._element})}_showElement(x){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;const E=b.findOne(DA,this._dialog);E&&(E.scrollTop=0),cx(this._element),this._element.classList.add(G8);const t=()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,D.trigger(this._element,iA,{relatedTarget:x})};this._queueCallback(t,this._dialog,this._isAnimated())}_addEventListeners(){D.on(this._element,aA,x=>{if(x.key===AA){if(this._config.keyboard){x.preventDefault(),this.hide();return}this._triggerBackdropTransition()}}),D.on(window,rA,()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()}),D.on(this._element,oA,x=>{D.one(this._element,sA,E=>{if(!(this._element!==x.target||this._element!==E.target)){if(this._config.backdrop==="static"){this._triggerBackdropTransition();return}this._config.backdrop&&this.hide()}})})}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide(()=>{document.body.classList.remove(z8),this._resetAdjustments(),this._scrollBar.reset(),D.trigger(this._element,de)})}_isAnimated(){return this._element.classList.contains(CA)}_triggerBackdropTransition(){if(D.trigger(this._element,nA).defaultPrevented)return;const E=this._element.scrollHeight>document.documentElement.clientHeight,t=this._element.style.overflowY;t==="hidden"||this._element.classList.contains(dE)||(E||(this._element.style.overflowY="hidden"),this._element.classList.add(dE),this._queueCallback(()=>{this._element.classList.remove(dE),this._queueCallback(()=>{this._element.style.overflowY=t},this._dialog)},this._dialog),this._element.focus())}_adjustDialog(){const x=this._element.scrollHeight>document.documentElement.clientHeight,E=this._scrollBar.getWidth(),t=E>0;if(t&&!x){const A=Z()?"paddingLeft":"paddingRight";this._element.style[A]=`${E}px`}if(!t&&x){const A=Z()?"paddingRight":"paddingLeft";this._element.style[A]=`${E}px`}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(x,E){return this.each(function(){const t=Q0.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof t[x]>"u")throw new TypeError(`No method named "${x}"`);t[x](E)}})}}D.on(document,lA,uA,function(e){const x=b.getElementFromSelector(this);["A","AREA"].includes(this.tagName)&&e.preventDefault(),D.one(x,pe,A=>{A.defaultPrevented||D.one(x,de,()=>{tx(this)&&this.focus()})});const E=b.findOne(FA);E&&Q0.getInstance(E).hide(),Q0.getOrCreateInstance(x).toggle(this)});Xx(Q0);x0(Q0);const dA="offcanvas",pA="bs.offcanvas",l0=`.${pA}`,me=".data-api",mA=`load${l0}${me}`,gA="Escape",X8="show",Z8="showing",Q8="hiding",_A="offcanvas-backdrop",ge=".offcanvas.show",vA=`show${l0}`,TA=`shown${l0}`,bA=`hide${l0}`,x9=`hidePrevented${l0}`,_e=`hidden${l0}`,yA=`resize${l0}`,wA=`click${l0}${me}`,SA=`keydown.dismiss${l0}`,OA='[data-bs-toggle="offcanvas"]',IA={backdrop:!0,keyboard:!0,scroll:!1},LA={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class d0 extends E0{constructor(x,E){super(x,E),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return IA}static get DefaultType(){return LA}static get NAME(){return dA}toggle(x){return this._isShown?this.hide():this.show(x)}show(x){if(this._isShown||D.trigger(this._element,vA,{relatedTarget:x}).defaultPrevented)return;this._isShown=!0,this._backdrop.show(),this._config.scroll||new $E().hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(Z8);const t=()=>{(!this._config.scroll||this._config.backdrop)&&this._focustrap.activate(),this._element.classList.add(X8),this._element.classList.remove(Z8),D.trigger(this._element,TA,{relatedTarget:x})};this._queueCallback(t,this._element,!0)}hide(){if(!this._isShown||D.trigger(this._element,bA).defaultPrevented)return;this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add(Q8),this._backdrop.hide();const E=()=>{this._element.classList.remove(X8,Q8),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||new $E().reset(),D.trigger(this._element,_e)};this._queueCallback(E,this._element,!0)}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){const x=()=>{if(this._config.backdrop==="static"){D.trigger(this._element,x9);return}this.hide()},E=Boolean(this._config.backdrop);return new fe({className:_A,isVisible:E,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:E?x:null})}_initializeFocusTrap(){return new he({trapElement:this._element})}_addEventListeners(){D.on(this._element,SA,x=>{if(x.key===gA){if(!this._config.keyboard){D.trigger(this._element,x9);return}this.hide()}})}static jQueryInterface(x){return this.each(function(){const E=d0.getOrCreateInstance(this,x);if(typeof x=="string"){if(E[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);E[x](this)}})}}D.on(document,wA,OA,function(e){const x=b.getElementFromSelector(this);if(["A","AREA"].includes(this.tagName)&&e.preventDefault(),h0(this))return;D.one(x,_e,()=>{tx(this)&&this.focus()});const E=b.findOne(ge);E&&E!==x&&d0.getInstance(E).hide(),d0.getOrCreateInstance(x).toggle(this)});D.on(window,mA,()=>{for(const e of b.find(ge))d0.getOrCreateInstance(e).show()});D.on(window,yA,()=>{for(const e of b.find("[aria-modal][class*=show][class*=offcanvas-]"))getComputedStyle(e).position!=="fixed"&&d0.getOrCreateInstance(e).hide()});Xx(d0);x0(d0);const NA=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),kA=/^aria-[\w-]*$/i,MA=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i,$A=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i,UA=(e,x)=>{const E=e.nodeName.toLowerCase();return x.includes(E)?NA.has(E)?Boolean(MA.test(e.nodeValue)||$A.test(e.nodeValue)):!0:x.filter(t=>t instanceof RegExp).some(t=>t.test(E))},ve={"*":["class","dir","id","lang","role",kA],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]};function PA(e,x,E){if(!e.length)return e;if(E&&typeof E=="function")return E(e);const A=new window.DOMParser().parseFromString(e,"text/html"),B=[].concat(...A.body.querySelectorAll("*"));for(const n of B){const i=n.nodeName.toLowerCase();if(!Object.keys(x).includes(i)){n.remove();continue}const r=[].concat(...n.attributes),s=[].concat(x["*"]||[],x[i]||[]);for(const o of r)UA(o,s)||n.removeAttribute(o.nodeName)}return A.body.innerHTML}const RA="TemplateFactory",jA={allowList:ve,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},VA={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},HA={entry:"(string|element|function|null)",selector:"(string|element)"};class WA extends Dx{constructor(x){super(),this._config=this._getConfig(x)}static get Default(){return jA}static get DefaultType(){return VA}static get NAME(){return RA}getContent(){return Object.values(this._config.content).map(x=>this._resolvePossibleFunction(x)).filter(Boolean)}hasContent(){return this.getContent().length>0}changeContent(x){return this._checkContent(x),this._config.content={...this._config.content,...x},this}toHtml(){const x=document.createElement("div");x.innerHTML=this._maybeSanitize(this._config.template);for(const[A,B]of Object.entries(this._config.content))this._setContent(x,B,A);const E=x.children[0],t=this._resolvePossibleFunction(this._config.extraClass);return t&&E.classList.add(...t.split(" ")),E}_typeCheckConfig(x){super._typeCheckConfig(x),this._checkContent(x.content)}_checkContent(x){for(const[E,t]of Object.entries(x))super._typeCheckConfig({selector:E,entry:t},HA)}_setContent(x,E,t){const A=b.findOne(t,x);if(A){if(E=this._resolvePossibleFunction(E),!E){A.remove();return}if(s0(E)){this._putElementInTemplate(f0(E),A);return}if(this._config.html){A.innerHTML=this._maybeSanitize(E);return}A.textContent=E}}_maybeSanitize(x){return this._config.sanitize?PA(x,this._config.allowList,this._config.sanitizeFn):x}_resolvePossibleFunction(x){return K(x,[this])}_putElementInTemplate(x,E){if(this._config.html){E.innerHTML="",E.append(x);return}E.textContent=x.textContent}}const KA="tooltip",JA=new Set(["sanitize","allowList","sanitizeFn"]),pE="fade",YA="modal",kx="show",qA=".tooltip-inner",E9=`.${YA}`,e9="hide.bs.modal",sx="hover",mE="focus",zA="click",GA="manual",XA="hide",ZA="hidden",QA="show",xB="shown",EB="inserted",eB="click",tB="focusin",AB="focusout",BB="mouseenter",nB="mouseleave",iB={AUTO:"auto",TOP:"top",RIGHT:Z()?"left":"right",BOTTOM:"bottom",LEFT:Z()?"right":"left"},rB={allowList:ve,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,0],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:"",trigger:"hover focus"},sB={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class k0 extends E0{constructor(x,E){if(typeof Z9>"u")throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");super(x,E),this._isEnabled=!0,this._timeout=0,this._isHovered=null,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners(),this._config.selector||this._fixTitle()}static get Default(){return rB}static get DefaultType(){return sB}static get NAME(){return KA}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(){if(this._isEnabled){if(this._activeTrigger.click=!this._activeTrigger.click,this._isShown()){this._leave();return}this._enter()}}dispose(){clearTimeout(this._timeout),D.off(this._element.closest(E9),e9,this._hideModalHandler),this._element.getAttribute("data-bs-original-title")&&this._element.setAttribute("title",this._element.getAttribute("data-bs-original-title")),this._disposePopper(),super.dispose()}show(){if(this._element.style.display==="none")throw new Error("Please use show on visible elements");if(!(this._isWithContent()&&this._isEnabled))return;const x=D.trigger(this._element,this.constructor.eventName(QA)),t=(Ee(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(x.defaultPrevented||!t)return;this._disposePopper();const A=this._getTipElement();this._element.setAttribute("aria-describedby",A.getAttribute("id"));const{container:B}=this._config;if(this._element.ownerDocument.documentElement.contains(this.tip)||(B.append(A),D.trigger(this._element,this.constructor.eventName(EB))),this._popper=this._createPopper(A),A.classList.add(kx),"ontouchstart"in document.documentElement)for(const i of[].concat(...document.body.children))D.on(i,"mouseover",Wx);const n=()=>{D.trigger(this._element,this.constructor.eventName(xB)),this._isHovered===!1&&this._leave(),this._isHovered=!1};this._queueCallback(n,this.tip,this._isAnimated())}hide(){if(!this._isShown()||D.trigger(this._element,this.constructor.eventName(XA)).defaultPrevented)return;if(this._getTipElement().classList.remove(kx),"ontouchstart"in document.documentElement)for(const A of[].concat(...document.body.children))D.off(A,"mouseover",Wx);this._activeTrigger[zA]=!1,this._activeTrigger[mE]=!1,this._activeTrigger[sx]=!1,this._isHovered=null;const t=()=>{this._isWithActiveTrigger()||(this._isHovered||this._disposePopper(),this._element.removeAttribute("aria-describedby"),D.trigger(this._element,this.constructor.eventName(ZA)))};this._queueCallback(t,this.tip,this._isAnimated())}update(){this._popper&&this._popper.update()}_isWithContent(){return Boolean(this._getTitle())}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(x){const E=this._getTemplateFactory(x).toHtml();if(!E)return null;E.classList.remove(pE,kx),E.classList.add(`bs-${this.constructor.NAME}-auto`);const t=q5(this.constructor.NAME).toString();return E.setAttribute("id",t),this._isAnimated()&&E.classList.add(pE),E}setContent(x){this._newContent=x,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(x){return this._templateFactory?this._templateFactory.changeContent(x):this._templateFactory=new WA({...this._config,content:x,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{[qA]:this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._element.getAttribute("data-bs-original-title")}_initializeOnDelegatedTarget(x){return this.constructor.getOrCreateInstance(x.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains(pE)}_isShown(){return this.tip&&this.tip.classList.contains(kx)}_createPopper(x){const E=K(this._config.placement,[this,x,this._element]),t=iB[E.toUpperCase()];return e8(this._element,x,this._getPopperConfig(t))}_getOffset(){const{offset:x}=this._config;return typeof x=="string"?x.split(",").map(E=>Number.parseInt(E,10)):typeof x=="function"?E=>x(E,this._element):x}_resolvePossibleFunction(x){return K(x,[this._element])}_getPopperConfig(x){const E={placement:x,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:t=>{this._getTipElement().setAttribute("data-popper-placement",t.state.placement)}}]};return{...E,...K(this._config.popperConfig,[E])}}_setListeners(){const x=this._config.trigger.split(" ");for(const E of x)if(E==="click")D.on(this._element,this.constructor.eventName(eB),this._config.selector,t=>{this._initializeOnDelegatedTarget(t).toggle()});else if(E!==GA){const t=E===sx?this.constructor.eventName(BB):this.constructor.eventName(tB),A=E===sx?this.constructor.eventName(nB):this.constructor.eventName(AB);D.on(this._element,t,this._config.selector,B=>{const n=this._initializeOnDelegatedTarget(B);n._activeTrigger[B.type==="focusin"?mE:sx]=!0,n._enter()}),D.on(this._element,A,this._config.selector,B=>{const n=this._initializeOnDelegatedTarget(B);n._activeTrigger[B.type==="focusout"?mE:sx]=n._element.contains(B.relatedTarget),n._leave()})}this._hideModalHandler=()=>{this._element&&this.hide()},D.on(this._element.closest(E9),e9,this._hideModalHandler)}_fixTitle(){const x=this._element.getAttribute("title");x&&(!this._element.getAttribute("aria-label")&&!this._element.textContent.trim()&&this._element.setAttribute("aria-label",x),this._element.setAttribute("data-bs-original-title",x),this._element.removeAttribute("title"))}_enter(){if(this._isShown()||this._isHovered){this._isHovered=!0;return}this._isHovered=!0,this._setTimeout(()=>{this._isHovered&&this.show()},this._config.delay.show)}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout(()=>{this._isHovered||this.hide()},this._config.delay.hide))}_setTimeout(x,E){clearTimeout(this._timeout),this._timeout=setTimeout(x,E)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(x){const E=o0.getDataAttributes(this._element);for(const t of Object.keys(E))JA.has(t)&&delete E[t];return x={...E,...typeof x=="object"&&x?x:{}},x=this._mergeConfigObj(x),x=this._configAfterMerge(x),this._typeCheckConfig(x),x}_configAfterMerge(x){return x.container=x.container===!1?document.body:f0(x.container),typeof x.delay=="number"&&(x.delay={show:x.delay,hide:x.delay}),typeof x.title=="number"&&(x.title=x.title.toString()),typeof x.content=="number"&&(x.content=x.content.toString()),x}_getDelegateConfig(){const x={};for(const[E,t]of Object.entries(this._config))this.constructor.Default[E]!==t&&(x[E]=t);return x.selector=!1,x.trigger="manual",x}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null),this.tip&&(this.tip.remove(),this.tip=null)}static jQueryInterface(x){return this.each(function(){const E=k0.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof E[x]>"u")throw new TypeError(`No method named "${x}"`);E[x]()}})}}x0(k0);const oB="popover",aB=".popover-header",lB=".popover-body",CB={...k0.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},FB={...k0.DefaultType,content:"(null|string|element|function)"};class n8 extends k0{static get Default(){return CB}static get DefaultType(){return FB}static get NAME(){return oB}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{[aB]:this._getTitle(),[lB]:this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(x){return this.each(function(){const E=n8.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof E[x]>"u")throw new TypeError(`No method named "${x}"`);E[x]()}})}}x0(n8);const cB="scrollspy",DB="bs.scrollspy",i8=`.${DB}`,uB=".data-api",fB=`activate${i8}`,t9=`click${i8}`,hB=`load${i8}${uB}`,dB="dropdown-item",R0="active",pB='[data-bs-spy="scroll"]',gE="[href]",mB=".nav, .list-group",A9=".nav-link",gB=".nav-item",_B=".list-group-item",vB=`${A9}, ${gB} > ${A9}, ${_B}`,TB=".dropdown",bB=".dropdown-toggle",yB={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},wB={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class xE extends E0{constructor(x,E){super(x,E),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement=getComputedStyle(this._element).overflowY==="visible"?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return yB}static get DefaultType(){return wB}static get NAME(){return cB}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const x of this._observableSections.values())this._observer.observe(x)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(x){return x.target=f0(x.target)||document.body,x.rootMargin=x.offset?`${x.offset}px 0px -30%`:x.rootMargin,typeof x.threshold=="string"&&(x.threshold=x.threshold.split(",").map(E=>Number.parseFloat(E))),x}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(D.off(this._config.target,t9),D.on(this._config.target,t9,gE,x=>{const E=this._observableSections.get(x.target.hash);if(E){x.preventDefault();const t=this._rootElement||window,A=E.offsetTop-this._element.offsetTop;if(t.scrollTo){t.scrollTo({top:A,behavior:"smooth"});return}t.scrollTop=A}}))}_getNewObserver(){const x={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver(E=>this._observerCallback(E),x)}_observerCallback(x){const E=n=>this._targetLinks.get(`#${n.target.id}`),t=n=>{this._previousScrollData.visibleEntryTop=n.target.offsetTop,this._process(E(n))},A=(this._rootElement||document.documentElement).scrollTop,B=A>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=A;for(const n of x){if(!n.isIntersecting){this._activeTarget=null,this._clearActiveClass(E(n));continue}const i=n.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(B&&i){if(t(n),!A)return;continue}!B&&!i&&t(n)}}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const x=b.find(gE,this._config.target);for(const E of x){if(!E.hash||h0(E))continue;const t=b.findOne(E.hash,this._element);tx(t)&&(this._targetLinks.set(E.hash,E),this._observableSections.set(E.hash,t))}}_process(x){this._activeTarget!==x&&(this._clearActiveClass(this._config.target),this._activeTarget=x,x.classList.add(R0),this._activateParents(x),D.trigger(this._element,fB,{relatedTarget:x}))}_activateParents(x){if(x.classList.contains(dB)){b.findOne(bB,x.closest(TB)).classList.add(R0);return}for(const E of b.parents(x,mB))for(const t of b.prev(E,vB))t.classList.add(R0)}_clearActiveClass(x){x.classList.remove(R0);const E=b.find(`${gE}.${R0}`,x);for(const t of E)t.classList.remove(R0)}static jQueryInterface(x){return this.each(function(){const E=xE.getOrCreateInstance(this,x);if(typeof x=="string"){if(E[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);E[x]()}})}}D.on(window,hB,()=>{for(const e of b.find(pB))xE.getOrCreateInstance(e)});x0(xE);const SB="tab",OB="bs.tab",M0=`.${OB}`,IB=`hide${M0}`,LB=`hidden${M0}`,NB=`show${M0}`,kB=`shown${M0}`,MB=`click${M0}`,$B=`keydown${M0}`,UB=`load${M0}`,PB="ArrowLeft",B9="ArrowRight",RB="ArrowUp",n9="ArrowDown",w0="active",i9="fade",_E="show",jB="dropdown",VB=".dropdown-toggle",HB=".dropdown-menu",vE=":not(.dropdown-toggle)",WB='.list-group, .nav, [role="tablist"]',KB=".nav-item, .list-group-item",JB=`.nav-link${vE}, .list-group-item${vE}, [role="tab"]${vE}`,Te='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',TE=`${JB}, ${Te}`,YB=`.${w0}[data-bs-toggle="tab"], .${w0}[data-bs-toggle="pill"], .${w0}[data-bs-toggle="list"]`;class L0 extends E0{constructor(x){super(x),this._parent=this._element.closest(WB),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),D.on(this._element,$B,E=>this._keydown(E)))}static get NAME(){return SB}show(){const x=this._element;if(this._elemIsActive(x))return;const E=this._getActiveElem(),t=E?D.trigger(E,IB,{relatedTarget:x}):null;D.trigger(x,NB,{relatedTarget:E}).defaultPrevented||t&&t.defaultPrevented||(this._deactivate(E,x),this._activate(x,E))}_activate(x,E){if(!x)return;x.classList.add(w0),this._activate(b.getElementFromSelector(x));const t=()=>{if(x.getAttribute("role")!=="tab"){x.classList.add(_E);return}x.removeAttribute("tabindex"),x.setAttribute("aria-selected",!0),this._toggleDropDown(x,!0),D.trigger(x,kB,{relatedTarget:E})};this._queueCallback(t,x,x.classList.contains(i9))}_deactivate(x,E){if(!x)return;x.classList.remove(w0),x.blur(),this._deactivate(b.getElementFromSelector(x));const t=()=>{if(x.getAttribute("role")!=="tab"){x.classList.remove(_E);return}x.setAttribute("aria-selected",!1),x.setAttribute("tabindex","-1"),this._toggleDropDown(x,!1),D.trigger(x,LB,{relatedTarget:E})};this._queueCallback(t,x,x.classList.contains(i9))}_keydown(x){if(![PB,B9,RB,n9].includes(x.key))return;x.stopPropagation(),x.preventDefault();const E=[B9,n9].includes(x.key),t=t8(this._getChildren().filter(A=>!h0(A)),x.target,E,!0);t&&(t.focus({preventScroll:!0}),L0.getOrCreateInstance(t).show())}_getChildren(){return b.find(TE,this._parent)}_getActiveElem(){return this._getChildren().find(x=>this._elemIsActive(x))||null}_setInitialAttributes(x,E){this._setAttributeIfNotExists(x,"role","tablist");for(const t of E)this._setInitialAttributesOnChild(t)}_setInitialAttributesOnChild(x){x=this._getInnerElement(x);const E=this._elemIsActive(x),t=this._getOuterElement(x);x.setAttribute("aria-selected",E),t!==x&&this._setAttributeIfNotExists(t,"role","presentation"),E||x.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(x,"role","tab"),this._setInitialAttributesOnTargetPanel(x)}_setInitialAttributesOnTargetPanel(x){const E=b.getElementFromSelector(x);E&&(this._setAttributeIfNotExists(E,"role","tabpanel"),x.id&&this._setAttributeIfNotExists(E,"aria-labelledby",`#${x.id}`))}_toggleDropDown(x,E){const t=this._getOuterElement(x);if(!t.classList.contains(jB))return;const A=(B,n)=>{const i=b.findOne(B,t);i&&i.classList.toggle(n,E)};A(VB,w0),A(HB,_E),t.setAttribute("aria-expanded",E)}_setAttributeIfNotExists(x,E,t){x.hasAttribute(E)||x.setAttribute(E,t)}_elemIsActive(x){return x.classList.contains(w0)}_getInnerElement(x){return x.matches(TE)?x:b.findOne(TE,x)}_getOuterElement(x){return x.closest(KB)||x}static jQueryInterface(x){return this.each(function(){const E=L0.getOrCreateInstance(this);if(typeof x=="string"){if(E[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);E[x]()}})}}D.on(document,MB,Te,function(e){["A","AREA"].includes(this.tagName)&&e.preventDefault(),!h0(this)&&L0.getOrCreateInstance(this).show()});D.on(window,UB,()=>{for(const e of b.find(YB))L0.getOrCreateInstance(e)});x0(L0);const qB="toast",zB="bs.toast",g0=`.${zB}`,GB=`mouseover${g0}`,XB=`mouseout${g0}`,ZB=`focusin${g0}`,QB=`focusout${g0}`,x3=`hide${g0}`,E3=`hidden${g0}`,e3=`show${g0}`,t3=`shown${g0}`,A3="fade",r9="hide",Mx="show",$x="showing",B3={animation:"boolean",autohide:"boolean",delay:"number"},n3={animation:!0,autohide:!0,delay:5e3};class EE extends E0{constructor(x,E){super(x,E),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return n3}static get DefaultType(){return B3}static get NAME(){return qB}show(){if(D.trigger(this._element,e3).defaultPrevented)return;this._clearTimeout(),this._config.animation&&this._element.classList.add(A3);const E=()=>{this._element.classList.remove($x),D.trigger(this._element,t3),this._maybeScheduleHide()};this._element.classList.remove(r9),cx(this._element),this._element.classList.add(Mx,$x),this._queueCallback(E,this._element,this._config.animation)}hide(){if(!this.isShown()||D.trigger(this._element,x3).defaultPrevented)return;const E=()=>{this._element.classList.add(r9),this._element.classList.remove($x,Mx),D.trigger(this._element,E3)};this._element.classList.add($x),this._queueCallback(E,this._element,this._config.animation)}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(Mx),super.dispose()}isShown(){return this._element.classList.contains(Mx)}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout(()=>{this.hide()},this._config.delay)))}_onInteraction(x,E){switch(x.type){case"mouseover":case"mouseout":{this._hasMouseInteraction=E;break}case"focusin":case"focusout":{this._hasKeyboardInteraction=E;break}}if(E){this._clearTimeout();return}const t=x.relatedTarget;this._element===t||this._element.contains(t)||this._maybeScheduleHide()}_setListeners(){D.on(this._element,GB,x=>this._onInteraction(x,!0)),D.on(this._element,XB,x=>this._onInteraction(x,!1)),D.on(this._element,ZB,x=>this._onInteraction(x,!0)),D.on(this._element,QB,x=>this._onInteraction(x,!1))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(x){return this.each(function(){const E=EE.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof E[x]>"u")throw new TypeError(`No method named "${x}"`);E[x](this)}})}}Xx(EE);x0(EE);var G={},j={},s9;function r8(){if(s9)return j;s9=1;var e=s8(),x=String.fromCharCode,E=Array.prototype.slice,t=Object.prototype.toString,A=Object.prototype.hasOwnProperty,B=Array.isArray,n=Object.keys;function i(u){var f=typeof u;return f==="function"||f==="object"&&!!u}j.isObject=i;function r(u){return B?B(u):t.call(u)==="[object Array]"}j.isArray=r;function s(u){return typeof u=="string"||t.call(u)==="[object String]"}j.isString=s;function o(u){if(n)return n(u);var f=[];for(var v in u)A.call(u,v)&&(f[f.length]=v);return f}j.objectKeys=o;function a(u,f){if(e.HAS_TYPED)switch(u){case 8:return new Uint8Array(f);case 16:return new Uint16Array(f)}return new Array(f)}j.createBuffer=a;function l(u){for(var f=u.length,v=a(16,f),g=0;g<f;g++)v[g]=u.charCodeAt(g);return v}j.stringToBuffer=l;function h(u){if(e.CAN_CHARCODE_APPLY&&e.CAN_CHARCODE_APPLY_TYPED){var f=u&&u.length;if(f<e.APPLY_BUFFER_SIZE&&e.APPLY_BUFFER_SIZE_OK)return x.apply(null,u);if(e.APPLY_BUFFER_SIZE_OK===null)try{var v=x.apply(null,u);return f>e.APPLY_BUFFER_SIZE&&(e.APPLY_BUFFER_SIZE_OK=!0),v}catch{e.APPLY_BUFFER_SIZE_OK=!1}}return c(u)}j.codeToString_fast=h;function c(u){for(var f="",v=u&&u.length,g=0,O;g<v;){if(u.subarray?O=u.subarray(g,g+e.APPLY_BUFFER_SIZE):O=u.slice(g,g+e.APPLY_BUFFER_SIZE),g+=e.APPLY_BUFFER_SIZE,e.APPLY_BUFFER_SIZE_OK){f+=x.apply(null,O);continue}if(e.APPLY_BUFFER_SIZE_OK===null)try{f+=x.apply(null,O),O.length>e.APPLY_BUFFER_SIZE&&(e.APPLY_BUFFER_SIZE_OK=!0);continue}catch{e.APPLY_BUFFER_SIZE_OK=!1}return F(u)}return f}j.codeToString_chunked=c;function F(u){for(var f="",v=u&&u.length,g=0;g<v;g++)f+=x(u[g]);return f}j.codeToString_slow=F;function p(u){for(var f=[],v=u&&u.length,g=0;g<v;g++)f[g]=u.charCodeAt(g);return f}j.stringToCode=p;function m(u){if(e.HAS_TYPED)return new Uint16Array(u);if(r(u))return u;for(var f=u&&u.length,v=[],g=0;g<f;g++)v[g]=u[g];return v}j.codeToBuffer=m;function T(u){return r(u)?u:E.call(u)}j.bufferToCode=T;function C(u){for(var f="",v=(""+u).toUpperCase().replace(/[^A-Z0-9]+/g,""),g=o(e.EncodingAliases),O=g.length,k=0,U,M,P,C0=0;C0<O;C0++){if(U=g[C0],U===v){f=U;break}for(M=U.length,P=k;P<M;P++)(U.slice(0,P)===v.slice(0,P)||U.slice(-P)===v.slice(-P))&&(f=U,k=P)}return A.call(e.EncodingAliases,f)?e.EncodingAliases[f]:f}j.canonicalizeEncodingName=C;var d=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47],w=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1],I="=".charCodeAt(0);function L(u){var f,v,g,O,k,U;for(g=u&&u.length,v=0,f=[];v<g;){if(O=u[v++],v==g){f[f.length]=d[O>>2],f[f.length]=d[(O&3)<<4],f[f.length]=I,f[f.length]=I;break}if(k=u[v++],v==g){f[f.length]=d[O>>2],f[f.length]=d[(O&3)<<4|(k&240)>>4],f[f.length]=d[(k&15)<<2],f[f.length]=I;break}U=u[v++],f[f.length]=d[O>>2],f[f.length]=d[(O&3)<<4|(k&240)>>4],f[f.length]=d[(k&15)<<2|(U&192)>>6],f[f.length]=d[U&63]}return h(f)}j.base64encode=L;function $(u){var f,v,g,O,k,U,M;for(U=u&&u.length,k=0,M=[];k<U;){do f=w[u.charCodeAt(k++)&255];while(k<U&&f==-1);if(f==-1)break;do v=w[u.charCodeAt(k++)&255];while(k<U&&v==-1);if(v==-1)break;M[M.length]=f<<2|(v&48)>>4;do{if(g=u.charCodeAt(k++)&255,g==61)return M;g=w[g]}while(k<U&&g==-1);if(g==-1)break;M[M.length]=(v&15)<<4|(g&60)>>2;do{if(O=u.charCodeAt(k++)&255,O==61)return M;O=w[O]}while(k<U&&O==-1);if(O==-1)break;M[M.length]=(g&3)<<6|O}return M}return j.base64decode=$,j}var Bx={},i3={15711649:33,15711650:34,15711651:35,15711652:36,15711653:37,15711654:38,15711655:39,15711656:40,15711657:41,15711658:42,15711659:43,15711660:44,15711661:45,15711662:46,15711663:47,15711664:48,15711665:49,15711666:50,15711667:51,15711668:52,15711669:53,15711670:54,15711671:55,15711672:56,15711673:57,15711674:58,15711675:59,15711676:60,15711677:61,15711678:62,15711679:63,15711872:64,15711873:65,15711874:66,15711875:67,15711876:68,15711877:69,15711878:70,15711879:71,15711880:72,15711881:73,15711882:74,15711883:75,15711884:76,15711885:77,15711886:78,15711887:79,15711888:80,15711889:81,15711890:82,15711891:83,15711892:84,15711893:85,15711894:86,15711895:87,15711896:88,15711897:89,15711898:90,15711899:91,15711900:92,15711901:93,15711902:94,15711903:95,14848416:11553,14848417:11554,14848418:11555,14848419:11556,14848420:11557,14848421:11558,14848422:11559,14848423:11560,14848424:11561,14848425:11562,14848426:11563,14848427:11564,14848428:11565,14848429:11566,14848430:11567,14848431:11568,14848432:11569,14848433:11570,14848434:11571,14848435:11572,14845344:11573,14845345:11574,14845346:11575,14845347:11576,14845348:11577,14845349:11578,14845350:11579,14845351:11580,14845352:11581,14845353:11582,14912905:11584,14912660:11585,14912674:11586,14912909:11587,14912664:11588,14912679:11589,14912643:11590,14912694:11591,14912913:11592,14912919:11593,14912653:11594,14912678:11595,14912675:11596,14912683:11597,14912906:11598,14912699:11599,14913180:11600,14913181:11601,14913182:11602,14913166:11603,14913167:11604,14913412:11605,14913185:11606,14912955:11615,14909597:11616,14909599:11617,14845078:11618,14913421:11619,14845089:11620,14912164:11621,14912165:11622,14912166:11623,14912167:11624,14912168:11625,14911665:11626,14911666:11627,14911673:11628,14912958:11629,14912957:11630,14912956:11631,14846126:11635,14846097:11636,14846111:11640,14846655:11641,14909568:8481,14909569:8482,14909570:8483,15711372:8484,15711374:8485,14910395:8486,15711386:8487,15711387:8488,15711391:8489,15711361:8490,14910107:8491,14910108:8492,49844:8493,15711616:8494,49832:8495,15711422:8496,15712163:8497,15711423:8498,14910397:8499,14910398:8500,14910109:8501,14910110:8502,14909571:8503,14990237:8504,14909573:8505,14909574:8506,14909575:8507,14910396:8508,14844053:8509,14844048:8510,15711375:8511,15711420:8512,15711646:8513,14844054:8514,15711644:8515,14844070:8516,14844069:8517,14844056:8518,14844057:8519,14844060:8520,14844061:8521,15711368:8522,15711369:8523,14909588:8524,14909589:8525,15711419:8526,15711421:8527,15711643:8528,15711645:8529,14909576:8530,14909577:8531,14909578:8532,14909579:8533,14909580:8534,14909581:8535,14909582:8536,14909583:8537,14909584:8538,14909585:8539,15711371:8540,15711373:8541,49841:8542,50071:8543,50103:8544,15711389:8545,14846368:8546,15711388:8547,15711390:8548,14846374:8549,14846375:8550,14846110:8551,14846132:8552,14850434:8553,14850432:8554,49840:8555,14844082:8556,14844083:8557,14845059:8558,15712165:8559,15711364:8560,15712160:8561,15712161:8562,15711365:8563,15711363:8564,15711366:8565,15711370:8566,15711392:8567,49831:8568,14850182:8569,14850181:8570,14849931:8571,14849935:8572,14849934:8573,14849927:8574,14849926:8737,14849697:8738,14849696:8739,14849715:8740,14849714:8741,14849725:8742,14849724:8743,14844091:8744,14909586:8745,14845586:8746,14845584:8747,14845585:8748,14845587:8749,14909587:8750,14846088:8762,14846091:8763,14846598:8764,14846599:8765,14846594:8766,14846595:8767,14846122:8768,14846121:8769,14846119:8778,14846120:8779,49836:8780,14845842:8781,14845844:8782,14846080:8783,14846083:8784,14846112:8796,14846629:8797,14847122:8798,14846082:8799,14846087:8800,14846369:8801,14846354:8802,14846378:8803,14846379:8804,14846106:8805,14846141:8806,14846109:8807,14846133:8808,14846123:8809,14846124:8810,14845099:8818,14844080:8819,14850479:8820,14850477:8821,14850474:8822,14844064:8823,14844065:8824,49846:8825,14849967:8830,15711376:9008,15711377:9009,15711378:9010,15711379:9011,15711380:9012,15711381:9013,15711382:9014,15711383:9015,15711384:9016,15711385:9017,15711393:9025,15711394:9026,15711395:9027,15711396:9028,15711397:9029,15711398:9030,15711399:9031,15711400:9032,15711401:9033,15711402:9034,15711403:9035,15711404:9036,15711405:9037,15711406:9038,15711407:9039,15711408:9040,15711409:9041,15711410:9042,15711411:9043,15711412:9044,15711413:9045,15711414:9046,15711415:9047,15711416:9048,15711417:9049,15711418:9050,15711617:9057,15711618:9058,15711619:9059,15711620:9060,15711621:9061,15711622:9062,15711623:9063,15711624:9064,15711625:9065,15711626:9066,15711627:9067,15711628:9068,15711629:9069,15711630:9070,15711631:9071,15711632:9072,15711633:9073,15711634:9074,15711635:9075,15711636:9076,15711637:9077,15711638:9078,15711639:9079,15711640:9080,15711641:9081,15711642:9082,14909825:9249,14909826:9250,14909827:9251,14909828:9252,14909829:9253,14909830:9254,14909831:9255,14909832:9256,14909833:9257,14909834:9258,14909835:9259,14909836:9260,14909837:9261,14909838:9262,14909839:9263,14909840:9264,14909841:9265,14909842:9266,14909843:9267,14909844:9268,14909845:9269,14909846:9270,14909847:9271,14909848:9272,14909849:9273,14909850:9274,14909851:9275,14909852:9276,14909853:9277,14909854:9278,14909855:9279,14909856:9280,14909857:9281,14909858:9282,14909859:9283,14909860:9284,14909861:9285,14909862:9286,14909863:9287,14909864:9288,14909865:9289,14909866:9290,14909867:9291,14909868:9292,14909869:9293,14909870:9294,14909871:9295,14909872:9296,14909873:9297,14909874:9298,14909875:9299,14909876:9300,14909877:9301,14909878:9302,14909879:9303,14909880:9304,14909881:9305,14909882:9306,14909883:9307,14909884:9308,14909885:9309,14909886:9310,14909887:9311,14910080:9312,14910081:9313,14910082:9314,14910083:9315,14910084:9316,14910085:9317,14910086:9318,14910087:9319,14910088:9320,14910089:9321,14910090:9322,14910091:9323,14910092:9324,14910093:9325,14910094:9326,14910095:9327,14910096:9328,14910097:9329,14910098:9330,14910099:9331,14910113:9505,14910114:9506,14910115:9507,14910116:9508,14910117:9509,14910118:9510,14910119:9511,14910120:9512,14910121:9513,14910122:9514,14910123:9515,14910124:9516,14910125:9517,14910126:9518,14910127:9519,14910128:9520,14910129:9521,14910130:9522,14910131:9523,14910132:9524,14910133:9525,14910134:9526,14910135:9527,14910136:9528,14910137:9529,14910138:9530,14910139:9531,14910140:9532,14910141:9533,14910142:9534,14910143:9535,14910336:9536,14910337:9537,14910338:9538,14910339:9539,14910340:9540,14910341:9541,14910342:9542,14910343:9543,14910344:9544,14910345:9545,14910346:9546,14910347:9547,14910348:9548,14910349:9549,14910350:9550,14910351:9551,14910352:9552,14910353:9553,14910354:9554,14910355:9555,14910356:9556,14910357:9557,14910358:9558,14910359:9559,14910360:9560,14910361:9561,14910362:9562,14910363:9563,14910364:9564,14910365:9565,14910366:9566,14910367:9567,14910368:9568,14910369:9569,14910370:9570,14910371:9571,14910372:9572,14910373:9573,14910374:9574,14910375:9575,14910376:9576,14910377:9577,14910378:9578,14910379:9579,14910380:9580,14910381:9581,14910382:9582,14910383:9583,14910384:9584,14910385:9585,14910386:9586,14910387:9587,14910388:9588,14910389:9589,14910390:9590,52881:9761,52882:9762,52883:9763,52884:9764,52885:9765,52886:9766,52887:9767,52888:9768,52889:9769,52890:9770,52891:9771,52892:9772,52893:9773,52894:9774,52895:9775,52896:9776,52897:9777,52899:9778,52900:9779,52901:9780,52902:9781,52903:9782,52904:9783,52905:9784,52913:9793,52914:9794,52915:9795,52916:9796,52917:9797,52918:9798,52919:9799,52920:9800,52921:9801,52922:9802,52923:9803,52924:9804,52925:9805,52926:9806,52927:9807,53120:9808,53121:9809,53123:9810,53124:9811,53125:9812,53126:9813,53127:9814,53128:9815,53129:9816,53392:10017,53393:10018,53394:10019,53395:10020,53396:10021,53397:10022,53377:10023,53398:10024,53399:10025,53400:10026,53401:10027,53402:10028,53403:10029,53404:10030,53405:10031,53406:10032,53407:10033,53408:10034,53409:10035,53410:10036,53411:10037,53412:10038,53413:10039,53414:10040,53415:10041,53416:10042,53417:10043,53418:10044,53419:10045,53420:10046,53421:10047,53422:10048,53423:10049,53424:10065,53425:10066,53426:10067,53427:10068,53428:10069,53429:10070,53649:10071,53430:10072,53431:10073,53432:10074,53433:10075,53434:10076,53435:10077,53436:10078,53437:10079,53438:10080,53439:10081,53632:10082,53633:10083,53634:10084,53635:10085,53636:10086,53637:10087,53638:10088,53639:10089,53640:10090,53641:10091,53642:10092,53643:10093,53644:10094,53645:10095,53646:10096,53647:10097,14849152:10273,14849154:10274,14849164:10275,14849168:10276,14849176:10277,14849172:10278,14849180:10279,14849196:10280,14849188:10281,14849204:10282,14849212:10283,14849153:10284,14849155:10285,14849167:10286,14849171:10287,14849179:10288,14849175:10289,14849187:10290,14849203:10291,14849195:10292,14849211:10293,14849419:10294,14849184:10295,14849199:10296,14849192:10297,14849207:10298,14849215:10299,14849181:10300,14849200:10301,14849189:10302,14849208:10303,14849410:10304,14989980:12321,15045782:12322,15050883:12323,15308991:12324,15045504:12325,15107227:12326,15109288:12327,15050678:12328,15302818:12329,15241653:12330,15240348:12331,15182224:12332,15106730:12333,15110049:12334,15120549:12335,15112109:12336,15241638:12337,15239846:12338,15314869:12339,15114899:12340,15047847:12341,15111841:12342,15108529:12343,15052443:12344,15050640:12345,15243707:12346,15311796:12347,15185314:12348,15185598:12349,15314574:12350,15108246:12351,15184543:12352,15246007:12353,15052425:12354,15055541:12355,15109257:12356,15112855:12357,15114632:12358,15308679:12359,15310477:12360,15113615:12361,14990245:12362,14990474:12363,14990733:12364,14991005:12365,15040905:12366,15047602:12367,15049911:12368,15050644:12369,15050881:12370,15052937:12371,15106975:12372,15107215:12373,15107504:12374,15112339:12375,15115397:12376,15172282:12377,15177103:12378,15177136:12379,15181755:12380,15185581:12381,15185839:12382,15238019:12383,15241358:12384,15245731:12385,15248514:12386,15303061:12387,15303098:12388,15043771:12389,14989973:12390,14989989:12391,15048607:12392,15237810:12393,15303553:12394,15180719:12395,14989440:12396,15049649:12397,15121058:12398,15302840:12399,15182002:12400,15240360:12401,15239819:12402,15315119:12403,15041921:12404,15044016:12405,15045309:12406,15045537:12407,15047584:12408,15050683:12409,15056021:12410,15311794:12411,15120299:12412,15238052:12413,15242413:12414,15309218:12577,15309232:12578,15309472:12579,15310779:12580,15044747:12581,15044531:12582,15052423:12583,15172495:12584,15187645:12585,15253378:12586,15309736:12587,15044015:12588,15316380:12589,15182522:12590,14989457:12591,15180435:12592,15239100:12593,15120550:12594,15046808:12595,15045764:12596,15117469:12597,15242394:12598,15315131:12599,15050661:12600,15044265:12601,15119782:12602,15176604:12603,15308431:12604,15047042:12605,14989969:12606,15303051:12607,15309746:12608,15240591:12609,15312012:12610,15044513:12611,15046326:12612,15051952:12613,15056305:12614,15112352:12615,15113139:12616,15114372:12617,15118520:12618,15119283:12619,15119529:12620,15176091:12621,15178632:12622,15182222:12623,15311028:12624,15240113:12625,15245723:12626,15247776:12627,15305645:12628,15120050:12629,15177387:12630,15178634:12631,15312773:12632,15106726:12633,15248513:12634,15251082:12635,15308466:12636,15115918:12637,15044269:12638,15042182:12639,15047826:12640,15048880:12641,15050116:12642,15052468:12643,15055798:12644,15106216:12645,15109801:12646,15110068:12647,15119039:12648,15121556:12649,15172238:12650,15172756:12651,15173017:12652,15173525:12653,15174847:12654,15186049:12655,15239606:12656,15240081:12657,15242903:12658,15303072:12659,15305115:12660,15316123:12661,15049129:12662,15111868:12663,15118746:12664,15176869:12665,15042489:12666,15049902:12667,15050149:12668,15056512:12669,15056796:12670,15108796:12833,15112122:12834,15116458:12835,15117479:12836,15118004:12837,15175307:12838,15187841:12839,15246742:12840,15316140:12841,15316110:12842,15317892:12843,15053473:12844,15118998:12845,15240635:12846,15041668:12847,15053195:12848,15107766:12849,15239046:12850,15114678:12851,15174049:12852,14989721:12853,14991290:12854,15044024:12855,15106473:12856,15120553:12857,15182223:12858,15310771:12859,14989451:12860,15043734:12861,14990254:12862,14990741:12863,14990525:12864,14991009:12865,14990771:12866,15043232:12867,15044527:12868,15046793:12869,15049871:12870,15051649:12871,15052470:12872,15052705:12873,15181713:12874,15112839:12875,15113884:12876,15113910:12877,15117708:12878,15119027:12879,15172011:12880,15175554:12881,15181453:12882,15181502:12883,15182012:12884,15183495:12885,15239857:12886,15240091:12887,15240324:12888,15240631:12889,15241135:12890,15241107:12891,15244710:12892,15248050:12893,15046825:12894,15250088:12895,15253414:12896,15303054:12897,15309982:12898,15243914:12899,14991236:12900,15053736:12901,15108241:12902,15174041:12903,15176891:12904,15239077:12905,15239869:12906,15244222:12907,15250304:12908,15309701:12909,15312019:12910,15312789:12911,14990219:12912,14990490:12913,15247267:12914,15047582:12915,15049098:12916,15049610:12917,15055803:12918,15056811:12919,15106218:12920,15106708:12921,15106466:12922,15107984:12923,15108242:12924,15109008:12925,15111353:12926,15314305:13089,15112614:13090,15114928:13091,15119799:13092,15172016:13093,15177100:13094,15178374:13095,15185333:13096,15239845:13097,15245241:13098,15308427:13099,15309454:13100,15250077:13101,15042481:13102,15043262:13103,15049878:13104,15045299:13105,15052467:13106,15053974:13107,15107496:13108,15115906:13109,15120047:13110,15180429:13111,15242123:13112,15245719:13113,15247794:13114,15306407:13115,15313592:13116,15119788:13117,15312552:13118,15244185:13119,15048355:13120,15114175:13121,15244174:13122,15304846:13123,15043203:13124,15047303:13125,15044740:13126,15055763:13127,15109025:13128,15110841:13129,15114428:13130,15114424:13131,15118011:13132,15175090:13133,15180474:13134,15182251:13135,15247002:13136,15247250:13137,15250859:13138,15252611:13139,15303597:13140,15308451:13141,15309460:13142,15310249:13143,15052198:13144,15053491:13145,15115709:13146,15311245:13147,15311246:13148,15109787:13149,15183008:13150,15116459:13151,15116735:13152,15114934:13153,15315085:13154,15121823:13155,15042994:13156,15046301:13157,15106480:13158,15109036:13159,15119547:13160,15120519:13161,15121297:13162,15241627:13163,15246480:13164,15252868:13165,14989460:13166,15315129:13167,15044534:13168,15115419:13169,15116474:13170,15310468:13171,15114410:13172,15041948:13173,15182723:13174,15241906:13175,15304604:13176,15306380:13177,15047067:13178,15316136:13179,15114402:13180,15240325:13181,15241393:13182,15184549:13345,15042696:13346,15240069:13347,15176614:13348,14989758:13349,14990979:13350,15042208:13351,15052690:13352,15042698:13353,15043480:13354,15043495:13355,15054779:13356,15046298:13357,15048874:13358,15050662:13359,15052428:13360,15052440:13361,15052699:13362,15055282:13363,15055289:13364,15106723:13365,15107231:13366,15107491:13367,15107774:13368,15110043:13369,15111586:13370,15114129:13371,15114643:13372,15115194:13373,15117502:13374,15117715:13375,15118743:13376,15121570:13377,15122071:13378,15121797:13379,15176368:13380,15176856:13381,15178659:13382,15178891:13383,15182783:13384,15183521:13385,15184033:13386,15185833:13387,15187126:13388,15187888:13389,15237789:13390,15239590:13391,15240862:13392,15247027:13393,15248268:13394,15250091:13395,15303300:13396,15307153:13397,15308435:13398,15308433:13399,15308450:13400,15309221:13401,15310739:13402,15312040:13403,15239320:13404,14989496:13405,15044779:13406,15053496:13407,15054732:13408,15175337:13409,15178124:13410,15178940:13411,15053481:13412,15187883:13413,15250571:13414,15309697:13415,15310993:13416,15311252:13417,15311256:13418,14990465:13419,14990478:13420,15044017:13421,15046300:13422,15047080:13423,15048634:13424,15050119:13425,15051913:13426,15052676:13427,15053456:13428,15054988:13429,15055294:13430,15056780:13431,15110062:13432,15113402:13433,15112087:13434,15112098:13435,15113375:13436,15115147:13437,15115140:13438,15116703:13601,15055024:13602,15118213:13603,15118487:13604,15118781:13605,15177151:13606,15181192:13607,15052195:13608,15181952:13609,15185024:13610,15056573:13611,15246991:13612,15247512:13613,15250100:13614,15250871:13615,15252364:13616,15252637:13617,15311778:13618,15313038:13619,15314108:13620,14989952:13621,15040957:13622,15041664:13623,15050387:13624,15052444:13625,15108271:13626,15108736:13627,15111084:13628,15117498:13629,15174304:13630,15177361:13631,15181191:13632,15187625:13633,15245243:13634,15248060:13635,15248816:13636,15109804:13637,15241098:13638,15310496:13639,15044745:13640,15044739:13641,15046315:13642,15114644:13643,15116696:13644,15247792:13645,15179943:13646,15113653:13647,15317901:13648,15044020:13649,15052450:13650,15238298:13651,15243664:13652,15302790:13653,14989464:13654,14989701:13655,14990215:13656,14990481:13657,15044490:13658,15044792:13659,15052462:13660,15056019:13661,15106213:13662,15111569:13663,15113405:13664,15118722:13665,15118770:13666,15119267:13667,15172024:13668,15175811:13669,15182262:13670,15182510:13671,15182984:13672,15185050:13673,15184830:13674,15185318:13675,15112103:13676,15174043:13677,15044283:13678,15053189:13679,15054760:13680,15109010:13681,15109024:13682,15109273:13683,15120544:13684,15243674:13685,15247537:13686,15251357:13687,15305656:13688,15121537:13689,15181478:13690,15314330:13691,14989992:13692,14989995:13693,14989996:13694,14991003:13857,14991008:13858,15041425:13859,15041927:13860,15182774:13861,15041969:13862,15042486:13863,15043988:13864,15043745:13865,15044031:13866,15044523:13867,15046316:13868,15049347:13869,15053729:13870,15056055:13871,15056266:13872,15106223:13873,15106448:13874,15106477:13875,15109279:13876,15111577:13877,15116683:13878,15119233:13879,15174530:13880,15174573:13881,15179695:13882,15238072:13883,15238277:13884,15239304:13885,15242638:13886,15303607:13887,15306657:13888,15310783:13889,15312279:13890,15313306:13891,14990256:13892,15042461:13893,15052973:13894,15112833:13895,15115693:13896,15053184:13897,15113138:13898,15115701:13899,15175305:13900,15114640:13901,15184513:13902,15041413:13903,15043492:13904,15048071:13905,15054782:13906,15305894:13907,15111844:13908,15117475:13909,15117501:13910,15175860:13911,15181441:13912,15181501:13913,15183243:13914,15185802:13915,15239865:13916,15241100:13917,15245759:13918,15246751:13919,15248569:13920,15253393:13921,15304593:13922,15044767:13923,15305344:13924,14989725:13925,15040694:13926,15044517:13927,15043770:13928,15174551:13929,15175318:13930,15179689:13931,15240102:13932,15252143:13933,15312774:13934,15312776:13935,15312786:13936,15041975:13937,15107226:13938,15243678:13939,15046320:13940,15182266:13941,15040950:13942,15052691:13943,15303047:13944,15309445:13945,14989490:13946,15117211:13947,15304615:13948,15053201:13949,15053192:13950,15109784:14113,15182495:14114,15118995:14115,15310260:14116,15252897:14117,15182506:14118,15173258:14119,15309448:14120,15184514:14121,15114391:14122,15186352:14123,15114641:14124,15306156:14125,15043506:14126,15044763:14127,15242923:14128,15247507:14129,15187620:14130,15252365:14131,15303585:14132,15044006:14133,15245960:14134,15181185:14135,14991234:14136,15041214:14137,15042705:14138,15041924:14139,15046035:14140,15047853:14141,15175594:14142,15048331:14143,15050129:14144,15056290:14145,15056516:14146,15106485:14147,15107510:14148,15107495:14149,15107753:14150,15109810:14151,15110330:14152,15111596:14153,15112623:14154,15114626:14155,15120531:14156,15177126:14157,15182013:14158,15184827:14159,15185292:14160,15185561:14161,15186315:14162,15187371:14163,15240334:14164,15240586:14165,15244173:14166,15247496:14167,15247779:14168,15248806:14169,15252413:14170,15311002:14171,15316623:14172,15239864:14173,15253390:14174,15314856:14175,15043207:14176,15108255:14177,15110787:14178,15122304:14179,15309465:14180,15114625:14181,15041169:14182,15117472:14183,15118778:14184,15121812:14185,15182260:14186,15185296:14187,15245696:14188,15247523:14189,15113352:14190,14990262:14191,15040697:14192,15040678:14193,15040933:14194,15041980:14195,15042744:14196,15042979:14197,15046311:14198,15047823:14199,15048837:14200,15051660:14201,15055802:14202,15107762:14203,15108024:14204,15109043:14205,15109554:14206,15115420:14369,15116457:14370,15174077:14371,15174316:14372,15174830:14373,15179924:14374,15180207:14375,15185337:14376,15178892:14377,15237801:14378,15246987:14379,15248537:14380,15250338:14381,15252370:14382,15303075:14383,15306165:14384,15309242:14385,15311253:14386,15313043:14387,15317432:14388,15041923:14389,15044255:14390,15044275:14391,15055291:14392,15056038:14393,15120539:14394,15121040:14395,15175300:14396,15175614:14397,15185283:14398,15239351:14399,15247488:14400,15248314:14401,15309200:14402,14989710:14403,15040651:14404,15044516:14405,15045052:14406,15047610:14407,15050641:14408,15052196:14409,15054769:14410,15055531:14411,15056039:14412,15108280:14413,15111557:14414,15113903:14415,15120790:14416,15174544:14417,15184778:14418,15246004:14419,15237793:14420,15238049:14421,15241136:14422,15243662:14423,15248007:14424,15251368:14425,15304887:14426,15309703:14427,15311271:14428,15318163:14429,14989972:14430,14989970:14431,14990477:14432,15043976:14433,15045001:14434,15044798:14435,15050927:14436,15056524:14437,15056545:14438,15106719:14439,15114919:14440,15116942:14441,15176090:14442,15180417:14443,15248030:14444,15248036:14445,15248823:14446,15304336:14447,14989726:14448,15314825:14449,14989988:14450,14990780:14451,14991023:14452,15040665:14453,15040662:14454,15041929:14455,15041964:14456,15043231:14457,15043257:14458,15043518:14459,15044250:14460,15044515:14461,15044753:14462,15044750:14625,15046281:14626,15048081:14627,15048354:14628,15050173:14629,15052180:14630,15052189:14631,15052431:14632,15054757:14633,15054759:14634,15054775:14635,15055288:14636,15055491:14637,15055514:14638,15055543:14639,15056024:14640,15106450:14641,15107468:14642,15108759:14643,15109016:14644,15109799:14645,15111355:14646,15112322:14647,15112579:14648,15113140:14649,15113645:14650,15114401:14651,15114903:14652,15116171:14653,15118751:14654,15119530:14655,15119785:14656,15120559:14657,15121053:14658,15176882:14659,15178375:14660,15180204:14661,15182015:14662,15184800:14663,15185029:14664,15185048:14665,15185310:14666,15185585:14667,15237269:14668,15237251:14669,15237807:14670,15237809:14671,15238548:14672,15238799:14673,15239338:14674,15240594:14675,15245708:14676,15245729:14677,15248539:14678,15250082:14679,15250364:14680,15303562:14681,15304117:14682,15305137:14683,15179967:14684,15305660:14685,15308452:14686,15309197:14687,15310981:14688,15312537:14689,15313816:14690,15316155:14691,15042971:14692,15043243:14693,15044535:14694,15044744:14695,15049621:14696,15109047:14697,15122336:14698,15249834:14699,15252895:14700,15317689:14701,15041931:14702,15042747:14703,15045002:14704,15047613:14705,15182208:14706,15304119:14707,15316384:14708,15317906:14709,15175044:14710,15121545:14711,15238576:14712,15176849:14713,15056829:14714,15106970:14715,15313576:14716,15174555:14717,15253180:14718,15117732:14881,15310979:14882,14990218:14883,15047600:14884,15048100:14885,15049406:14886,15051162:14887,15106472:14888,15107975:14889,15112335:14890,15112326:14891,15114425:14892,15114929:14893,15120311:14894,15177621:14895,15185082:14896,15239598:14897,15314306:14898,14989979:14899,14990736:14900,15044489:14901,15045766:14902,15054255:14903,15054758:14904,15054766:14905,15114171:14906,15119001:14907,15176115:14908,15179906:14909,15247760:14910,15306390:14911,15246239:14912,15048080:14913,15055527:14914,15109291:14915,15041205:14916,15041196:14917,15042189:14918,15113344:14919,15045513:14920,15049118:14921,15050427:14922,15052464:14923,15056297:14924,15108493:14925,15109793:14926,15114429:14927,15117747:14928,15120520:14929,15172029:14930,15304583:14931,15174272:14932,15179925:14933,15179942:14934,15181229:14935,15111822:14936,15185072:14937,15241116:14938,15246209:14939,15252617:14940,15309467:14941,15042980:14942,15047848:14943,15113616:14944,15187370:14945,15250081:14946,15042228:14947,15048066:14948,15308970:14949,15048890:14950,15115914:14951,15237812:14952,15045298:14953,15053966:14954,15048636:14955,15180437:14956,15316922:14957,14990748:14958,15042954:14959,15045259:14960,15110334:14961,15112360:14962,15113364:14963,15114165:14964,15182468:14965,15183254:14966,15185058:14967,15305903:14968,15114652:14969,15314605:14970,15183033:14971,15043737:14972,15042186:14973,15042743:14974,15052703:15137,15109046:15138,15110830:15139,15111078:15140,15113389:15141,15118010:15142,15242921:15143,15309713:15144,15178384:15145,15314838:15146,15109516:15147,15305862:15148,15314603:15149,15178431:15150,15112594:15151,14989449:15152,15041176:15153,15044482:15154,15053233:15155,15106984:15156,15110802:15157,15111587:15158,15114655:15159,15173542:15160,15175562:15161,15176867:15162,15183511:15163,15186562:15164,15243925:15165,15249027:15166,15250331:15167,15304120:15168,15312016:15169,15111852:15170,15112875:15171,15117963:15172,14990229:15173,14990228:15174,14990522:15175,14990783:15176,15042746:15177,15044536:15178,15044530:15179,15046563:15180,15047579:15181,15049643:15182,15050635:15183,15050633:15184,15050687:15185,15052176:15186,15053197:15187,15054978:15188,15055019:15189,15056791:15190,15106205:15191,15109255:15192,15111343:15193,15052188:15194,15111855:15195,15111869:15196,15112104:15197,15113885:15198,15117730:15199,15117755:15200,15118479:15201,15175045:15202,15181193:15203,15181697:15204,15184824:15205,15185049:15206,15185067:15207,15237794:15208,15238274:15209,15239091:15210,15246998:15211,15247774:15212,15247785:15213,15247782:15214,15248012:15215,15248302:15216,15250311:15217,15250332:15218,15309708:15219,15311804:15220,15117743:15221,14989963:15222,14990524:15223,14990989:15224,15041936:15225,15052183:15226,15052730:15227,15107464:15228,15109249:15229,15112578:15230,15117473:15393,15121291:15394,15119035:15395,15173822:15396,15176381:15397,15177620:15398,15180673:15399,15180986:15400,15237260:15401,15237299:15402,15239082:15403,15241876:15404,15253150:15405,15118736:15406,15317439:15407,15056015:15408,15248792:15409,15316139:15410,15182778:15411,15252408:15412,15052429:15413,15309739:15414,14989443:15415,15044529:15416,15048631:15417,15049905:15418,15051657:15419,15052452:15420,15106697:15421,15120831:15422,15121542:15423,15177406:15424,15250346:15425,15052447:15426,15242368:15427,15183776:15428,15040946:15429,15114164:15430,15239837:15431,15053217:15432,15242634:15433,15186078:15434,15239310:15435,15042201:15436,15052932:15437,15109544:15438,15250854:15439,15111836:15440,15173038:15441,15180990:15442,15185047:15443,15237253:15444,15248541:15445,15252362:15446,15303086:15447,15244167:15448,15303338:15449,15040671:15450,15043514:15451,15052986:15452,15113619:15453,15172028:15454,15173813:15455,15304076:15456,15304584:15457,15305899:15458,15240101:15459,15052674:15460,15056049:15461,15107001:15462,14989499:15463,15044502:15464,15052424:15465,15108491:15466,15113393:15467,15117962:15468,15174569:15469,15175584:15470,15181998:15471,15238571:15472,15251107:15473,15304082:15474,15312534:15475,15041682:15476,15044503:15477,15045034:15478,15052735:15479,15109768:15480,15116473:15481,15185580:15482,15309952:15483,15047578:15484,15044494:15485,15045032:15486,15052439:15649,15052977:15650,15054750:15651,14991278:15652,15107201:15653,15109054:15654,15119538:15655,15181696:15656,15181707:15657,15185282:15658,15186317:15659,15187858:15660,15239085:15661,15239327:15662,15241872:15663,15245702:15664,15246770:15665,15249040:15666,15251892:15667,15252655:15668,15302833:15669,15304075:15670,15304108:15671,15309702:15672,15304348:15673,14990208:15674,14990735:15675,15041925:15676,15043969:15677,15056531:15678,15108238:15679,15114132:15680,15118721:15681,15120523:15682,15175075:15683,15186086:15684,15304589:15685,15305347:15686,15044500:15687,15049881:15688,15052479:15689,15120273:15690,15181213:15691,15186094:15692,15184539:15693,15049150:15694,15173279:15695,15042490:15696,15245715:15697,15253424:15698,14991242:15699,15053755:15700,15112357:15701,15179436:15702,15182755:15703,15239324:15704,15312831:15705,15042438:15706,15056554:15707,15112108:15708,15115695:15709,15117961:15710,15120307:15711,15121046:15712,15121828:15713,15178686:15714,15185044:15715,15054753:15716,15303093:15717,15304327:15718,15310982:15719,15042470:15720,15042717:15721,15108480:15722,15112849:15723,15113113:15724,15120538:15725,15055542:15726,15185810:15727,15187378:15728,15113144:15729,15242927:15730,15243191:15731,15248312:15732,15043241:15733,15044505:15734,15050163:15735,15055503:15736,15056528:15737,15106453:15738,15305636:15739,15309220:15740,15041207:15741,15041695:15742,15043485:15905,15043744:15906,15043975:15907,15044524:15908,15045544:15909,15046022:15910,15045809:15911,15046807:15912,15050152:15913,15050430:15914,15050940:15915,15052469:15916,15052934:15917,15052943:15918,15052945:15919,15052954:15920,15055492:15921,15055498:15922,15055776:15923,15056304:15924,15108543:15925,15108740:15926,15109019:15927,15109772:15928,15109559:15929,15112327:15930,15112332:15931,15112365:15932,15112630:15933,15113662:15934,15114914:15935,15116447:15936,15116469:15937,15119036:15938,15120008:15939,15120521:15940,15120792:15941,15172796:15942,15172774:15943,15173031:15944,15177607:15945,15178881:15946,15180189:15947,15180929:15948,15181221:15949,15181744:15950,15182752:15951,15182993:15952,15184551:15953,15185081:15954,15237782:15955,15241110:15956,15241867:15957,15242633:15958,15245725:15959,15246259:15960,15247519:15961,15247548:15962,15247764:15963,15247795:15964,15249825:15965,15250334:15966,15304356:15967,15305126:15968,15306174:15969,15306904:15970,15309468:15971,15310488:15972,14989450:15973,14989448:15974,14989470:15975,14989719:15976,15042199:15977,15042992:15978,15048590:15979,15048884:15980,15049612:15981,15051938:15982,15055032:15983,15106949:15984,15111102:15985,15113633:15986,15113622:15987,15119748:15988,15174326:15989,15177139:15990,15182243:15991,15241912:15992,15248818:15993,15304376:15994,15305888:15995,15046833:15996,15048628:15997,15311806:15998,15109037:16161,15115405:16162,15117974:16163,15173549:16164,15186324:16165,15237559:16166,15239602:16167,15247270:16168,15311775:16169,15244693:16170,15253169:16171,15052987:16172,14990520:16173,14991265:16174,14991029:16175,15045767:16176,15050912:16177,15052701:16178,15052713:16179,15056771:16180,15107470:16181,15109295:16182,15111856:16183,15112587:16184,15115182:16185,15115931:16186,15119800:16187,15120305:16188,15176883:16189,15177401:16190,15178911:16191,15181214:16192,15181734:16193,15185075:16194,15239075:16195,15239855:16196,15242922:16197,15247018:16198,15247546:16199,15252139:16200,15253147:16201,15302834:16202,15304605:16203,15309959:16204,14990010:16205,14990209:16206,15042691:16207,15049141:16208,15049644:16209,15052939:16210,15176858:16211,15052989:16212,15238542:16213,15247498:16214,15253381:16215,15309219:16216,15310253:16217,15183013:16218,15248271:16219,15310984:16220,15304098:16221,15047603:16222,15044264:16223,15302807:16224,15044793:16225,15048322:16226,15055013:16227,15109800:16228,15118516:16229,15172234:16230,15179169:16231,15184523:16232,15187872:16233,15245744:16234,15303042:16235,15304084:16236,15305872:16237,15305880:16238,15309455:16239,15176094:16240,15313796:16241,15053959:16242,15054249:16243,15111600:16244,15113890:16245,15251112:16246,15309723:16247,15109550:16248,15113609:16249,15115417:16250,15241093:16251,15310999:16252,15309696:16253,15246270:16254,15122052:16417,15110586:16418,15052728:16419,14989462:16420,15171756:16421,15177117:16422,15112367:16423,15042436:16424,15042742:16425,15043490:16426,15050643:16427,15056513:16428,15106215:16429,15108240:16430,15111359:16431,15111604:16432,15112351:16433,15112628:16434,15115186:16435,15114390:16436,15117731:16437,15120517:16438,15174066:16439,15176863:16440,15178651:16441,15184574:16442,15237526:16443,15049648:16444,15246269:16445,15246783:16446,15248032:16447,15248019:16448,15248267:16449,15302813:16450,15304338:16451,15310226:16452,15310233:16453,15111817:16454,15181966:16455,15238278:16456,15309499:16457,15055021:16458,15106972:16459,15108250:16460,15111845:16461,15112340:16462,15113872:16463,15179699:16464,15182221:16465,15184269:16466,15186110:16467,15238282:16468,15250092:16469,15250852:16470,15251361:16471,15251871:16472,15180457:16473,15042695:16474,15109017:16475,15109797:16476,15110530:16477,15108760:16478,15247533:16479,15182467:16480,15183744:16481,15248044:16482,15309738:16483,15185334:16484,15239308:16485,15244681:16486,14990233:16487,15041928:16488,15043971:16489,15044e3:16490,15052451:16491,15052930:16492,15052950:16493,15054749:16494,15108262:16495,15108487:16496,15110832:16497,15114387:16498,15114420:16499,15119241:16500,15119749:16501,15119511:16502,15114131:16503,15121820:16504,15173006:16505,15173053:16506,15112075:16507,15182271:16508,15183533:16509,15185818:16510,15186314:16673,15187624:16674,15238586:16675,15239323:16676,15239353:16677,15242918:16678,15247790:16679,15250318:16680,15251381:16681,15303096:16682,15303095:16683,15305389:16684,15305361:16685,15308419:16686,15314606:16687,15042957:16688,15046276:16689,15121592:16690,15172790:16691,15041960:16692,15181445:16693,15186325:16694,15238835:16695,15184782:16696,15047052:16697,15049105:16698,15053480:16699,15109802:16700,15113150:16701,15113149:16702,15115674:16703,15174553:16704,15177359:16705,15177358:16706,15180942:16707,15181206:16708,15181727:16709,15184535:16710,15185056:16711,15185284:16712,15243399:16713,15247540:16714,15308987:16715,15303073:16716,15318176:16717,15041447:16718,15042997:16719,15044492:16720,15044514:16721,15040649:16722,15046314:16723,15049646:16724,15050127:16725,15173821:16726,15052427:16727,15053220:16728,15043741:16729,15106979:16730,15106995:16731,15109532:16732,15109763:16733,15109311:16734,15109819:16735,15111053:16736,15112105:16737,15113145:16738,15054755:16739,15116173:16740,15116221:16741,15121557:16742,15173541:16743,14989961:16744,15177641:16745,15178680:16746,15182483:16747,15184799:16748,15185807:16749,15185564:16750,15237537:16751,15240585:16752,15240600:16753,15241644:16754,15241916:16755,15243195:16756,15246213:16757,15250864:16758,15302785:16759,15303085:16760,15306391:16761,15309980:16762,15313042:16763,15041423:16764,15049367:16765,15107726:16766,15239059:16929,15242421:16930,15250568:16931,15302816:16932,14991235:16933,15040948:16934,15042951:16935,15044019:16936,15106479:16937,15109513:16938,15113631:16939,15120556:16940,15251123:16941,15302815:16942,14991255:16943,15053214:16944,15250314:16945,15112079:16946,15185562:16947,15043986:16948,15245974:16949,15041974:16950,15110019:16951,15052184:16952,15052203:16953,15052938:16954,15110285:16955,15113617:16956,15303068:16957,14990230:16958,15049882:16959,15049898:16960,15118768:16961,15247761:16962,15045822:16963,15048853:16964,15050405:16965,15106992:16966,15108499:16967,15114113:16968,15239349:16969,15115669:16970,15309184:16971,15312772:16972,15313064:16973,14990739:16974,15048838:16975,15052734:16976,15237264:16977,15053489:16978,15055023:16979,15056517:16980,15106208:16981,15107467:16982,15108276:16983,15113151:16984,15119280:16985,15121310:16986,15238030:16987,15238591:16988,15240084:16989,15245963:16990,15250104:16991,15302784:16992,15302830:16993,15309450:16994,15317915:16995,15314843:16996,14990243:16997,15044528:16998,15049895:16999,15183020:17e3,15304333:17001,15311244:17002,15316921:17003,15121309:17004,15171751:17005,15043987:17006,15046020:17007,15052421:17008,15108504:17009,15108766:17010,15109011:17011,15119010:17012,15122351:17013,15175842:17014,15247511:17015,15306936:17016,15122305:17017,15248318:17018,15240376:17019,15042471:17020,15244216:17021,15044522:17022,15044521:17185,14990726:17186,15303060:17187,15253168:17188,15050154:17189,15238321:17190,15054781:17191,15182762:17192,15253183:17193,15115162:17194,15249591:17195,15174584:17196,15315336:17197,15116477:17198,15248048:17199,14989497:17200,15043992:17201,15046790:17202,15048102:17203,15108997:17204,15109794:17205,15112102:17206,15117710:17207,15120289:17208,15120795:17209,15172269:17210,15179693:17211,15182767:17212,15183530:17213,15185595:17214,15237309:17215,15238022:17216,15244171:17217,15248021:17218,15306139:17219,15047587:17220,15049607:17221,15056062:17222,15111853:17223,15112854:17224,15116928:17225,15118005:17226,15176887:17227,15248263:17228,15040676:17229,15179685:17230,15047856:17231,15056027:17232,15106469:17233,15112634:17234,15118752:17235,15177652:17236,15181978:17237,15187374:17238,15239092:17239,15244440:17240,15303045:17241,15312563:17242,15183753:17243,15177116:17244,15182777:17245,15183249:17246,15242116:17247,15302800:17248,15181737:17249,15182482:17250,15240374:17251,15051681:17252,15179136:17253,14989485:17254,14990258:17255,15052441:17256,15056800:17257,15108797:17258,15112380:17259,15114161:17260,15119272:17261,15243691:17262,15245751:17263,15247547:17264,15304078:17265,15305651:17266,15312784:17267,15116439:17268,15171750:17269,15174826:17270,15240103:17271,15241623:17272,15250095:17273,14989441:17274,15041926:17275,15042443:17276,15046283:17277,15052725:17278,15054998:17441,15055027:17442,15055489:17443,15056020:17444,15056053:17445,15056299:17446,15056564:17447,15108018:17448,15109265:17449,15112866:17450,15113373:17451,15121838:17452,15174034:17453,15176890:17454,15178938:17455,15237556:17456,15238329:17457,15238584:17458,15244726:17459,15248063:17460,15248284:17461,15251077:17462,15251379:17463,15305370:17464,15308215:17465,15310978:17466,15315877:17467,15043461:17468,15109527:17469,15178676:17470,15113365:17471,15118984:17472,15175565:17473,15250307:17474,15306414:17475,15309235:17476,15119525:17477,15049372:17478,15115406:17479,15116172:17480,15253437:17481,15306394:17482,15177627:17483,15302810:17484,15049114:17485,15114370:17486,15109812:17487,15116219:17488,14990723:17489,15121580:17490,15114136:17491,15253179:17492,15242406:17493,15185588:17494,15306132:17495,15115455:17496,15121840:17497,15048106:17498,15049655:17499,15051948:17500,15185068:17501,15173802:17502,15044746:17503,15304611:17504,15316660:17505,14989997:17506,14990734:17507,15040924:17508,15040949:17509,15042947:17510,15250078:17511,15045e3:17512,15048868:17513,15052442:17514,15055005:17515,15055509:17516,15055533:17517,15055799:17518,15056031:17519,15106700:17520,15108789:17521,15109306:17522,15110032:17523,15114927:17524,15118720:17525,15180423:17526,15181454:17527,15181963:17528,15185824:17529,15239559:17530,15247490:17531,15248294:17532,15251844:17533,15302803:17534,15303352:17697,15303853:17698,15304600:17699,15318158:17700,15119269:17701,15110552:17702,15111074:17703,15111605:17704,15121332:17705,15178372:17706,15183003:17707,15303081:17708,15306641:17709,15121082:17710,15045554:17711,15056569:17712,15110820:17713,15252877:17714,15253421:17715,15305092:17716,15041976:17717,15049131:17718,15049897:17719,15053205:17720,15055511:17721,15120315:17722,15186575:17723,15176860:17724,15250108:17725,15252386:17726,15311259:17727,15172281:17728,14990493:17729,15118015:17730,15122097:17731,15176880:17732,15309755:17733,15041934:17734,15044752:17735,15048885:17736,15049111:17737,15050412:17738,15053216:17739,15056530:17740,15111831:17741,15113628:17742,15120545:17743,15178171:17744,15241119:17745,15250349:17746,15302804:17747,15303613:17748,15306125:17749,15179941:17750,15179962:17751,15043242:17752,15055526:17753,15047839:17754,15050164:17755,15106194:17756,15040658:17757,15041946:17758,15042220:17759,15042445:17760,15042688:17761,15045776:17762,15049108:17763,15049112:17764,15050135:17765,15052437:17766,15053750:17767,15054475:17768,15106748:17769,15108757:17770,15110317:17771,15113649:17772,15114627:17773,15114940:17774,15115167:17775,15178647:17776,15120280:17777,15120815:17778,15120027:17779,15172015:17780,15173512:17781,15056275:17782,15177624:17783,15181239:17784,15183241:17785,15183252:17786,15183250:17787,15184790:17788,15185329:17789,15042736:17790,15241635:17953,15242665:17954,15243172:17955,15247502:17956,15248516:17957,15249798:17958,15251599:17959,15302787:17960,15302799:17961,15306905:17962,15309238:17963,15311021:17964,15313072:17965,15308696:17966,15041421:17967,15043477:17968,15044748:17969,15048834:17970,15052942:17971,15107751:17972,15110814:17973,15119518:17974,15179443:17975,15182757:17976,15238068:17977,15241348:17978,15303059:17979,15305349:17980,15053728:17981,15316103:17982,15043775:17983,15056535:17984,15056563:17985,15120028:17986,15174073:17987,15179171:17988,15181503:17989,15183780:17990,15118226:17991,15174572:17992,15248045:17993,15114371:17994,15116705:17995,15042488:17996,15182465:17997,15115444:17998,15053194:17999,15315894:18e3,15240107:18001,15052677:18002,15304073:18003,15171742:18004,15047096:18005,15053231:18006,15106951:18007,15111590:18008,15118988:18009,15249818:18010,15303041:18011,15310995:18012,15045009:18013,15113095:18014,15304845:18015,15050120:18016,15303331:18017,15042181:18018,14989709:18019,15042474:18020,15242905:18021,15248526:18022,15171992:18023,15109562:18024,15306123:18025,15115682:18026,15312564:18027,15186052:18028,15177143:18029,15043991:18030,15115680:18031,15252383:18032,15309731:18033,15118749:18034,14989964:18035,15052988:18036,15056016:18037,15253417:18038,15043714:18039,15250321:18040,15237769:18041,15243705:18042,15055807:18043,15112101:18044,14989747:18045,15041957:18046,15050370:18209,15052991:18210,15310766:18211,14990267:18212,15050378:18213,15056781:18214,15248013:18215,15122337:18216,15181488:18217,15181218:18218,15052711:18219,15241649:18220,15174827:18221,15173297:18222,15055284:18223,15056821:18224,15109563:18225,15110810:18226,15173507:18227,15184536:18228,14989699:18229,15055804:18230,14989707:18231,15048604:18232,15047330:18233,15106729:18234,15122307:18235,15185037:18236,15238077:18237,15238323:18238,15238847:18239,15253170:18240,15246999:18241,15243940:18242,15054772:18243,15108746:18244,15110829:18245,15246983:18246,15113655:18247,15119266:18248,15119550:18249,15175862:18250,15179956:18251,15051142:18252,15187381:18253,15239853:18254,15312556:18255,14991283:18256,15055747:18257,15109021:18258,15109778:18259,15111575:18260,15113647:18261,15178627:18262,15174028:18263,15238028:18264,15237818:18265,15252649:18266,15304077:18267,15040653:18268,15048633:18269,15051410:18270,15114885:18271,15115699:18272,15173028:18273,15174589:18274,15250103:18275,15049650:18276,15250336:18277,15309226:18278,15302809:18279,15244735:18280,15181732:18281,15179687:18282,15241385:18283,14990511:18284,15042981:18285,15043994:18286,15109005:18287,15114127:18288,15119242:18289,15178173:18290,15183508:18291,15184533:18292,15239350:18293,15242884:18294,15253419:18295,15113117:18296,15121568:18297,15173766:18298,15186075:18299,15240875:18300,15312769:18301,15317670:18302,15042493:18465,15183537:18466,15180210:18467,15183544:18468,15237767:18469,15183240:18470,15117224:18471,15055265:18472,15237772:18473,15177105:18474,15177120:18475,15041963:18476,15305122:18477,15121036:18478,15178170:18479,15304343:18480,15313834:18481,14990480:18482,15187376:18483,15108764:18484,15183247:18485,15308453:18486,15315881:18487,15047098:18488,15049113:18489,15244196:18490,15309500:18491,14990516:18492,15042724:18493,15043978:18494,15044493:18495,15044507:18496,15054982:18497,15110316:18498,15111825:18499,15113663:18500,15118526:18501,15118734:18502,15174024:18503,15174319:18504,15175597:18505,15177108:18506,15186305:18507,15239340:18508,15243177:18509,15250089:18510,15183748:18511,15304582:18512,15173033:18513,15310994:18514,15311791:18515,15109309:18516,15112617:18517,15177130:18518,15178660:18519,15180688:18520,15242627:18521,15244206:18522,15043754:18523,15043985:18524,15044774:18525,15050371:18526,15055495:18527,15056316:18528,15106738:18529,15108489:18530,15108537:18531,15108779:18532,15111824:18533,15118228:18534,15119244:18535,15177394:18536,15178414:18537,15180433:18538,15181720:18539,15185803:18540,15187383:18541,15237797:18542,15245995:18543,15248057:18544,15250107:18545,15303103:18546,15310238:18547,15311771:18548,15116427:18549,15184056:18550,15041177:18551,15052990:18552,15056558:18553,15113863:18554,15118232:18555,15175861:18556,15178889:18557,15187598:18558,15318203:18721,15114122:18722,15181975:18723,15043769:18724,15177355:18725,15313837:18726,15056294:18727,15238813:18728,15241137:18729,15237784:18730,15056060:18731,15056773:18732,15177122:18733,15183238:18734,15302844:18735,15114663:18736,15050667:18737,15051419:18738,15185040:18739,15178174:18740,15248556:18741,14991285:18742,15056298:18743,15116441:18744,15118519:18745,15121538:18746,15176610:18747,15181224:18748,15245736:18749,15247765:18750,15249849:18751,15055775:18752,15110031:18753,15177605:18754,15181714:18755,15240087:18756,15305896:18757,15305650:18758,15241884:18759,15244205:18760,15315117:18761,15045505:18762,15056300:18763,15111820:18764,15119772:18765,15171733:18766,15250087:18767,15250323:18768,15311035:18769,15111567:18770,15176630:18771,14989453:18772,14990232:18773,15048608:18774,15049899:18775,15051174:18776,15052684:18777,15042216:18778,15054979:18779,15055516:18780,15106198:18781,15108534:18782,15111607:18783,15111847:18784,15112622:18785,15119790:18786,15173814:18787,15183014:18788,15238544:18789,15238810:18790,15239833:18791,15248796:18792,15250080:18793,15250342:18794,15250868:18795,15308956:18796,15309188:18797,14991022:18798,15110827:18799,15117734:18800,15239326:18801,15241633:18802,15242666:18803,15303592:18804,15052929:18805,15115667:18806,15311528:18807,15241658:18808,15242647:18809,14990479:18810,15042991:18811,15056553:18812,15055237:18813,15113357:18814,15181455:18977,15238585:18978,15246471:18979,15246982:18980,15120309:18981,15056023:18982,15108501:18983,15119032:18984,14990223:18985,15174057:18986,15314578:18987,15042694:18988,15044795:18989,15047092:18990,15049395:18991,15107748:18992,15108526:18993,15172762:18994,15050158:18995,15184521:18996,15184798:18997,15185051:18998,15309744:18999,15111815:19e3,15237534:19001,14989465:19002,14990773:19003,15041973:19004,15049088:19005,15055267:19006,15055283:19007,15056010:19008,15114116:19009,14989478:19010,15242429:19011,15308425:19012,15309211:19013,15184307:19014,15310977:19015,15041467:19016,15049601:19017,15178134:19018,15180455:19019,15042725:19020,15179429:19021,15242385:19022,15183494:19023,15040911:19024,15049865:19025,15174023:19026,15183751:19027,15185832:19028,15253178:19029,15253396:19030,15303053:19031,14991039:19032,15043465:19033,15050921:19034,15056001:19035,15310509:19036,14991261:19037,15239319:19038,15305642:19039,15047811:19040,15109525:19041,15117737:19042,15176875:19043,15246236:19044,15252628:19045,15182210:19046,15043487:19047,15049363:19048,15107477:19049,15108234:19050,15112878:19051,15118221:19052,15184063:19053,15241129:19054,15040675:19055,14991288:19056,15043717:19057,15044998:19058,15048881:19059,15050121:19060,15052445:19061,15053744:19062,15053743:19063,15053993:19064,15055510:19065,15108785:19066,15109543:19067,15111358:19068,15111865:19069,15113355:19070,15119253:19233,15119265:19234,15172537:19235,15179954:19236,15186091:19237,15238046:19238,15239859:19239,15241356:19240,15242156:19241,15244418:19242,15246482:19243,15247530:19244,15249802:19245,15303334:19246,15305618:19247,15311805:19248,15315891:19249,15316396:19250,14989711:19251,14989985:19252,15041165:19253,15042966:19254,15048074:19255,15050408:19256,15055037:19257,15056792:19258,15056793:19259,15108287:19260,15112884:19261,15113371:19262,15114128:19263,15115154:19264,15042194:19265,15185057:19266,15237802:19267,15238824:19268,15248512:19269,15250060:19270,15250111:19271,15305150:19272,15308978:19273,15044768:19274,15311020:19275,15043735:19276,15041429:19277,15043996:19278,15049384:19279,15110834:19280,15113396:19281,15174055:19282,15179174:19283,15182214:19284,15304614:19285,15043459:19286,15119009:19287,15117958:19288,15048832:19289,15055244:19290,15050132:19291,15113388:19292,15187899:19293,15042465:19294,15178630:19295,15110569:19296,15180712:19297,15314324:19298,15317691:19299,15048587:19300,15050425:19301,15112359:19302,15113882:19303,15118222:19304,15045545:19305,15116185:19306,15055253:19307,15238812:19308,15113877:19309,15314602:19310,15114174:19311,15315346:19312,15114653:19313,14989990:19314,14991267:19315,15044488:19316,15108793:19317,15113387:19318,15119019:19319,15253380:19320,14991021:19321,15186349:19322,15317695:19323,14989447:19324,15107490:19325,15121024:19326,15121579:19489,15242387:19490,15045043:19491,15113386:19492,15314309:19493,15054771:19494,15183509:19495,15053484:19496,15052678:19497,15244444:19498,15120778:19499,15242129:19500,15181972:19501,15238280:19502,15050393:19503,15184525:19504,15118481:19505,15178912:19506,15043481:19507,15049890:19508,15172769:19509,15174047:19510,15179675:19511,15309991:19512,15316385:19513,15115403:19514,15051199:19515,15050904:19516,15042213:19517,15044749:19518,15045053:19519,15112334:19520,15178655:19521,15253431:19522,15305368:19523,15315892:19524,15050666:19525,15174045:19526,15121285:19527,15041933:19528,15115145:19529,15185599:19530,15185836:19531,15310242:19532,15317690:19533,15110584:19534,15116449:19535,15240322:19536,15050372:19537,15052191:19538,15118235:19539,15174811:19540,15178674:19541,15185586:19542,15237271:19543,15241881:19544,15041714:19545,15113384:19546,15317913:19547,15178670:19548,15113634:19549,15043519:19550,15312005:19551,15052964:19552,15108283:19553,15184318:19554,15250096:19555,15046031:19556,15106742:19557,15185035:19558,15308416:19559,15043713:19560,14989727:19561,15042230:19562,15049884:19563,15173818:19564,15237302:19565,15304590:19566,15056037:19567,15179682:19568,15044228:19569,15056313:19570,15185028:19571,15242924:19572,15247539:19573,15252109:19574,15310230:19575,15114163:19576,15242926:19577,15307155:19578,15107209:19579,15107208:19580,15119033:19581,15178130:19582,15248301:19745,15252664:19746,15045807:19747,14990737:19748,15041706:19749,15043463:19750,15044491:19751,15052453:19752,15055293:19753,15106720:19754,15107714:19755,15110038:19756,15113353:19757,15114138:19758,15120807:19759,15120012:19760,15174838:19761,15174839:19762,15176881:19763,15181200:19764,15246229:19765,15248024:19766,15303050:19767,15303313:19768,15303605:19769,15309700:19770,15244941:19771,15049877:19772,14989960:19773,14990745:19774,14989454:19775,15248009:19776,15252671:19777,15310992:19778,15041197:19779,15055292:19780,15050390:19781,15052473:19782,15055544:19783,15110042:19784,15110074:19785,15111041:19786,15113116:19787,15115658:19788,15116184:19789,15119499:19790,15121078:19791,15173268:19792,15176872:19793,15182511:19794,15187594:19795,15237248:19796,15241609:19797,15242121:19798,15246977:19799,15248545:19800,15251594:19801,15303077:19802,15309245:19803,15312010:19804,15107518:19805,15108753:19806,15117490:19807,15118979:19808,15119796:19809,15187852:19810,15187900:19811,15120256:19812,15187589:19813,15244986:19814,15246264:19815,15113637:19816,15240881:19817,15311036:19818,15309751:19819,15119515:19820,15185313:19821,15241405:19822,15304106:19823,14989745:19824,15044021:19825,15054224:19826,15117444:19827,15122347:19828,15243149:19829,15243437:19830,15247015:19831,15042729:19832,15044751:19833,15053221:19834,15113614:19835,15114920:19836,15175814:19837,15176323:19838,15177634:20001,15246223:20002,15246241:20003,15304588:20004,15309730:20005,15309240:20006,15056523:20007,15175303:20008,15182731:20009,15241614:20010,15109792:20011,15177125:20012,15043209:20013,15119745:20014,15121052:20015,15175817:20016,15177113:20017,15180203:20018,15184530:20019,15309446:20020,15182748:20021,15318669:20022,14991030:20023,15107502:20024,15112069:20025,15243676:20026,14989958:20027,14989998:20028,15041434:20029,14989473:20030,15042444:20031,15052718:20032,15111833:20033,15114881:20034,15120060:20035,15174815:20036,15178114:20037,15179437:20038,15181980:20039,15184807:20040,15239599:20041,15248274:20042,15303100:20043,15304591:20044,15309237:20045,15311e3:20046,15043227:20047,15185809:20048,15040683:20049,15044248:20050,15113879:20051,15120267:20052,15173520:20053,15175859:20054,15239080:20055,15252650:20056,15309475:20057,15315351:20058,15317663:20059,15176096:20060,15049089:20061,15120025:20062,15185071:20063,15311262:20064,14990244:20065,14990518:20066,14990987:20067,15042231:20068,15043249:20069,15054522:20070,15106204:20071,15175346:20072,15180988:20073,15240083:20074,15304884:20075,15309495:20076,15309750:20077,15309962:20078,15317655:20079,15318434:20080,15112870:20081,15117748:20082,15042711:20083,15043235:20084,15172488:20085,15246210:20086,15055753:20087,15106443:20088,15107728:20089,15121571:20090,15173001:20091,15184062:20092,15185844:20093,15237551:20094,15242158:20257,15302819:20258,15305900:20259,15044994:20260,15314351:20261,15117203:20262,15172233:20263,15250306:20264,15251375:20265,15310002:20266,15043252:20267,15051137:20268,15055754:20269,15056004:20270,15113367:20271,15115708:20272,15115924:20273,15119786:20274,15121551:20275,15174050:20276,15174588:20277,15183789:20278,15237249:20279,15237566:20280,15244683:20281,15303566:20282,15041965:20283,15317651:20284,15181444:20285,15237771:20286,15305906:20287,15248278:20288,15040685:20289,15045260:20290,15247793:20291,15117738:20292,15250308:20293,15238279:20294,15106961:20295,15113888:20296,15316914:20297,14989977:20298,14989976:20299,15315088:20300,15247787:20301,15243137:20302,15242664:20303,15115392:20304,15120830:20305,15180439:20306,15238549:20307,15056012:20513,14989456:20514,14989461:20515,14989482:20516,14989489:20517,14989494:20518,14989500:20519,14989503:20520,14989698:20521,14989718:20522,14989720:20523,14989954:20524,14989957:20525,15249835:20526,14989962:20527,15239314:20528,15056013:20529,14989966:20530,14989982:20531,14989983:20532,14989984:20533,14989986:20534,1499e4:20535,14990003:20536,14990006:20537,14990222:20538,14990221:20539,14990212:20540,14990214:20541,14990210:20542,14990231:20543,14990238:20544,14990253:20545,14990239:20546,14990263:20547,14990473:20548,14990746:20549,14990512:20550,14990747:20551,14990749:20552,14990743:20553,14990727:20554,14990774:20555,14990984:20556,14990991:20557,14991e3:20558,14990779:20559,14990761:20560,14990768:20561,14990993:20562,14990767:20563,14990982:20564,14990998:20565,15041688:20566,14991252:20567,14991263:20568,14991246:20569,14991256:20570,14991259:20571,14991249:20572,14991258:20573,14991248:20574,14991268:20575,14991269:20576,15040666:20577,15040680:20578,15040660:20579,15040682:20580,15040677:20581,15040645:20582,14990492:20583,14991286:20584,15040673:20585,15040681:20586,15040684:20587,14991294:20588,14991279:20589,15040657:20590,15040646:20591,15040899:20592,15040903:20593,15113347:20594,15040917:20595,15040912:20596,15040904:20597,15040922:20598,15040918:20599,15040940:20600,15040952:20601,15041152:20602,15041178:20603,15041157:20604,15041204:20605,15041202:20606,15041417:20769,15041418:20770,15041203:20771,15041410:20772,15041430:20773,15041438:20774,15041445:20775,15041453:20776,15041443:20777,15041454:20778,15041465:20779,15041461:20780,15041673:20781,15041665:20782,15041666:20783,15041686:20784,15041685:20785,15041684:20786,15041690:20787,15041697:20788,15041722:20789,15041719:20790,15041724:20791,15041723:20792,15041727:20793,15041920:20794,15041938:20795,15041932:20796,15041940:20797,15041954:20798,15182776:20799,15041961:20800,15041962:20801,15041966:20802,15042176:20803,15042178:20804,15047576:20805,15042188:20806,15042185:20807,15042191:20808,15042193:20809,15042195:20810,15042197:20811,15042198:20812,15042212:20813,15042214:20814,15042210:20815,15042217:20816,15042218:20817,15042219:20818,15042227:20819,15042225:20820,15042226:20821,15042224:20822,15042229:20823,15042237:20824,15042437:20825,15042441:20826,15042459:20827,15042464:20828,15243669:20829,15042473:20830,15042477:20831,15042480:20832,15042485:20833,15042494:20834,15042692:20835,15042699:20836,15042708:20837,15042702:20838,15042727:20839,15042730:20840,15042734:20841,15042739:20842,15042745:20843,15042959:20844,15042948:20845,15042955:20846,15042956:20847,15042974:20848,15042964:20849,15042986:20850,15042996:20851,15042985:20852,15042995:20853,15043007:20854,15043005:20855,15043213:20856,15043220:20857,15043218:20858,15042993:20859,15043208:20860,15043217:20861,15253160:20862,15253159:21025,15043244:21026,15043245:21027,15043260:21028,15043253:21029,15043457:21030,15043469:21031,15043479:21032,15043486:21033,15043491:21034,15043494:21035,15311789:21036,15043488:21037,15043507:21038,15043509:21039,15043512:21040,15043513:21041,15043718:21042,15043720:21043,15176888:21044,15043725:21045,15043728:21046,15043727:21047,15043733:21048,15043738:21049,15043747:21050,15043759:21051,15043761:21052,15043763:21053,15043768:21054,15043968:21055,15043974:21056,15043973:21057,14989463:21058,15043977:21059,15043981:21060,15042454:21061,15043998:21062,15044009:21063,15044014:21064,15049880:21065,15044027:21066,15044023:21067,15044226:21068,15044246:21069,15044256:21070,15044262:21071,15044261:21072,15044270:21073,15044272:21074,15044278:21075,15044483:21076,15184018:21077,15309721:21078,15044511:21079,15113148:21080,15173550:21081,15044526:21082,15044520:21083,15044525:21084,15044538:21085,15044737:21086,15044797:21087,15044992:21088,15044780:21089,15044781:21090,15044796:21091,15044782:21092,15044790:21093,15044777:21094,15044765:21095,15045006:21096,15045263:21097,15045045:21098,15045262:21099,15045023:21100,15045041:21101,15045047:21102,15045040:21103,15045266:21104,15045051:21105,15045248:21106,15045046:21107,15045252:21108,15045264:21109,15045254:21110,15045511:21111,15045282:21112,15045304:21113,15045285:21114,15045292:21115,15045508:21116,15045512:21117,15045288:21118,15045291:21281,15045506:21282,15045284:21283,15045310:21284,15045308:21285,15045528:21286,15045541:21287,15045542:21288,15045775:21289,15045780:21290,15045565:21291,15045550:21292,15045549:21293,15045562:21294,15045538:21295,15045817:21296,15046016:21297,15046051:21298,15046028:21299,15045806:21300,15046044:21301,15046021:21302,15046038:21303,15046039:21304,15045816:21305,15045811:21306,15046045:21307,15046297:21308,15046272:21309,15045295:21310,15046282:21311,15046303:21312,15046075:21313,15046078:21314,15046296:21315,15046302:21316,15046318:21317,15046076:21318,15046275:21319,15046313:21320,15046279:21321,15046312:21322,15046554:21323,15046533:21324,15046559:21325,15046532:21326,15046556:21327,15046564:21328,15046548:21329,15046804:21330,15046583:21331,15046806:21332,15046590:21333,15046589:21334,15046811:21335,15046585:21336,15047054:21337,15047056:21338,15173535:21339,15046836:21340,15046838:21341,15046834:21342,15046840:21343,15047083:21344,15047076:21345,15046831:21346,15047084:21347,15047082:21348,15047302:21349,15047296:21350,15047306:21351,15047328:21352,15047316:21353,15047311:21354,15047333:21355,15047342:21356,15047350:21357,15047348:21358,15047554:21359,15047356:21360,15047553:21361,15047555:21362,15047552:21363,15047560:21364,15047566:21365,15047569:21366,15047571:21367,15047575:21368,15047598:21369,15047609:21370,15047808:21371,15047615:21372,15047812:21373,15047817:21374,15047816:21537,15047819:21538,15047821:21539,15047827:21540,15047832:21541,15047830:21542,15046535:21543,15047836:21544,15047846:21545,15047863:21546,15047864:21547,15048078:21548,15047867:21549,15048064:21550,15048079:21551,15048105:21552,15048576:21553,15048328:21554,15048097:21555,15048127:21556,15048329:21557,15048339:21558,15048352:21559,15048371:21560,15048356:21561,15048362:21562,15048368:21563,15048579:21564,15048582:21565,15048596:21566,15048594:21567,15048595:21568,15048842:21569,15048598:21570,15048611:21571,15048843:21572,15048857:21573,15048861:21574,15049138:21575,15048865:21576,15049122:21577,15049099:21578,15049136:21579,15118208:21580,15049106:21581,15048893:21582,15049145:21583,15049349:21584,15049401:21585,15049375:21586,15049387:21587,15049402:21588,15049630:21589,15049403:21590,15049400:21591,15049390:21592,15049605:21593,15049619:21594,15049617:21595,15049623:21596,15049625:21597,15049624:21598,15049637:21599,15049628:21600,15049636:21601,15049631:21602,15049647:21603,15049658:21604,15049657:21605,15049659:21606,15049660:21607,15049661:21608,15049858:21609,15049866:21610,15049872:21611,15049883:21612,15114918:21613,15049893:21614,15049900:21615,15049901:21616,15049906:21617,15049912:21618,15049918:21619,15182738:21620,15050133:21621,15050128:21622,15050126:21623,15050138:21624,15050136:21625,15050146:21626,15050144:21627,15050151:21628,15050156:21629,15050153:21630,15050168:21793,15050369:21794,15050397:21795,14990750:21796,14991019:21797,15050403:21798,15050418:21799,15050630:21800,15050664:21801,15050652:21802,15050381:21803,15050649:21804,15050650:21805,15050917:21806,15050911:21807,15050897:21808,15050908:21809,15050889:21810,15050906:21811,15051136:21812,15051180:21813,15051145:21814,15050933:21815,15050934:21816,15051170:21817,15051178:21818,15051418:21819,15051452:21820,15051454:21821,15051659:21822,15051650:21823,15051453:21824,15051683:21825,15051671:21826,15051686:21827,15051689:21828,15051670:21829,15051706:21830,15051707:21831,15051916:21832,15051915:21833,15051926:21834,15051954:21835,15051664:21836,15051946:21837,15051958:21838,15051966:21839,15052163:21840,15052165:21841,15052160:21842,15052177:21843,15052181:21844,15052186:21845,15052187:21846,15052197:21847,15052201:21848,15052208:21849,15052211:21850,15052213:21851,15052216:21852,15111816:21853,15052218:21854,15052416:21855,15052419:21856,15052454:21857,15052472:21858,15052675:21859,15052679:21860,15052681:21861,15052692:21862,15052688:21863,15052708:21864,15052710:21865,15052706:21866,15052702:21867,15052709:21868,15052715:21869,15052720:21870,15052726:21871,15052723:21872,15052933:21873,15052935:21874,15052936:21875,15052941:21876,15052947:21877,15052960:21878,15052962:21879,15052968:21880,15052984:21881,15052985:21882,15053185:21883,15053190:21884,15053198:21885,15053203:21886,15053200:22049,15053199:22050,15052209:22051,15053228:22052,15053230:22053,14989730:22054,15053238:22055,15053241:22056,15053452:22057,15053457:22058,15053460:22059,15050395:22060,15053483:22061,15053499:22062,15053494:22063,15053500:22064,15053495:22065,15053701:22066,15053502:22067,15053703:22068,15053721:22069,15053737:22070,15053757:22071,15053754:22072,15053741:22073,15054476:22074,15053738:22075,15053963:22076,15053973:22077,15053975:22078,15054236:22079,15053983:22080,15053979:22081,15053969:22082,15053972:22083,15053986:22084,15053978:22085,15053977:22086,15053976:22087,15054220:22088,15054226:22089,15054222:22090,15054219:22091,15054252:22092,15054259:22093,15054262:22094,15054471:22095,15054468:22096,15054466:22097,15054498:22098,15054493:22099,15054508:22100,15054510:22101,15054525:22102,15054480:22103,15054519:22104,15054524:22105,15054729:22106,15054733:22107,15054739:22108,15054738:22109,15054742:22110,15054747:22111,15054763:22112,15054770:22113,15054773:22114,15054987:22115,15055002:22116,15055001:22117,15054993:22118,15055003:22119,15055030:22120,15055031:22121,15055236:22122,15055235:22123,15055232:22124,15055246:22125,15055255:22126,15055252:22127,15055263:22128,15055266:22129,15055268:22130,15055239:22131,15055285:22132,15055286:22133,15055290:22134,15317692:22135,15055295:22136,15055520:22137,15055745:22138,15055746:22139,15055752:22140,15055760:22141,15055759:22142,15055766:22305,15055779:22306,15055773:22307,15055770:22308,15055771:22309,15055778:22310,15055777:22311,15055784:22312,15055785:22313,15055788:22314,15055793:22315,15055795:22316,15055792:22317,15055796:22318,15055800:22319,15055806:22320,15056003:22321,15056009:22322,15056285:22323,15056284:22324,15056011:22325,15056017:22326,15056022:22327,15056041:22328,15056045:22329,15056056:22330,15056257:22331,15056264:22332,15056268:22333,15056270:22334,15056047:22335,15056273:22336,15056278:22337,15056279:22338,15056281:22339,15056289:22340,15056301:22341,15056307:22342,15056311:22343,15056515:22344,15056514:22345,15056319:22346,15056522:22347,15056520:22348,15056529:22349,15056519:22350,15056542:22351,15056537:22352,15056536:22353,15056544:22354,15056552:22355,15056557:22356,15056572:22357,15056790:22358,15056827:22359,15056804:22360,15056824:22361,15056817:22362,15056797:22363,15106739:22364,15056831:22365,15106209:22366,15106464:22367,15106201:22368,15106192:22369,15106217:22370,15106190:22371,15106225:22372,15106203:22373,15106197:22374,15106219:22375,15106214:22376,15106191:22377,15106234:22378,15106458:22379,15106433:22380,15106474:22381,15106487:22382,15106463:22383,15106442:22384,15106438:22385,15106445:22386,15106467:22387,15106435:22388,15106468:22389,15106434:22390,15106476:22391,15106475:22392,15106457:22393,15106689:22394,15106701:22395,15106983:22396,15106691:22397,15106714:22398,15106692:22561,15106715:22562,15106710:22563,15106711:22564,15106706:22565,15106727:22566,15106699:22567,15106977:22568,15106744:22569,15106976:22570,15106963:22571,15106740:22572,15056816:22573,15106749:22574,15106950:22575,15106741:22576,15106968:22577,15107469:22578,15107221:22579,15107206:22580,15106998:22581,15106999:22582,15107200:22583,15106996:22584,15107002:22585,15107203:22586,15107233:22587,15107003:22588,15106993:22589,15107213:22590,15107214:22591,15107463:22592,15107262:22593,15107240:22594,15107239:22595,15107466:22596,15107263:22597,15107260:22598,15107244:22599,15107252:22600,15107261:22601,15107458:22602,15107460:22603,15107507:22604,15107511:22605,15107480:22606,15107481:22607,15107482:22608,15107499:22609,15107508:22610,15107503:22611,15107493:22612,15107505:22613,15107487:22614,15107485:22615,15107475:22616,15107509:22617,15107737:22618,15107734:22619,15107719:22620,15107756:22621,15107732:22622,15107738:22623,15107722:22624,15107729:22625,15107755:22626,15107758:22627,15107980:22628,15107978:22629,15107977:22630,15108023:22631,15107976:22632,15107971:22633,15107974:22634,15107770:22635,15107979:22636,15187385:22637,15107981:22638,15108006:22639,15108003:22640,15108022:22641,15108026:22642,15108020:22643,15108031:22644,15108029:22645,15108028:22646,15108030:22647,15108224:22648,15108232:22649,15108233:22650,15108237:22651,15108236:22652,15108244:22653,15108251:22654,15108254:22817,15108257:22818,15108266:22819,15108270:22820,15108272:22821,15108274:22822,15108275:22823,15108481:22824,15108494:22825,15108510:22826,15108515:22827,15108507:22828,15108512:22829,15108520:22830,15108540:22831,15108738:22832,15108745:22833,15108542:22834,15108754:22835,15108755:22836,15108758:22837,15109012:22838,15108739:22839,15108756:22840,15109015:22841,15109009:22842,15108795:22843,15109007:22844,15109055:22845,15108998:22846,15111060:22847,15109e3:22848,15109020:22849,15109004:22850,15109002:22851,15108994:22852,15108999:22853,15108763:22854,15109001:22855,15109260:22856,15109038:22857,15109041:22858,15109287:22859,15109250:22860,15109256:22861,15109039:22862,15109045:22863,15109520:22864,15109310:22865,15109517:22866,15110300:22867,15109519:22868,15109782:22869,15109774:22870,15109760:22871,15109803:22872,15109558:22873,15109795:22874,15109775:22875,15109769:22876,15109791:22877,15109813:22878,15109547:22879,15109545:22880,15109822:22881,15110057:22882,15110016:22883,15110022:22884,15110051:22885,15110025:22886,15110034:22887,15110070:22888,15110020:22889,15110294:22890,15110324:22891,15110278:22892,15110291:22893,15110310:22894,15110326:22895,15111325:22896,15110295:22897,15110312:22898,15110287:22899,15110567:22900,15110575:22901,15110582:22902,15110542:22903,15111338:22904,15110805:22905,15110803:22906,15110821:22907,15110825:22908,15110792:22909,15110844:22910,15111066:23073,15111058:23074,15111045:23075,15111047:23076,15110843:23077,15111064:23078,15111042:23079,15111089:23080,15111079:23081,15239305:23082,15111072:23083,15111073:23084,15108780:23085,15111075:23086,15111087:23087,15111340:23088,15111094:23089,15111092:23090,15111090:23091,15111098:23092,15111296:23093,15111101:23094,15111320:23095,15111324:23096,15111301:23097,15111332:23098,15111331:23099,15111339:23100,15111348:23101,15111349:23102,15111351:23103,15111350:23104,15111352:23105,15177099:23106,15111560:23107,15111574:23108,15111573:23109,15111565:23110,15111576:23111,15111582:23112,15111581:23113,15111602:23114,15111608:23115,15111810:23116,15111811:23117,15249034:23118,15111835:23119,15111839:23120,15111851:23121,15111863:23122,15112067:23123,15112070:23124,15112065:23125,15112068:23126,15112076:23127,15112082:23128,15112091:23129,15112089:23130,15112096:23131,15112097:23132,15112113:23133,15113650:23134,15112330:23135,15112323:23136,15112123:23137,15113651:23138,15112373:23139,15112374:23140,15112372:23141,15112348:23142,15112591:23143,15112580:23144,15112585:23145,15112577:23146,15112606:23147,15112605:23148,15112612:23149,15112615:23150,15112616:23151,15112607:23152,15112610:23153,15112624:23154,15112835:23155,15112840:23156,15112846:23157,15112841:23158,15112836:23159,15112856:23160,15112861:23161,15113089:23162,15112889:23163,15113097:23164,15112894:23165,15112892:23166,15113092:23329,15112888:23330,15113110:23331,15113114:23332,15113120:23333,15112383:23334,15113126:23335,15113129:23336,15113136:23337,15113141:23338,15113143:23339,15113359:23340,15113366:23341,15113374:23342,15113382:23343,15113383:23344,15310008:23345,15113390:23346,15113407:23347,15113398:23348,15113601:23349,15113400:23350,15113399:23351,15113606:23352,15113630:23353,15113632:23354,15113625:23355,15113635:23356,15113636:23357,15113865:23358,15113648:23359,15113897:23360,15113660:23361,15113642:23362,15113868:23363,15113867:23364,15113894:23365,15113889:23366,15113861:23367,15113911:23368,15114159:23369,15113908:23370,15114156:23371,15113907:23372,15114153:23373,15113912:23374,15114148:23375,15114142:23376,15114141:23377,15114146:23378,15114158:23379,15113913:23380,15114126:23381,15114118:23382,15114151:23383,15116956:23384,15114398:23385,15114630:23386,15114409:23387,15114624:23388,15114637:23389,15114418:23390,15114638:23391,15114931:23392,15114411:23393,15114649:23394,15114659:23395,15114679:23396,15114687:23397,15114911:23398,15114895:23399,15114925:23400,15114900:23401,15114909:23402,15114907:23403,15114883:23404,15116974:23405,15114937:23406,15114676:23407,15114933:23408,15114912:23409,15114938:23410,15115407:23411,15114893:23412,15114686:23413,15115393:23414,15115146:23415,15115400:23416,15115160:23417,15115426:23418,15115430:23419,15115169:23420,15115404:23421,15115149:23422,15115156:23585,15115175:23586,15115157:23587,15115446:23588,15115410:23589,15115396:23590,15115159:23591,15115171:23592,15115429:23593,15115193:23594,15115168:23595,15115183:23596,15115432:23597,15115434:23598,15115418:23599,15115427:23600,15115425:23601,15115142:23602,15115705:23603,15115703:23604,15115676:23605,15115704:23606,15115691:23607,15115668:23608,15115710:23609,15115694:23610,15115449:23611,15115700:23612,15115453:23613,15115673:23614,15115440:23615,15115681:23616,15115678:23617,15115677:23618,15115905:23619,15115690:23620,15115954:23621,15115950:23622,15116176:23623,15115967:23624,15116161:23625,15116179:23626,15115966:23627,15116174:23628,15052712:23629,15116170:23630,15116189:23631,15115963:23632,15116163:23633,15115943:23634,15116462:23635,15115921:23636,15115936:23637,15115932:23638,15115925:23639,15115956:23640,15116190:23641,15116200:23642,15116418:23643,15116443:23644,15116223:23645,15117450:23646,15116217:23647,15116210:23648,15116199:23649,15116421:23650,15115953:23651,15116446:23652,15116205:23653,15116436:23654,15116203:23655,15116426:23656,15116434:23657,15117185:23658,15116451:23659,15116435:23660,15116676:23661,15116428:23662,15116722:23663,15116470:23664,15116728:23665,15116679:23666,15116706:23667,15116697:23668,15116710:23669,15116680:23670,15116472:23671,15116450:23672,15116944:23673,15116941:23674,15116960:23675,15116932:23676,15116962:23677,15116963:23678,15116951:23841,15243415:23842,15116987:23843,15117187:23844,15117186:23845,15116984:23846,15116979:23847,15116972:23848,15117214:23849,15117201:23850,15117215:23851,15116970:23852,15117210:23853,15117226:23854,15117243:23855,15117445:23856,15243414:23857,15117242:23858,15117458:23859,15117462:23860,15314097:23861,15117471:23862,15117496:23863,15117495:23864,15178652:23865,15117497:23866,15311790:23867,15117703:23868,15117699:23869,15117705:23870,15117712:23871,15117721:23872,15117716:23873,15117723:23874,15117727:23875,15117729:23876,15117752:23877,15117753:23878,15117759:23879,15117952:23880,15117956:23881,15117955:23882,15117965:23883,15117976:23884,15117973:23885,15117982:23886,15117988:23887,15117994:23888,15117995:23889,15117999:23890,15118002:23891,15118001:23892,15118003:23893,15118007:23894,15118012:23895,15118214:23896,15118219:23897,15118227:23898,15118239:23899,15118252:23900,15118251:23901,15118259:23902,15118255:23903,15317694:23904,15118472:23905,15118483:23906,15118484:23907,15118491:23908,15118500:23909,15118499:23910,15118750:23911,15118741:23912,15118754:23913,15118762:23914,15118978:23915,15118989:23916,15119002:23917,15118977:23918,15119003:23919,15118782:23920,15118760:23921,15118771:23922,15118994:23923,15118992:23924,15119236:23925,15119281:23926,15119251:23927,15119037:23928,15119255:23929,15119237:23930,15119261:23931,15119022:23932,15119025:23933,15119038:23934,15119034:24097,15119259:24098,15119279:24099,15119257:24100,15119274:24101,15119519:24102,15245709:24103,15119542:24104,15119531:24105,15119549:24106,15119544:24107,15119513:24108,15119541:24109,15119539:24110,15119506:24111,15119500:24112,15119779:24113,15120019:24114,15119780:24115,15119770:24116,15119801:24117,15119769:24118,15120014:24119,15120021:24120,15122340:24121,15120005:24122,15120313:24123,15120533:24124,15120522:24125,15120053:24126,15120263:24127,15120294:24128,15120056:24129,15120262:24130,15120300:24131,15120286:24132,15120268:24133,15120296:24134,15120274:24135,15120261:24136,15120314:24137,15120281:24138,15120292:24139,15120277:24140,15120298:24141,15120302:24142,15120557:24143,15120814:24144,15120558:24145,15120537:24146,15120818:24147,15120799:24148,15120574:24149,15120547:24150,15120811:24151,15120555:24152,15120822:24153,15120781:24154,15120543:24155,15120771:24156,15120570:24157,15120782:24158,15120548:24159,15121343:24160,15120541:24161,15120568:24162,15121026:24163,15121066:24164,15121048:24165,15121289:24166,15121079:24167,15121299:24168,15121085:24169,15121071:24170,15121284:24171,15121074:24172,15121300:24173,15121301:24174,15121039:24175,15121061:24176,15121282:24177,15121055:24178,15121793:24179,15121553:24180,15171980:24181,15121324:24182,15121336:24183,15121342:24184,15121599:24185,15121330:24186,15121585:24187,15121327:24188,15121586:24189,15121292:24190,15121598:24353,15121555:24354,15121335:24355,15122054:24356,15121850:24357,15121848:24358,15122049:24359,15122048:24360,15121839:24361,15121819:24362,15122355:24363,15121837:24364,15122050:24365,15121852:24366,15121816:24367,15122062:24368,15122065:24369,15122306:24370,15121830:24371,15122099:24372,15122083:24373,15122081:24374,15122084:24375,15122105:24376,15122310:24377,15122090:24378,15122335:24379,15122325:24380,15122348:24381,15122324:24382,15122328:24383,15122353:24384,15122350:24385,15122331:24386,15171721:24387,15171723:24388,15122362:24389,15171729:24390,15171713:24391,15171727:24392,15122366:24393,15171739:24394,15171738:24395,15121844:24396,15171741:24397,15171736:24398,15171743:24399,15171760:24400,15171774:24401,15171762:24402,15171985:24403,15172003:24404,15172249:24405,15172242:24406,15172271:24407,15172529:24408,15172268:24409,15172280:24410,15172275:24411,15172270:24412,15172511:24413,15172491:24414,15172509:24415,15172505:24416,15172745:24417,15172541:24418,15172764:24419,15172761:24420,15173029:24421,15173013:24422,15173256:24423,15173030:24424,15173026:24425,15173004:24426,15173014:24427,15173036:24428,15173263:24429,15173563:24430,15173252:24431,15173269:24432,15173288:24433,15173292:24434,15173527:24435,15173305:24436,15173310:24437,15173522:24438,15173513:24439,15173524:24440,15173518:24441,15173536:24442,15173548:24443,15173543:24444,15173557:24445,15173564:24446,15173561:24609,15173567:24610,15173773:24611,15173776:24612,15173787:24613,15173800:24614,15173805:24615,15173804:24616,15173808:24617,15173810:24618,15173819:24619,15173820:24620,15173823:24621,15174016:24622,15174022:24623,15174027:24624,15174040:24625,15174068:24626,15174078:24627,15174274:24628,15174273:24629,15174279:24630,15174290:24631,15174294:24632,15174306:24633,15174311:24634,15174329:24635,15174322:24636,15174531:24637,15174534:24638,15174532:24639,15174542:24640,15174546:24641,15174562:24642,15174560:24643,15174561:24644,15174585:24645,15174583:24646,15040655:24647,15174807:24648,15174794:24649,15174812:24650,15174806:24651,15174813:24652,15174836:24653,15174831:24654,15174825:24655,15174821:24656,15174846:24657,15175054:24658,15175055:24659,15317912:24660,15175063:24661,15175082:24662,15175080:24663,15175088:24664,15175096:24665,15175093:24666,15175099:24667,15175098:24668,15175560:24669,15175347:24670,15175566:24671,15175355:24672,15175552:24673,15175589:24674,15175598:24675,15175582:24676,15176354:24677,15175813:24678,15176111:24679,15175845:24680,15175608:24681,15175858:24682,15175866:24683,15176085:24684,15175871:24685,15176095:24686,15176089:24687,15176065:24688,15176092:24689,15176105:24690,15176112:24691,15176099:24692,15176106:24693,15176118:24694,15176126:24695,15176331:24696,15176350:24697,15176359:24698,15176586:24699,15176591:24700,15176596:24701,15175601:24702,15176608:24865,15176611:24866,15176615:24867,15176617:24868,15176622:24869,15176626:24870,15176624:24871,15176625:24872,15176632:24873,15176631:24874,15176836:24875,15176835:24876,15176837:24877,15176844:24878,15176846:24879,15176845:24880,15176853:24881,15176851:24882,15176862:24883,15176870:24884,15176876:24885,15176892:24886,15177092:24887,15177101:24888,15177098:24889,15177097:24890,15177115:24891,15177094:24892,15177114:24893,15177129:24894,15177124:24895,15177127:24896,15177131:24897,15177133:24898,15177144:24899,15177142:24900,15177350:24901,15177351:24902,15177140:24903,15177354:24904,15177353:24905,15177346:24906,15177364:24907,15177370:24908,15177373:24909,15177381:24910,15177379:24911,15177602:24912,15177395:24913,15177603:24914,15177397:24915,15177405:24916,15177400:24917,15177404:24918,15177393:24919,15177613:24920,15177610:24921,15177618:24922,15177625:24923,15177635:24924,15177630:24925,15177662:24926,15177663:24927,15177660:24928,15177857:24929,15177648:24930,15177658:24931,15177650:24932,15177651:24933,15177867:24934,15177869:24935,15177865:24936,15177887:24937,15177895:24938,15177888:24939,15177889:24940,15177890:24941,15177892:24942,15177908:24943,15177904:24944,15177915:24945,15178119:24946,15178120:24947,15178118:24948,15178140:24949,15178136:24950,15178145:24951,15178146:24952,15178152:24953,15178153:24954,15178154:24955,15178151:24956,15178156:24957,15178160:24958,15178162:25121,15178166:25122,15178168:25123,15178172:25124,15178368:25125,15178371:25126,15178376:25127,15178379:25128,15178382:25129,15178390:25130,15178387:25131,15178393:25132,15178394:25133,15178416:25134,15178420:25135,15178424:25136,15178425:25137,15178426:25138,15178626:25139,15178637:25140,15178646:25141,15178642:25142,15178654:25143,15178657:25144,15178661:25145,15178663:25146,15178666:25147,15243439:25148,15178683:25149,15178888:25150,15178887:25151,15178884:25152,15178921:25153,15178916:25154,15178910:25155,15178917:25156,15178918:25157,15178907:25158,15178935:25159,15178936:25160,15179143:25161,15179162:25162,15179176:25163,15179179:25164,15179163:25165,15179173:25166,15179199:25167,15179198:25168,15179193:25169,15179406:25170,15179403:25171,15179409:25172,15179424:25173,15179422:25174,15179440:25175,15179446:25176,15179449:25177,15179455:25178,15179452:25179,15179453:25180,15179451:25181,15179655:25182,15179661:25183,15179671:25184,15179674:25185,15179676:25186,15179683:25187,15179694:25188,15179708:25189,15179916:25190,15179922:25191,15180966:25192,15179936:25193,15180970:25194,15180165:25195,15180430:25196,15180212:25197,15180422:25198,15180220:25199,15180442:25200,15180428:25201,15180451:25202,15180469:25203,15180458:25204,15180463:25205,15180689:25206,15180678:25207,15180683:25208,15180692:25209,15180478:25210,15180476:25211,15180677:25212,15180682:25213,15180716:25214,15180711:25377,15180698:25378,15180733:25379,15180724:25380,15180935:25381,15180946:25382,15180945:25383,15180953:25384,15180972:25385,15180971:25386,15181184:25387,15181216:25388,15181207:25389,15181215:25390,15181210:25391,15181205:25392,15181203:25393,15181242:25394,15181247:25395,15181450:25396,15181469:25397,15181479:25398,15318411:25399,15181482:25400,15181486:25401,15181491:25402,15181497:25403,15181498:25404,15181705:25405,15181717:25406,15181735:25407,15181740:25408,15181729:25409,15181731:25410,15181960:25411,15181965:25412,15181976:25413,15181977:25414,15181984:25415,15181983:25416,15181440:25417,15182001:25418,15182011:25419,15182014:25420,15182007:25421,15182211:25422,15182231:25423,15182217:25424,15182241:25425,15182242:25426,15182249:25427,15318685:25428,15182256:25429,15182265:25430,15182269:25431,15182472:25432,15182487:25433,15182485:25434,15182488:25435,15182486:25436,15182505:25437,15182728:25438,15182512:25439,15182518:25440,15182725:25441,15182724:25442,15182527:25443,15303299:25444,15182727:25445,15182730:25446,15182733:25447,15182735:25448,15182741:25449,15182739:25450,15182745:25451,15182746:25452,15182749:25453,15182753:25454,15182754:25455,15182758:25456,15182765:25457,15182768:25458,15182978:25459,15182991:25460,15182986:25461,15182982:25462,15183027:25463,15183e3:25464,15183001:25465,15183006:25466,15183029:25467,15183016:25468,15183030:25469,15183248:25470,15183290:25633,15182980:25634,15183245:25635,15182987:25636,15183244:25637,15183237:25638,15183285:25639,15183269:25640,15183284:25641,15183271:25642,15183280:25643,15183281:25644,15183276:25645,15183278:25646,15183517:25647,15183512:25648,15183519:25649,15183501:25650,15183516:25651,15183514:25652,15183499:25653,15183506:25654,15183503:25655,15183261:25656,15183513:25657,15183755:25658,15183745:25659,15183756:25660,15183759:25661,15183540:25662,15183750:25663,15183773:25664,15183785:25665,15184017:25666,15184020:25667,15183782:25668,15183781:25669,15184288:25670,15184e3:25671,15184007:25672,15184019:25673,15183795:25674,15183799:25675,15184023:25676,15184013:25677,15183798:25678,15184035:25679,15184039:25680,15184042:25681,15184031:25682,15184055:25683,15184043:25684,15184061:25685,15184268:25686,15184259:25687,15184276:25688,15184271:25689,15184256:25690,15184272:25691,15184280:25692,15184287:25693,15184292:25694,15184278:25695,15184293:25696,15184300:25697,15184309:25698,15184515:25699,15184528:25700,15184548:25701,15184557:25702,15184546:25703,15184555:25704,15184545:25705,15184552:25706,15184563:25707,15184562:25708,15184561:25709,15184558:25710,15184569:25711,15184573:25712,15184768:25713,15184773:25714,15184770:25715,15184792:25716,15184786:25717,15184796:25718,15184802:25719,15314107:25720,15184815:25721,15184818:25722,15184820:25723,15184822:25724,15184826:25725,15185030:25726,15185026:25889,15185052:25890,15185045:25891,15185034:25892,15185285:25893,15185291:25894,15185070:25895,15185074:25896,15185087:25897,15185077:25898,15185286:25899,15185331:25900,15185302:25901,15185294:25902,15185330:25903,15185320:25904,15185326:25905,15185295:25906,15185315:25907,15185555:25908,15185545:25909,15185307:25910,15185551:25911,15185341:25912,15185563:25913,15185594:25914,15185582:25915,15185571:25916,15185589:25917,15185799:25918,15185597:25919,15185579:25920,15186109:25921,15185570:25922,15185583:25923,15185820:25924,15185592:25925,15185567:25926,15185584:25927,15185816:25928,15185821:25929,15185828:25930,15185822:25931,15185851:25932,15185842:25933,15185825:25934,15186053:25935,15186058:25936,15186083:25937,15186081:25938,15186066:25939,15186097:25940,15186079:25941,15186057:25942,15186059:25943,15186082:25944,15186310:25945,15186342:25946,15186107:25947,15186101:25948,15186105:25949,15186307:25950,15186103:25951,15186098:25952,15186106:25953,15186343:25954,15186333:25955,15186326:25956,15186334:25957,15186329:25958,15186330:25959,15186361:25960,15186346:25961,15186345:25962,15186364:25963,15186363:25964,15186563:25965,15185813:25966,15186365:25967,15253166:25968,15186367:25969,15186568:25970,15186569:25971,15186572:25972,15186578:25973,15186576:25974,15186579:25975,15186580:25976,15186582:25977,15186574:25978,15186587:25979,15186588:25980,15187128:25981,15187130:25982,15187333:26145,15187340:26146,15187341:26147,15187342:26148,15187344:26149,15187345:26150,15187349:26151,15187348:26152,15187352:26153,15187359:26154,15187360:26155,15187368:26156,15187369:26157,15187367:26158,15187384:26159,15187586:26160,15187590:26161,15187587:26162,15187592:26163,15187591:26164,15187596:26165,15187604:26166,15187614:26167,15187613:26168,15187610:26169,15187619:26170,15187631:26171,15187634:26172,15187641:26173,15187630:26174,15187638:26175,15187640:26176,15248817:26177,15187845:26178,15187846:26179,15187850:26180,15187861:26181,15187860:26182,15187873:26183,15187878:26184,15187881:26185,15187891:26186,15187897:26187,15311772:26188,15237254:26189,15237252:26190,15237259:26191,15237266:26192,15237272:26193,15237273:26194,15237276:26195,15237281:26196,15237288:26197,15237311:26198,15237307:26199,15237514:26200,15237510:26201,15237522:26202,15237528:26203,15237530:26204,15237535:26205,15237538:26206,15237544:26207,15237555:26208,15237554:26209,15237552:26210,15237558:26211,15237561:26212,15237565:26213,15237567:26214,15237764:26215,15237766:26216,15237765:26217,15237787:26218,15237779:26219,15237786:26220,15237805:26221,15042192:26222,15237804:26223,15238043:26224,15238053:26225,15238041:26226,15238045:26227,15238020:26228,15238042:26229,15238038:26230,15238281:26231,15238063:26232,15238065:26233,15238299:26234,15238313:26235,15238307:26236,15238319:26237,15238539:26238,15309451:26401,15238534:26402,15238334:26403,15238547:26404,15238545:26405,15238076:26406,15238577:26407,15238574:26408,15238565:26409,15238566:26410,15238580:26411,15238787:26412,15238792:26413,15238794:26414,15238784:26415,15238786:26416,15238816:26417,15238805:26418,15238820:26419,15238819:26420,15238559:26421,15238803:26422,15238825:26423,15238832:26424,15238837:26425,15238846:26426,15238840:26427,15238845:26428,15239040:26429,15239042:26430,15238842:26431,15239049:26432,15239053:26433,15239057:26434,15239065:26435,15239064:26436,15239048:26437,15239066:26438,15239071:26439,15239072:26440,15239079:26441,15239098:26442,15239099:26443,15239102:26444,15239297:26445,15239298:26446,15239301:26447,15239303:26448,15239306:26449,15239309:26450,15239312:26451,15239318:26452,15239337:26453,15239339:26454,15239352:26455,15239347:26456,15239552:26457,15239577:26458,15239576:26459,15239581:26460,15239578:26461,15239583:26462,15239588:26463,15239586:26464,15239592:26465,15239594:26466,15239595:26467,15239342:26468,15239601:26469,15239607:26470,15239608:26471,15239614:26472,15239821:26473,15239826:26474,15239851:26475,15239839:26476,15239867:26477,15239852:26478,15240097:26479,15240099:26480,15240095:26481,15240082:26482,15240116:26483,15240115:26484,15240122:26485,15240851:26486,15240323:26487,15240123:26488,15240121:26489,15240094:26490,15240326:26491,15240092:26492,15240329:26493,15240089:26494,15240373:26657,15240372:26658,15240342:26659,15240370:26660,15240369:26661,15240576:26662,15240377:26663,15240592:26664,15240581:26665,15240367:26666,15240363:26667,15240343:26668,15240344:26669,15240837:26670,15240858:26671,15240874:26672,15240863:26673,15240866:26674,15240854:26675,15240355:26676,15240846:26677,15240839:26678,15240842:26679,15240636:26680,15240885:26681,15240627:26682,15240629:26683,15240864:26684,15240841:26685,15240872:26686,15241140:26687,15241363:26688,15241131:26689,15241102:26690,15241149:26691,15241347:26692,15241112:26693,15241355:26694,15241089:26695,15241143:26696,15241351:26697,15241120:26698,15241138:26699,15241357:26700,15241378:26701,15241376:26702,15240893:26703,15241400:26704,15242374:26705,15241147:26706,15241645:26707,15241386:26708,15241404:26709,15242650:26710,15241860:26711,15241655:26712,15241643:26713,15241901:26714,15241646:26715,15241858:26716,15241641:26717,15241606:26718,15241388:26719,15241647:26720,15241657:26721,15241397:26722,15242122:26723,15241634:26724,15241913:26725,15241919:26726,15241887:26727,15242137:26728,15242125:26729,15241915:26730,15242138:26731,15242128:26732,15242113:26733,15242118:26734,15242134:26735,15241889:26736,15242401:26737,15242175:26738,15242164:26739,15242391:26740,15242392:26741,15242412:26742,15242399:26743,15242389:26744,15242388:26745,15242172:26746,15242624:26747,15242659:26748,15242648:26749,15242632:26750,15242625:26913,15243394:26914,15242635:26915,15242645:26916,15242880:26917,15242916:26918,15242888:26919,15242897:26920,15242890:26921,15242920:26922,15242669:26923,15242900:26924,15242907:26925,15243178:26926,15242887:26927,15242908:26928,15242679:26929,15242686:26930,15242896:26931,15243145:26932,15242938:26933,15243151:26934,15242937:26935,15243152:26936,15243157:26937,15243165:26938,15243173:26939,15243164:26940,15243193:26941,15243402:26942,15243411:26943,15243403:26944,15243198:26945,15243194:26946,15243398:26947,15243426:26948,15243418:26949,15243440:26950,15243455:26951,15243661:26952,14989717:26953,15243668:26954,15243679:26955,15243687:26956,15243697:26957,15243923:26958,15243939:26959,15243945:26960,15243946:26961,15243915:26962,15243916:26963,15243958:26964,15243951:26965,15244164:26966,15244166:26967,15243952:26968,15244169:26969,15245475:26970,15243947:26971,15244180:26972,15244190:26973,15244201:26974,15244204:26975,15244191:26976,15244187:26977,15244207:26978,15244434:26979,15244422:26980,15244424:26981,15244416:26982,15244419:26983,15244219:26984,15244433:26985,15244425:26986,15244429:26987,15244217:26988,15244426:26989,15244468:26990,15244479:26991,15244471:26992,15244475:26993,15244453:26994,15244457:26995,15244442:26996,15244704:26997,15244703:26998,15244728:26999,15244684:27e3,15244686:27001,15244724:27002,15244695:27003,15244712:27004,15244718:27005,15244697:27006,15244691:27169,15244707:27170,15244714:27171,15245445:27172,15244962:27173,15244959:27174,15244930:27175,15244975:27176,15245195:27177,15244989:27178,15245184:27179,15245200:27180,15309718:27181,15244971:27182,15245188:27183,15244979:27184,15245191:27185,15245190:27186,15244987:27187,15245231:27188,15245234:27189,15245216:27190,15245455:27191,15245453:27192,15245246:27193,15245238:27194,15245239:27195,15245454:27196,15245202:27197,15245457:27198,15245462:27199,15245461:27200,15245474:27201,15245473:27202,15245489:27203,15245494:27204,15245497:27205,15245479:27206,15245499:27207,15245700:27208,15245698:27209,15245714:27210,15245721:27211,15245726:27212,15245730:27213,15245739:27214,15245953:27215,15245758:27216,15245982:27217,15245749:27218,15245757:27219,15246005:27220,15245746:27221,15245954:27222,15245975:27223,15245970:27224,15245998:27225,15245977:27226,15245986:27227,15245965:27228,15245988:27229,15246e3:27230,15246015:27231,15246001:27232,15246211:27233,15246212:27234,15246228:27235,15246232:27236,15246233:27237,15246237:27238,15246265:27239,15246466:27240,15246268:27241,15246260:27242,15246248:27243,15246258:27244,15246468:27245,15246476:27246,15246474:27247,15246483:27248,15246723:27249,15246494:27250,15246501:27251,15246506:27252,15246507:27253,15246721:27254,15246724:27255,15246523:27256,15246518:27257,15246520:27258,15246732:27259,15246493:27260,15246752:27261,15246750:27262,15246758:27425,15246756:27426,15246765:27427,15246762:27428,15246767:27429,15246772:27430,15246775:27431,15246782:27432,15246979:27433,15246984:27434,15246986:27435,15246995:27436,15247e3:27437,15247009:27438,15247017:27439,15247014:27440,15247020:27441,15247023:27442,15247026:27443,15247034:27444,15247037:27445,15247039:27446,15247232:27447,15247258:27448,15247260:27449,15247261:27450,15247271:27451,15247284:27452,15247288:27453,15247491:27454,15247510:27455,15247504:27456,15247500:27457,15247515:27458,15247517:27459,15247525:27460,15247542:27461,15247745:27462,15247771:27463,15247762:27464,15247750:27465,15247752:27466,15247804:27467,15247789:27468,15247788:27469,15247778:27470,15248005:27471,15248002:27472,15248004:27473,15248040:27474,15248033:27475,15248017:27476,15248037:27477,15248038:27478,15248026:27479,15248035:27480,15248260:27481,15248269:27482,15248258:27483,15248282:27484,15248299:27485,15248307:27486,15248295:27487,15248292:27488,15248305:27489,15248532:27490,15248288:27491,15248290:27492,15248311:27493,15248286:27494,15248283:27495,15248524:27496,15248519:27497,15248538:27498,15248289:27499,15248534:27500,15248528:27501,15248535:27502,15248544:27503,15248563:27504,15310507:27505,15248550:27506,15248555:27507,15248574:27508,15248552:27509,15248769:27510,15248780:27511,15248783:27512,15248782:27513,15248777:27514,15248790:27515,15248795:27516,15248794:27517,15248811:27518,15248799:27681,15248812:27682,15248815:27683,15248820:27684,15248829:27685,15249024:27686,15249036:27687,15249038:27688,15249042:27689,15249043:27690,15249046:27691,15249049:27692,15249050:27693,15249594:27694,15249793:27695,15249599:27696,15249800:27697,15249804:27698,15249806:27699,15249808:27700,15249813:27701,15249826:27702,15249836:27703,15249848:27704,15249850:27705,15250050:27706,15250057:27707,15250053:27708,15250058:27709,15250061:27710,15250062:27711,15250068:27712,15249852:27713,15250072:27714,15108253:27715,15250093:27716,15250090:27717,15250109:27718,15250098:27719,15250099:27720,15250094:27721,15250102:27722,15250312:27723,15250305:27724,15250340:27725,15250339:27726,15250330:27727,15250365:27728,15250362:27729,15250363:27730,15250564:27731,15250565:27732,15250570:27733,15250567:27734,15250575:27735,15250573:27736,15250576:27737,15318414:27738,15250579:27739,15250317:27740,15250580:27741,15250582:27742,15250855:27743,15250861:27744,15250865:27745,15250867:27746,15251073:27747,15251097:27748,15251330:27749,15251134:27750,15251130:27751,15251343:27752,15251354:27753,15251350:27754,15251340:27755,15251355:27756,15251339:27757,15251370:27758,15251371:27759,15251359:27760,15251363:27761,15251388:27762,15251592:27763,15251593:27764,15251391:27765,15251613:27766,15251614:27767,15251600:27768,15251615:27769,15251842:27770,15251637:27771,15251632:27772,15251636:27773,15251850:27774,15251847:27937,15251849:27938,15251852:27939,15251856:27940,15251848:27941,15251865:27942,15251876:27943,15251872:27944,15251626:27945,15251875:27946,15251861:27947,15251894:27948,15251890:27949,15251900:27950,15252097:27951,15252103:27952,15252101:27953,15252100:27954,15252107:27955,15252106:27956,15252115:27957,15252113:27958,15252116:27959,15252121:27960,15252138:27961,15252129:27962,15252140:27963,15252144:27964,15252358:27965,15252145:27966,15252158:27967,15252357:27968,15252360:27969,15252363:27970,15252379:27971,15252387:27972,15252412:27973,15252411:27974,15252395:27975,15252414:27976,15252618:27977,15252613:27978,15252629:27979,15252626:27980,15252633:27981,15252627:27982,15252636:27983,15252639:27984,15252635:27985,15252620:27986,15252646:27987,15252659:27988,15252667:27989,15252665:27990,15252869:27991,15252866:27992,15252670:27993,15252876:27994,15252873:27995,15252870:27996,15252878:27997,15252887:27998,15252892:27999,15252898:28e3,15252899:28001,15252900:28002,15253148:28003,15253151:28004,15253155:28005,15253165:28006,15253167:28007,15253175:28008,15253402:28009,15253413:28010,15253410:28011,15253418:28012,15253423:28013,15303303:28014,15253428:28015,15302789:28016,15253433:28017,15253434:28018,15302801:28019,15302805:28020,15302817:28021,15302797:28022,15302814:28023,15302806:28024,15302795:28025,15302823:28026,15302838:28027,15302837:28028,15302841:28029,15253432:28030,15303055:28193,15303056:28194,15303057:28195,15303058:28196,15302798:28197,15303049:28198,15302846:28199,15303062:28200,15303064:28201,15303070:28202,15303080:28203,15303087:28204,15303094:28205,15309480:28206,15303090:28207,15303298:28208,15303101:28209,15303297:28210,15303296:28211,15303306:28212,15303305:28213,15303311:28214,15303336:28215,15303343:28216,15303345:28217,15303349:28218,15303586:28219,15303588:28220,15108488:28221,15303579:28222,15303810:28223,15303826:28224,15303833:28225,15303858:28226,15303856:28227,15304074:28228,15304086:28229,15304088:28230,15304099:28231,15304101:28232,15304105:28233,15304115:28234,15304114:28235,15304331:28236,15304329:28237,15304322:28238,15304354:28239,15304363:28240,15304367:28241,15304362:28242,15304373:28243,15304372:28244,15304378:28245,15304576:28246,15304577:28247,15304585:28248,15304587:28249,15304592:28250,15304598:28251,15304607:28252,15304609:28253,15304603:28254,15304636:28255,15304629:28256,15304630:28257,15304862:28258,15304639:28259,15304852:28260,15304876:28261,15304853:28262,15304849:28263,15305118:28264,15305111:28265,15305093:28266,15305097:28267,15305124:28268,15305096:28269,15305365:28270,15304895:28271,15305099:28272,15305104:28273,15305372:28274,15305366:28275,15305363:28276,15305371:28277,15305114:28278,15305615:28279,15305401:28280,15305399:28281,15305641:28282,15305871:28283,15305658:28284,15306116:28285,15305902:28286,15305881:28449,15305890:28450,15305882:28451,15305891:28452,15305914:28453,15305909:28454,15305915:28455,15306140:28456,15306144:28457,15306172:28458,15306158:28459,15306134:28460,15306416:28461,15306412:28462,15306413:28463,15306388:28464,15306425:28465,15306646:28466,15306647:28467,15306664:28468,15306661:28469,15306648:28470,15306627:28471,15306653:28472,15306640:28473,15306632:28474,15306660:28475,15306906:28476,15306900:28477,15306899:28478,15306883:28479,15306887:28480,15306896:28481,15306934:28482,15306923:28483,15306933:28484,15306913:28485,15306938:28486,15307137:28487,15307154:28488,15307140:28489,15307163:28490,15307168:28491,15307170:28492,15307166:28493,15307178:28494,15304873:28495,15307184:28496,15307189:28497,15307191:28498,15307197:28499,15307162:28500,15307196:28501,15307198:28502,15307393:28503,15307199:28504,15308418:28505,15308423:28506,15308426:28507,15308436:28508,15308438:28509,15308440:28510,15308441:28511,15308448:28512,15308456:28513,15308455:28514,15308461:28515,15308476:28516,15308475:28517,15308473:28518,15308478:28519,15308682:28520,15122358:28521,15308675:28522,15308685:28523,15308684:28524,15308693:28525,15308692:28526,15308694:28527,15308700:28528,15308705:28529,15308709:28530,15308706:28531,15308961:28532,15308968:28533,15308974:28534,15308975:28535,15309186:28536,15309196:28537,15309199:28538,15309195:28539,15309239:28540,15309212:28541,15309214:28542,15309213:28705,15309215:28706,15309222:28707,15309234:28708,15309228:28709,15309453:28710,15309464:28711,15309461:28712,15309463:28713,15309482:28714,15309479:28715,15309489:28716,15309490:28717,15309488:28718,15309492:28719,15309494:28720,15309496:28721,15309497:28722,15309710:28723,15309707:28724,15309705:28725,15309709:28726,15246733:28727,15309724:28728,15309965:28729,15309717:28730,15309753:28731,15309956:28732,15309958:28733,15309960:28734,15309971:28735,15309966:28736,15309969:28737,15309967:28738,15309974:28739,15309977:28740,15309988:28741,15309994:28742,1531e4:28743,15310009:28744,15310013:28745,15310014:28746,15310212:28747,15310214:28748,15310216:28749,15310210:28750,15310217:28751,15310236:28752,15310240:28753,15310244:28754,15310246:28755,15310248:28756,15043474:28757,15310251:28758,15310257:28759,15310265:28760,15310469:28761,15310268:28762,15310465:28763,15310266:28764,15310470:28765,15310475:28766,15310479:28767,15310480:28768,15310492:28769,15310504:28770,15310502:28771,15310499:28772,15310515:28773,15310516:28774,15310723:28775,15310726:28776,15310728:28777,15310731:28778,15310748:28779,15310765:28780,15318415:28781,15310770:28782,15182751:28783,15310774:28784,15310773:28785,15310991:28786,15310988:28787,15311032:28788,15311012:28789,15311009:28790,15311031:28791,15311037:28792,15311238:28793,15311247:28794,15311243:28795,15311275:28796,15311279:28797,15311280:28798,15311281:28961,15311284:28962,15311283:28963,15311530:28964,15311535:28965,15311537:28966,15311542:28967,15311748:28968,15311747:28969,15311750:28970,15311785:28971,15311787:28972,15312003:28973,15312009:28974,15312018:28975,15312020:28976,15312024:28977,15312033:28978,15312029:28979,15312030:28980,15312036:28981,15312032:28982,15312044:28983,15312046:28984,15312061:28985,15312062:28986,15312258:28987,15312265:28988,15312261:28989,15312272:28990,15312267:28991,15312273:28992,15312274:28993,15312268:28994,15312277:28995,15312535:28996,15312536:28997,15312549:28998,15312557:28999,15312558:29e3,15312572:29001,15312799:29002,15312795:29003,15312797:29004,15312792:29005,15312785:29006,15312813:29007,15312814:29008,15312817:29009,15312818:29010,15312827:29011,15312824:29012,15313025:29013,15313039:29014,15313029:29015,15312802:29016,15313049:29017,15313067:29018,15313079:29019,15313285:29020,15313282:29021,15313280:29022,15313283:29023,15313086:29024,15313301:29025,15313293:29026,15313307:29027,15313303:29028,15313311:29029,15313314:29030,15313317:29031,15313316:29032,15313321:29033,15313323:29034,15313322:29035,15313581:29036,15313584:29037,15313596:29038,15313792:29039,15313807:29040,15313809:29041,15313811:29042,15313812:29043,15313822:29044,15313823:29045,15313826:29046,15313827:29047,15313830:29048,15313839:29049,15313835:29050,15313838:29051,15313844:29052,15313841:29053,15313847:29054,15313851:29217,15314054:29218,15314072:29219,15314074:29220,15314079:29221,15314082:29222,15314083:29223,15314085:29224,15314087:29225,15314088:29226,15314089:29227,15314090:29228,15314094:29229,15314095:29230,15314098:29231,15314308:29232,15314307:29233,15314319:29234,15314317:29235,15314318:29236,15314321:29237,15314328:29238,15314356:29239,15314579:29240,15314563:29241,15314577:29242,15314582:29243,15314583:29244,15314591:29245,15314592:29246,15314600:29247,15314612:29248,15314816:29249,15314826:29250,15314617:29251,15314822:29252,15314831:29253,15314833:29254,15314834:29255,15314851:29256,15314850:29257,15314852:29258,15314836:29259,15314849:29260,15315130:29261,15314866:29262,15314865:29263,15314864:29264,15315093:29265,15315092:29266,15315081:29267,15315091:29268,15315084:29269,15315078:29270,15315080:29271,15315090:29272,15315082:29273,15315076:29274,15315118:29275,15315099:29276,15315109:29277,15315108:29278,15315105:29279,15315120:29280,15315335:29281,15315122:29282,15315334:29283,15315134:29284,15315354:29285,15315360:29286,15315367:29287,15315382:29288,15315384:29289,15315879:29290,15315884:29291,15315888:29292,15316105:29293,15316104:29294,15315883:29295,15316099:29296,15316102:29297,15316138:29298,15316134:29299,15316655:29300,15316131:29301,15316127:29302,15316356:29303,15316117:29304,15316114:29305,15316353:29306,15316159:29307,15316158:29308,15316358:29309,15316360:29310,15316381:29473,15316382:29474,15316388:29475,15316369:29476,15316368:29477,15316377:29478,15316402:29479,15316617:29480,15316615:29481,15316651:29482,15316399:29483,15316410:29484,15316634:29485,15316644:29486,15316649:29487,15316658:29488,15316868:29489,15316865:29490,15316667:29491,15316664:29492,15316666:29493,15316870:29494,15316879:29495,15316866:29496,15316889:29497,15316883:29498,15316920:29499,15316902:29500,15316909:29501,15316911:29502,15316925:29503,15317146:29504,15317147:29505,15317150:29506,15317429:29507,15317433:29508,15317437:29509,15317633:29510,15317640:29511,15317643:29512,15317644:29513,15317650:29514,15317653:29515,15317649:29516,15317661:29517,15317669:29518,15317673:29519,15317688:29520,15317674:29521,15317677:29522,15310241:29523,15317900:29524,15317902:29525,15317903:29526,15317904:29527,15317908:29528,15317916:29529,15317918:29530,15317917:29531,15317920:29532,15317925:29533,15317928:29534,15317935:29535,15317940:29536,15317942:29537,15317943:29538,15317945:29539,15317947:29540,15317948:29541,15317949:29542,15318151:29543,15318152:29544,15178423:29545,15318165:29546,15318177:29547,15318188:29548,15318206:29549,15318410:29550,15318418:29551,15318420:29552,15318435:29553,15318431:29554,15318432:29555,15318433:29556,15318438:29557,15318439:29558,15318444:29559,15318442:29560,15318455:29561,15318450:29562,15318454:29563,15318677:29564,15318684:29565,15318688:29566,15048879:29729,15116167:29730,15303065:29731,15176100:29732,15042460:29733,15173273:29734,15186570:31009,15246492:31010,15306120:31011,15305352:31012,15242140:31013,14991241:31014,15172283:31015,15112369:31016,15115144:31017,15305657:31018,15113147:31019,15056261:31020,14989480:31021,14990241:31022,14990268:31023,14990464:31024,14990467:31025,14990521:31026,14990742:31027,14990994:31028,14990986:31029,14991002:31030,14990996:31031,14991245:31032,15040896:31033,15040674:31034,14991295:31035,15040670:31036,15040902:31037,15040944:31038,15040898:31039,15041172:31040,15041460:31041,15041432:31042,15041930:31043,15041956:31044,15042205:31045,15042238:31046,15042476:31047,15042709:31048,15043228:31049,15043238:31050,15043456:31051,15043483:31052,15043712:31053,15043719:31054,15043748:31055,15044018:31056,15044243:31057,15044274:31058,15044509:31059,15706254:31060,15045276:31061,15045258:31062,15045289:31063,15045567:31064,15046278:31065,15048089:31066,15048101:31067,15048364:31068,15048584:31069,15048583:31070,15706255:31071,15706256:31072,15049374:31073,15049394:31074,15049867:31075,15050131:31076,15050139:31077,15050141:31078,15050147:31079,15050404:31080,15050426:31081,15052182:31082,15052672:31083,15176879:31084,15052696:31085,15052716:31086,15052958:31087,15053478:31088,15053498:31089,15053749:31090,15053991:31091,15054227:31092,15706257:31093,15054210:31094,15054253:31095,15054520:31096,15054521:31097,15054736:31098,15056033:31099,15056052:31100,15056295:31101,15056567:31102,15056798:31265,15106461:31266,15106693:31267,15106698:31268,15106974:31269,15106965:31270,15107232:31271,15106994:31272,15107217:31273,15107255:31274,15107248:31275,15107736:31276,15108243:31277,15108774:31278,15110069:31279,15110560:31280,15110813:31281,15111054:31282,15111566:31283,15112320:31284,15112341:31285,15112379:31286,15112329:31287,15112366:31288,15112350:31289,15112356:31290,15112613:31291,15112599:31292,15112601:31293,15706258:31294,15112627:31295,15112857:31296,15112864:31297,15112882:31298,15112895:31299,15113146:31300,15113358:31301,15705257:31302,15113638:31303,15113915:31304,15114642:31305,15114112:31306,15114369:31307,15114628:31308,15115151:31309,15706259:31310,15115688:31311,15706260:31312,15115928:31313,15116194:31314,15116464:31315,15116715:31316,15116678:31317,15116723:31318,15116734:31319,15117218:31320,15117220:31321,15118230:31322,15118527:31323,15118748:31324,15118982:31325,15118767:31326,15119258:31327,15119492:31328,15120007:31329,15119791:31330,15120022:31331,15120044:31332,15120271:31333,15120312:31334,15120306:31335,15120316:31336,15120569:31337,15120796:31338,15120551:31339,15120572:31340,15121087:31341,15122056:31342,15122101:31343,15122357:31344,15171717:31345,15171719:31346,15171752:31347,15172229:31348,15172267:31349,15172751:31350,15172740:31351,15173020:31352,15172998:31353,15172999:31354,15706261:31355,15173505:31356,15173566:31357,15174321:31358,15174334:31521,15174820:31522,15706262:31523,15175095:31524,15175357:31525,15175561:31526,15175574:31527,15175587:31528,15175570:31529,15175815:31530,15175605:31531,15175846:31532,15175850:31533,15175849:31534,15175854:31535,15176098:31536,15176329:31537,15176351:31538,15176833:31539,15177135:31540,15178370:31541,15178396:31542,15178398:31543,15178395:31544,15178406:31545,15706263:31546,15179142:31547,15043247:31548,15179937:31549,15180174:31550,15180196:31551,15180218:31552,15180976:31553,15706264:31554,15706265:31555,15706266:31556,15181460:31557,15706267:31558,15181467:31559,15182737:31560,15182759:31561,15706268:31562,15182763:31563,15183518:31564,15706269:31565,15185288:31566,15185308:31567,15185591:31568,15185568:31569,15185814:31570,15186322:31571,15187335:31572,15187617:31573,15706270:31574,15240321:31575,15240610:31576,15240639:31577,15241095:31578,15241142:31579,15241608:31580,15241908:31581,15242643:31582,15242649:31583,15242667:31584,15706271:31585,15242928:31586,15706272:31587,15706273:31588,15245447:31589,15246261:31590,15247506:31591,15247543:31592,15247801:31593,15248039:31594,15248062:31595,15248287:31596,15706274:31597,15248310:31598,15248787:31599,15248831:31600,15250352:31601,15250356:31602,15250578:31603,15250870:31604,15706275:31605,15252367:31606,15706276:31607,15706277:31608,15303079:31609,15303582:31610,15706278:31611,15303829:31612,15303847:31613,15304602:31614,15304599:31777,15304606:31778,15304621:31779,15304622:31780,15304612:31781,15304613:31782,15304838:31783,15304848:31784,15304842:31785,15304890:31786,15305088:31787,15304892:31788,15305102:31789,15305113:31790,15305105:31791,15304889:31792,15305127:31793,15305383:31794,15305143:31795,15305144:31796,15305639:31797,15305623:31798,15305625:31799,15305616:31800,15706279:31801,15305621:31802,15305632:31803,15305619:31804,15305893:31805,15305889:31806,15305659:31807,15706280:31808,15305886:31809,15305663:31810,15305885:31811,15305858:31812,15306160:31813,15306135:31814,15306404:31815,15306630:31816,15306654:31817,15306680:31818,15306929:31819,15307141:31820,15307144:31821,15308434:31822,15706012:31823,15706281:31824,15309469:31825,15309487:31826,15310003:31827,15310011:31828,15310211:31829,15310221:31830,15310223:31831,15310225:31832,15310229:31833,15311255:31834,15311269:31835,15706282:31836,15706283:31837,15312039:31838,15706284:31839,15312542:31840,15313294:31841,15313817:31842,15313820:31843,15314357:31844,15314354:31845,15314575:31846,15314609:31847,15314619:31848,15315072:31849,15316400:31850,15316395:31851,15706285:31852,15317145:31853,15317905:31854,14845360:31857,14845361:31858,14845362:31859,14845363:31860,14845364:31861,14845365:31862,14845366:31863,14845367:31864,14845368:31865,14845369:31866,15712164:31868,15711367:31869,15711362:31870,14846117:8514,15712162:8780,14846098:74077},r3={52120:8751,52103:8752,49848:8753,52121:8754,52125:8755,49839:8756,52123:8757,52122:8758,126:8759,52868:8760,52869:8761,49825:8770,49830:8771,49855:8772,49850:8811,49834:8812,49833:8813,49838:8814,14845090:8815,49828:8816,14845078:8817,52870:9825,52872:9826,52873:9827,52874:9828,52906:9829,52876:9831,52878:9833,52907:9834,52879:9836,52908:9841,52909:9842,52910:9843,52911:9844,53130:9845,52880:9846,53132:9847,53122:9848,53133:9849,53131:9850,52912:9851,53134:9852,53378:10050,53379:10051,53380:10052,53381:10053,53382:10054,53383:10055,53384:10056,53385:10057,53386:10058,53387:10059,53388:10060,53390:10061,53391:10062,53650:10098,53651:10099,53652:10100,53653:10101,53654:10102,53655:10103,53656:10104,53657:10105,53658:10106,53659:10107,53660:10108,53662:10109,53663:10110,50054:10529,50320:10530,50342:10532,50354:10534,50561:10536,50367:10537,50570:10539,50072:10540,50578:10541,50598:10543,50078:10544,50086:10561,50321:10562,50096:10563,50343:10564,50353:10565,50355:10566,50360:10567,50562:10568,50560:10569,50569:10570,50571:10571,50104:10572,50579:10573,50079:10574,50599:10575,50110:10576,50049:10785,50048:10786,50052:10787,50050:10788,50306:10789,51085:10790,50304:10791,50308:10792,50053:10793,50051:10794,50310:10795,50312:10796,50316:10797,50055:10798,50314:10799,50318:10800,50057:10801,50056:10802,50059:10803,50058:10804,50330:10805,50326:10806,50322:10807,50328:10808,50332:10810,50334:10811,50338:10812,50336:10813,50340:10814,50061:10815,50060:10816,50063:10817,50062:10818,51087:10819,50352:10820,50346:10821,50350:10822,50344:10823,50356:10824,50358:10825,50361:10826,50365:10827,50363:10828,50563:10829,50567:10830,50565:10831,50065:10832,50067:10833,50066:10834,50070:10835,50068:10836,51089:10837,50576:10838,50572:10839,50069:10840,50580:10841,50584:10842,50582:10843,50586:10844,50588:10845,50592:10846,50590:10847,50596:10848,50594:10849,50074:10850,50073:10851,50076:10852,50075:10853,50604:10854,51091:10855,50608:10856,50602:10857,50610:10858,50606:10859,50600:10860,51095:10861,51099:10862,51097:10863,51093:10864,50612:10865,50077:10866,50616:10867,50614:10868,50617:10869,50621:10870,50619:10871,50081:11041,50080:11042,50084:11043,50082:11044,50307:11045,51086:11046,50305:11047,50309:11048,50085:11049,50083:11050,50311:11051,50313:11052,50317:11053,50087:11054,50315:11055,50319:11056,50089:11057,50088:11058,50091:11059,50090:11060,50331:11061,50327:11062,50323:11063,50329:11064,51125:11065,50333:11066,50335:11067,50337:11069,50341:11070,50093:11071,50092:11072,50095:11073,50094:11074,51088:11075,50347:11077,50351:11078,50345:11079,50357:11080,50359:11081,50362:11082,50366:11083,50364:11084,50564:11085,50568:11086,50566:11087,50097:11088,50099:11089,50098:11090,50102:11091,50100:11092,51090:11093,50577:11094,50573:11095,50101:11096,50581:11097,50585:11098,50583:11099,50587:11100,50589:11101,50593:11102,50591:11103,50597:11104,50595:11105,50106:11106,50105:11107,50108:11108,50107:11109,50605:11110,51092:11111,50609:11112,50603:11113,50611:11114,50607:11115,50601:11116,51096:11117,51100:11118,51098:11119,51094:11120,50613:11121,50109:11122,50111:11123,50615:11124,50618:11125,50622:11126,50620:11127,14989442:12321,14989444:12322,14989445:12323,14989452:12324,14989458:12325,14989471:12326,14989475:12327,14989476:12328,14989480:12329,14989483:12330,14989486:12331,14989487:12332,14989488:12333,14989493:12334,14989696:12335,14989697:12336,14989700:12337,14989703:12338,14989713:12339,14989722:12340,14989724:12341,14989731:12342,14989736:12343,14989737:12344,14989748:12345,14989749:12346,14989753:12347,14989759:12348,14989965:12349,14989974:12350,14989975:12351,14989981:12352,14989999:12353,14990009:12354,14990211:12355,14990224:12356,14990234:12357,14990235:12358,14990240:12359,14990241:12360,14990242:12361,14990248:12362,14990255:12363,14990257:12364,14990259:12365,14990261:12366,14990269:12367,14990270:12368,14990271:12369,14990464:12370,14990466:12371,14990467:12372,14990472:12373,14990475:12374,14990476:12375,14990482:12376,14990485:12377,14990486:12378,14990487:12379,14990489:12380,14990510:12381,14990513:12382,14990752:12383,14990515:12384,14990517:12385,14990519:12386,14990521:12387,14990523:12388,14990526:12389,14990720:12390,14990722:12391,14990728:12392,14990729:12393,14990731:12394,14990732:12395,14990738:12396,14990740:12397,14990742:12398,14990744:12399,14990751:12400,14990755:12401,14990762:12402,14990764:12403,14990766:12404,14990769:12405,14990775:12406,14990776:12407,14990777:12408,14990778:12409,14990781:12410,14990782:12411,14990977:12412,14990978:12413,14990980:12414,14990981:12577,14990985:12578,14990986:12579,14990988:12580,14990990:12581,14990992:12582,14990994:12583,14990995:12584,14990996:12585,14990999:12586,14991001:12587,14991002:12588,14991006:12589,14991007:12590,14991026:12591,14991031:12592,14991033:12593,14991035:12594,14991036:12595,14991037:12596,14991038:12597,14991232:12598,14991233:12599,14991237:12600,14991238:12601,14991240:12602,14991241:12603,14991243:12604,14991244:12605,14991245:12606,14991247:12607,14991250:12608,14991260:12609,14991264:12610,14991266:12611,14991280:12612,14991282:12613,14991292:12614,14991293:12615,14991295:12616,15040640:12617,15040641:12618,15040644:12619,15040647:12620,15040650:12621,15040652:12622,15040654:12623,15040656:12624,15040659:12625,15040663:12626,15040664:12627,15040667:12628,15040668:12629,15040669:12630,15040670:12631,15040674:12632,15040679:12633,15040686:12634,15040688:12635,15040690:12636,15040691:12637,15040693:12638,15040896:12639,15040897:12640,15040898:12641,15040901:12642,15040902:12643,15040906:12644,15040908:12645,15040910:12646,15040913:12647,15040914:12648,15040915:12649,15040919:12650,15040921:12651,15040927:12652,15040928:12653,15040930:12654,15040931:12655,15040934:12656,15040935:12657,15040938:12658,15040941:12659,15040944:12660,15040945:12661,15040699:12662,15041153:12663,15041155:12664,15041156:12665,15041158:12666,15041162:12667,15041166:12668,15041167:12669,15041168:12670,15041170:12833,15041171:12834,15041172:12835,15041174:12836,15041179:12837,15041180:12838,15041182:12839,15041183:12840,15041184:12841,15041185:12842,15041186:12843,15041194:12844,15041199:12845,15041200:12846,15041209:12847,15041210:12848,15041213:12849,15041408:12850,15041411:12851,15041412:12852,15041415:12853,15041420:12854,15041422:12855,15041424:12856,15041427:12857,15041428:12858,15041432:12859,15041436:12860,15041437:12861,15041439:12862,15041442:12863,15041444:12864,15041446:12865,15041448:12866,15041449:12867,15041455:12868,15041457:12869,15041462:12870,15041466:12871,15041470:12872,15041667:12873,15041670:12874,15041671:12875,15041672:12876,15041675:12877,15041676:12878,15041677:12879,15041678:12880,15041458:12881,15041680:12882,15041687:12883,15041689:12884,15041691:12885,15041692:12886,15041693:12887,15041694:12888,15041699:12889,15041703:12890,15041704:12891,15041708:12892,15041709:12893,15041711:12894,15041713:12895,15041715:12896,15041716:12897,15041717:12898,15041720:12899,15041721:12900,15041922:12901,15041930:12902,15041935:12903,15041939:12904,15041941:12905,15041943:12906,15041944:12907,15041951:12908,15041956:12909,15041958:12910,15041982:12911,15042179:12912,15042180:12913,15042187:12914,15042190:12915,15042200:12916,15042205:12917,15042209:12918,15042211:12919,15042221:12920,15042232:12921,15042234:12922,15042236:12923,15042238:12924,15042239:12925,15042434:12926,15042440:13089,15042447:13090,15042449:13091,15042450:13092,15042451:13093,15042453:13094,15042456:13095,15042462:13096,15042466:13097,15042469:13098,15042478:13099,15042482:13100,15042483:13101,15042484:13102,15042487:13103,15042689:13104,15042690:13105,15042693:13106,15042706:13107,15042707:13108,15042709:13109,15042710:13110,15042712:13111,15042722:13112,15042728:13113,15042737:13114,15042738:13115,15042741:13116,15042748:13117,15042949:13118,15042953:13119,15042965:13120,15042967:13121,15042968:13122,15042970:13123,15042972:13124,15042975:13125,15042976:13126,15042977:13127,15042982:13128,15042990:13129,15042999:13130,15043e3:13131,15043001:13132,15043200:13133,15043202:13134,15043205:13135,15043210:13136,15043212:13137,15043219:13138,15043221:13139,15043222:13140,15043223:13141,15043224:13142,15043226:13143,15043228:13144,15043236:13145,15043237:13146,15043238:13147,15043239:13148,15043247:13149,15043248:13150,15043254:13151,15043255:13152,15043256:13153,15043258:13154,15043259:13155,15043261:13156,15043456:13157,15043460:13158,15043462:13159,15043464:13160,15043468:13161,15043471:13162,15043473:13163,15043476:13164,15043478:13165,15043483:13166,15043484:13167,15043489:13168,15043493:13169,15043496:13170,15043497:13171,15043498:13172,15043500:13173,15043504:13174,15043505:13175,15043508:13176,15043510:13177,15043511:13178,15043712:13179,15043715:13180,15043722:13181,15043723:13182,15043724:13345,15043729:13346,15043731:13347,15043736:13348,15043739:13349,15043740:13350,15043742:13351,15043743:13352,15043749:13353,15043751:13354,15043752:13355,15043753:13356,15043755:13357,15043756:13358,15043757:13359,15043760:13360,15043762:13361,15043765:13362,15043772:13363,15043773:13364,15043774:13365,15043970:13366,15043980:13367,15043979:13368,15043993:13369,15043995:13370,15044001:13371,15044003:13372,15044005:13373,15044012:13374,15044013:13375,15044018:13376,15044025:13377,15044030:13378,15044227:13379,15044231:13380,15044232:13381,15044238:13382,15044243:13383,15044244:13384,15044249:13385,15044253:13386,15044257:13387,15044260:13388,15044266:13389,15044267:13390,15044271:13391,15044274:13392,15044276:13393,15044277:13394,15044279:13395,15044280:13396,15044282:13397,15044285:13398,15044480:13399,15044485:13400,15044495:13401,15044498:13402,15044499:13403,15044501:13404,15044506:13405,15044509:13406,15044510:13407,15044512:13408,15044518:13409,15044519:13410,15044533:13411,15044738:13412,15044755:13413,15044762:13414,15044769:13415,15044775:13416,15044776:13417,15044778:13418,15044783:13419,15044785:13420,15044788:13421,15044789:13422,15044995:13423,15044996:13424,15044999:13425,15045005:13426,15045007:13427,15045022:13428,15045026:13429,15045028:13430,15045030:13431,15045031:13432,15045033:13433,15045035:13434,15045037:13435,15045038:13436,15045044:13437,15045055:13438,15045249:13601,15045251:13602,15045253:13603,15045256:13604,15045257:13605,15045261:13606,15045265:13607,15045269:13608,15045270:13609,15045276:13610,15045279:13611,15045281:13612,15045286:13613,15045287:13614,15045289:13615,15045290:13616,15045293:13617,15045294:13618,15045297:13619,15045303:13620,15045305:13621,15045306:13622,15045307:13623,15045311:13624,15045510:13625,15045514:13626,15045517:13627,15045518:13628,15045536:13629,15045546:13630,15045548:13631,15045551:13632,15045558:13633,15045564:13634,15045566:13635,15045567:13636,15045760:13637,15045761:13638,15045765:13639,15045768:13640,15045769:13641,15045772:13642,15045773:13643,15045774:13644,15045781:13645,15045802:13646,15045803:13647,15045810:13648,15045813:13649,15045814:13650,15045819:13651,15045820:13652,15045821:13653,15046017:13654,15046023:13655,15046025:13656,15046026:13657,15046029:13658,15046032:13659,15046033:13660,15046040:13661,15046042:13662,15046043:13663,15046046:13664,15046048:13665,15046049:13666,15046052:13667,15046054:13668,15046079:13669,15046273:13670,15046274:13671,15046278:13672,15046280:13673,15046286:13674,15046287:13675,15046289:13676,15046290:13677,15046291:13678,15046292:13679,15046295:13680,15046307:13681,15046308:13682,15046317:13683,15046322:13684,15046335:13685,15046529:13686,15046531:13687,15046534:13688,15046537:13689,15046539:13690,15046540:13691,15046542:13692,15046545:13693,15046546:13694,15046547:13857,15046551:13858,15046552:13859,15046555:13860,15046558:13861,15046562:13862,15046569:13863,15046582:13864,15046591:13865,15046789:13866,15046792:13867,15046794:13868,15046797:13869,15046798:13870,15046799:13871,15046800:13872,15046801:13873,15046802:13874,15046809:13875,15046828:13876,15046832:13877,15046835:13878,15046837:13879,15046839:13880,15046841:13881,15046843:13882,15046844:13883,15046845:13884,15046847:13885,15047040:13886,15047041:13887,15047043:13888,15047044:13889,15047046:13890,15047049:13891,15047051:13892,15047053:13893,15047055:13894,15047060:13895,15047070:13896,15047072:13897,15047073:13898,15047074:13899,15047075:13900,15047078:13901,15047081:13902,15047085:13903,15047087:13904,15047089:13905,15047090:13906,15047093:13907,15047300:13908,15047301:13909,15047304:13910,15047307:13911,15047308:13912,15047317:13913,15047321:13914,15047322:13915,15047325:13916,15047326:13917,15047327:13918,15047334:13919,15047335:13920,15047336:13921,15047337:13922,15047339:13923,15047340:13924,15047341:13925,15047345:13926,15047347:13927,15047351:13928,15047358:13929,15047557:13930,15047561:13931,15047562:13932,15047563:13933,15047567:13934,15047568:13935,15047564:13936,15047565:13937,15047577:13938,15047580:13939,15047581:13940,15047583:13941,15047585:13942,15047588:13943,15047589:13944,15047590:13945,15047591:13946,15047592:13947,15047601:13948,15047595:13949,15047597:13950,15047606:14113,15047607:14114,15047809:14115,15047810:14116,15047815:14117,15047818:14118,15047820:14119,15047825:14120,15047829:14121,15047834:14122,15047835:14123,15047837:14124,15047840:14125,15047842:14126,15047843:14127,15047844:14128,15047845:14129,15047849:14130,15047850:14131,15047852:14132,15047854:14133,15047855:14134,15047859:14135,15047860:14136,15047869:14137,15047870:14138,15047871:14139,15048069:14140,15048070:14141,15048076:14142,15048077:14143,15048082:14144,15048098:14145,15048101:14146,15048103:14147,15048104:14148,15048107:14149,15048109:14150,15048110:14151,15048111:14152,15048112:14153,15048113:14154,15048115:14155,15048116:14156,15048117:14157,15048119:14158,15048121:14159,15048122:14160,15048123:14161,15048124:14162,15048126:14163,15048321:14164,15048323:14165,15048332:14166,15048340:14167,15048343:14168,15048345:14169,15048346:14170,15048348:14171,15048349:14172,15048350:14173,15048351:14174,15048353:14175,15048341:14176,15048359:14177,15048360:14178,15048361:14179,15048364:14180,15048376:14181,15048381:14182,15048583:14183,15048584:14184,15048588:14185,15048591:14186,15048597:14187,15048605:14188,15048606:14189,15048612:14190,15048614:14191,15048615:14192,15048617:14193,15048621:14194,15048624:14195,15048629:14196,15048630:14197,15048632:14198,15048637:14199,15048638:14200,15048639:14201,15048835:14202,15048836:14203,15048840:14204,15048841:14205,15048609:14206,15048844:14369,15048845:14370,15048859:14371,15048862:14372,15048863:14373,15048864:14374,15048870:14375,15048871:14376,15048877:14377,15048882:14378,15048889:14379,15048895:14380,15049097:14381,15049100:14382,15049101:14383,15049103:14384,15049104:14385,15049109:14386,15049119:14387,15049121:14388,15049124:14389,15049127:14390,15049128:14391,15049144:14392,15049148:14393,15049151:14394,15049344:14395,15049345:14396,15049351:14397,15049352:14398,15049353:14399,15049354:14400,15049356:14401,15049357:14402,15049359:14403,15049360:14404,15049364:14405,15049366:14406,15049373:14407,15049376:14408,15049377:14409,15049378:14410,15049382:14411,15049385:14412,15049393:14413,15049394:14414,15049604:14415,15049404:14416,15049602:14417,15049608:14418,15049613:14419,15049614:14420,15049616:14421,15049618:14422,15049620:14423,15049622:14424,15049626:14425,15049629:14426,15049633:14427,15049634:14428,15049641:14429,15049651:14430,15049861:14431,15049862:14432,15049867:14433,15049868:14434,15049874:14435,15049875:14436,15049876:14437,15243649:14438,15049885:14439,15049889:14440,15049891:14441,15049892:14442,15049896:14443,15049903:14444,15049904:14445,15049907:14446,15049909:14447,15049910:14448,15049919:14449,15050115:14450,15050118:14451,15050130:14452,15050131:14453,15050137:14454,15050139:14455,15050141:14456,15050142:14457,15050143:14458,15050145:14459,15050147:14460,15050155:14461,15050157:14462,15050159:14625,15050162:14626,15050165:14627,15050166:14628,15050169:14629,15050171:14630,15050172:14631,15050379:14632,15050380:14633,15050382:14634,15050386:14635,15050389:14636,15050391:14637,15050399:14638,15050404:14639,15050407:14640,15050413:14641,15050414:14642,15050415:14643,15050416:14644,15050419:14645,15050423:14646,15050426:14647,15050428:14648,15050625:14649,15050627:14650,15050628:14651,15050632:14652,15050634:14653,15050637:14654,15050642:14655,15050653:14656,15050654:14657,15050655:14658,15050659:14659,15050660:14660,15050663:14661,15050670:14662,15050671:14663,15050673:14664,15050674:14665,15050676:14666,15050679:14667,15050880:14668,15050884:14669,15050892:14670,15050893:14671,15050894:14672,15050898:14673,15050899:14674,15050910:14675,15050915:14676,15050916:14677,15050919:14678,15050920:14679,15050922:14680,15050925:14681,15050928:14682,15051140:14683,15051141:14684,15051143:14685,15051144:14686,15051148:14687,15051152:14688,15051157:14689,15051166:14690,15051171:14691,15051173:14692,15051175:14693,15051181:14694,15051191:14695,15051194:14696,15051195:14697,15051198:14698,15051403:14699,15051408:14700,15051411:14701,15051414:14702,15051417:14703,15051420:14704,15051422:14705,15051423:14706,15051424:14707,15051426:14708,15051431:14709,15051436:14710,15051441:14711,15051442:14712,15051443:14713,15051445:14714,15051448:14715,15051450:14716,15051451:14717,15051455:14718,15051652:14881,15051654:14882,15051656:14883,15051663:14884,15051674:14885,15051676:14886,15051680:14887,15051685:14888,15051690:14889,15051694:14890,15051701:14891,15051702:14892,15051709:14893,15051904:14894,15051905:14895,15051912:14896,15051927:14897,15051956:14898,15051929:14899,15051931:14900,15051933:14901,15051937:14902,15051941:14903,15051949:14904,15051960:14905,15052161:14906,15052171:14907,15052172:14908,15052178:14909,15052182:14910,15052190:14911,15052200:14912,15052206:14913,15052207:14914,15052220:14915,15052221:14916,15052222:14917,15052223:14918,15052417:14919,15052420:14920,15052422:14921,15052426:14922,15052430:14923,15052432:14924,15052433:14925,15052435:14926,15052436:14927,15052438:14928,15052456:14929,15052457:14930,15052460:14931,15052461:14932,15052463:14933,15052465:14934,15052466:14935,15052471:14936,15052474:14937,15052476:14938,15052672:14939,15052673:14940,15052685:14941,15052687:14942,15052694:14943,15052695:14944,15052696:14945,15052697:14946,15052698:14947,15052704:14948,15052719:14949,15052721:14950,15052724:14951,15052733:14952,15052940:14953,15052951:14954,15052958:14955,15052959:14956,15052963:14957,15052966:14958,15052969:14959,15052971:14960,15052972:14961,15052974:14962,15052976:14963,15052978:14964,15052981:14965,15052982:14966,15053209:14967,15053210:14968,15053212:14969,15053218:14970,15053219:14971,15053223:14972,15053224:14973,15053225:14974,15053229:15137,15053232:15138,15053236:15139,15053237:15140,15053242:15141,15053243:15142,15053244:15143,15053245:15144,15053447:15145,15053448:15146,15053450:15147,15053455:15148,15053458:15149,15053469:15150,15053471:15151,15053472:15152,15053474:15153,15053475:15154,15053478:15155,15053482:15156,15053490:15157,15053492:15158,15053493:15159,15053498:15160,15053705:15161,15053707:15162,15053714:15163,15053725:15164,15053719:15165,15053742:15166,15053745:15167,15053746:15168,15053748:15169,15053953:15170,15053958:15171,15053965:15172,15053970:15173,15053995:15174,15053987:15175,15053988:15176,15053990:15177,15053991:15178,15054001:15179,15054004:15180,15054009:15181,15054013:15182,15054015:15183,15054210:15184,15054211:15185,15054214:15186,15054216:15187,15054229:15188,15054225:15189,15054233:15190,15054218:15191,15054239:15192,15054240:15193,15054241:15194,15054242:15195,15054244:15196,15054250:15197,15054253:15198,15054256:15199,15054265:15200,15054266:15201,15054270:15202,15054271:15203,15054465:15204,15054467:15205,15054472:15206,15054474:15207,15054482:15208,15054483:15209,15054484:15210,15054485:15211,15054489:15212,15054491:15213,15054495:15214,15054496:15215,15054503:15216,15054507:15217,15054512:15218,15054516:15219,15054520:15220,15054521:15221,15054723:15222,15054727:15223,15054731:15224,15054736:15225,15054734:15226,15054744:15227,15054745:15228,15054752:15229,15054756:15230,15054761:15393,15054776:15394,15054777:15395,15054976:15396,15054983:15397,15054989:15398,15054994:15399,15054996:15400,15054997:15401,15055e3:15402,15055007:15403,15055008:15404,15055022:15405,15055016:15406,15055026:15407,15055029:15408,15055038:15409,15055243:15410,15055248:15411,15055241:15412,15055249:15413,15055254:15414,15055256:15415,15055259:15416,15055260:15417,15055262:15418,15055272:15419,15055274:15420,15055275:15421,15055276:15422,15055277:15423,15055278:15424,15055280:15425,15055488:15426,15055499:15427,15055502:15428,15055522:15429,15055524:15430,15055525:15431,15055528:15432,15055530:15433,15055532:15434,15055537:15435,15055539:15436,15055549:15437,15055550:15438,15055551:15439,15055750:15440,15055756:15441,15055755:15442,15055758:15443,15055761:15444,15055762:15445,15055764:15446,15055765:15447,15055772:15448,15055774:15449,15055781:15450,15055787:15451,15056002:15452,15056006:15453,15056007:15454,15056008:15455,15056014:15456,15056025:15457,15056028:15458,15056029:15459,15056033:15460,15056034:15461,15056035:15462,15056036:15463,15056040:15464,15056043:15465,15056044:15466,15056046:15467,15056048:15468,15056052:15469,15056054:15470,15056059:15471,15056061:15472,15056063:15473,15056256:15474,15056260:15475,15056261:15476,15056263:15477,15056269:15478,15056272:15479,15056276:15480,15056280:15481,15056283:15482,15056288:15483,15056291:15484,15056292:15485,15056295:15486,15056303:15649,15056306:15650,15056308:15651,15056309:15652,15056312:15653,15056314:15654,15056317:15655,15056318:15656,15056521:15657,15056525:15658,15056527:15659,15056534:15660,15056540:15661,15056541:15662,15056546:15663,15056551:15664,15056555:15665,15056548:15666,15056556:15667,15056559:15668,15056560:15669,15056561:15670,15056568:15671,15056772:15672,15056775:15673,15056776:15674,15056777:15675,15056779:15676,15056784:15677,15056785:15678,15056786:15679,15056787:15680,15056788:15681,15056798:15682,15056801:15683,15056802:15684,15056808:15685,15056809:15686,15056810:15687,15056812:15688,15056813:15689,15056814:15690,15056815:15691,15056818:15692,15056819:15693,15056822:15694,15056826:15695,15056828:15696,15106183:15697,15106186:15698,15106189:15699,15106195:15700,15106196:15701,15106199:15702,15106200:15703,15106202:15704,15106207:15705,15106212:15706,15106221:15707,15106227:15708,15106229:15709,15106432:15710,15106439:15711,15106440:15712,15106441:15713,15106444:15714,15106449:15715,15106452:15716,15106454:15717,15106455:15718,15106461:15719,15106465:15720,15106471:15721,15106481:15722,15106494:15723,15106495:15724,15106690:15725,15106694:15726,15106696:15727,15106698:15728,15106702:15729,15106705:15730,15106707:15731,15106709:15732,15106712:15733,15106717:15734,15106718:15735,15106722:15736,15106724:15737,15106725:15738,15106728:15739,15106736:15740,15106737:15741,15106743:15742,15106747:15905,15106750:15906,15106946:15907,15106948:15908,15106952:15909,15106953:15910,15106954:15911,15106955:15912,15106958:15913,15106959:15914,15106964:15915,15106965:15916,15106969:15917,15106971:15918,15106973:15919,15106974:15920,15106978:15921,15106981:15922,15106994:15923,15106997:15924,15107e3:15925,15107004:15926,15107005:15927,15107202:15928,15107207:15929,15107210:15930,15107212:15931,15107216:15932,15107217:15933,15107218:15934,15107219:15935,15107220:15936,15107222:15937,15107223:15938,15107225:15939,15107228:15940,15107230:15941,15107234:15942,15107242:15943,15107243:15944,15107248:15945,15107249:15946,15107253:15947,15107254:15948,15107255:15949,15107257:15950,15107457:15951,15107461:15952,15107462:15953,15107465:15954,15107486:15955,15107488:15956,15107500:15957,15107506:15958,15107512:15959,15107515:15960,15107516:15961,15107519:15962,15107712:15963,15107713:15964,15107715:15965,15107716:15966,15107723:15967,15107725:15968,15107730:15969,15107731:15970,15107735:15971,15107736:15972,15107740:15973,15107741:15974,15107743:15975,15107744:15976,15107749:15977,15107752:15978,15107754:15979,15107757:15980,15107768:15981,15107769:15982,15107772:15983,15107968:15984,15107969:15985,15107970:15986,15107982:15987,15107983:15988,15107989:15989,15107996:15990,15107997:15991,15107998:15992,15107999:15993,15108001:15994,15108002:15995,15108007:15996,15108009:15997,15108005:15998,15108012:16161,15108013:16162,15108015:16163,15108225:16164,15108227:16165,15108228:16166,15108231:16167,15108243:16168,15108245:16169,15108252:16170,15108256:16171,15108258:16172,15108259:16173,15108263:16174,15108265:16175,15108267:16176,15108281:16177,15108285:16178,15108482:16179,15108483:16180,15108484:16181,15108486:16182,15108492:16183,15108496:16184,15108497:16185,15108498:16186,15108500:16187,15108502:16188,15108506:16189,15108508:16190,15108516:16191,15108525:16192,15108527:16193,15108531:16194,15108538:16195,15108541:16196,15108749:16197,15108750:16198,15108751:16199,15108752:16200,15108774:16201,15108776:16202,15108787:16203,15108790:16204,15108791:16205,15108794:16206,15108798:16207,15108799:16208,15108996:16209,15109006:16210,15109013:16211,15109014:16212,15109018:16213,15109034:16214,15109042:16215,15109044:16216,15109052:16217,15109053:16218,15109251:16219,15109252:16220,15109258:16221,15109259:16222,15109261:16223,15109264:16224,15109267:16225,15109270:16226,15109272:16227,15109289:16228,15109290:16229,15109293:16230,15109301:16231,15109302:16232,15109305:16233,15109308:16234,15109505:16235,15109506:16236,15109507:16237,15109508:16238,15109510:16239,15109514:16240,15109515:16241,15109518:16242,15109522:16243,15109523:16244,15109524:16245,15109528:16246,15109531:16247,15109541:16248,15109542:16249,15109548:16250,15109549:16251,15109553:16252,15109556:16253,15109557:16254,15109560:16417,15109564:16418,15109565:16419,15109567:16420,15109762:16421,15109764:16422,15109767:16423,15109770:16424,15109776:16425,15109780:16426,15109781:16427,15109785:16428,15109786:16429,15109790:16430,15109796:16431,15109798:16432,15109805:16433,15109806:16434,15109807:16435,15109821:16436,15110017:16437,15110021:16438,15110024:16439,15110030:16440,15110033:16441,15110035:16442,15110036:16443,15110037:16444,15110044:16445,15110048:16446,15110053:16447,15110058:16448,15110060:16449,15110066:16450,15110067:16451,15110069:16452,15110072:16453,15110073:16454,15110281:16455,15110282:16456,15110288:16457,15110290:16458,15110292:16459,15110296:16460,15110302:16461,15110304:16462,15110306:16463,15110308:16464,15110309:16465,15110313:16466,15110314:16467,15110319:16468,15110320:16469,15110325:16470,15110333:16471,15110335:16472,15110539:16473,15110543:16474,15110545:16475,15110546:16476,15110547:16477,15110548:16478,15110554:16479,15110555:16480,15110556:16481,15110557:16482,15110559:16483,15110560:16484,15110561:16485,15110563:16486,15110573:16487,15110579:16488,15110580:16489,15110587:16490,15110589:16491,15110789:16492,15110791:16493,15110799:16494,15110800:16495,15110801:16496,15110808:16497,15110809:16498,15110811:16499,15110813:16500,15110815:16501,15110817:16502,15110819:16503,15110822:16504,15110824:16505,15110828:16506,15110835:16507,15110845:16508,15110846:16509,15110847:16510,15111044:16673,15111049:16674,15111050:16675,15111051:16676,15111052:16677,15111054:16678,15111056:16679,15111057:16680,15111061:16681,15111063:16682,15111076:16683,15111077:16684,15111081:16685,15111082:16686,15111085:16687,15111088:16688,15111093:16689,15111095:16690,15111099:16691,15111103:16692,15111297:16693,15111300:16694,15111304:16695,15111305:16696,15111306:16697,15111311:16698,15111315:16699,15111316:16700,15111318:16701,15111321:16702,15111323:16703,15111326:16704,15111327:16705,15111330:16706,15111334:16707,15111337:16708,15111342:16709,15111345:16710,15111354:16711,15111356:16712,15111357:16713,15111555:16714,15111559:16715,15111561:16716,15111568:16717,15111570:16718,15111572:16719,15111583:16720,15111584:16721,15111591:16722,15111595:16723,15111610:16724,15111613:16725,15111809:16726,15111813:16727,15111818:16728,15111826:16729,15111829:16730,15111832:16731,15111837:16732,15111840:16733,15111843:16734,15111846:16735,15111854:16736,15111858:16737,15111859:16738,15111860:16739,15111871:16740,15112066:16741,15112072:16742,15112073:16743,15112078:16744,15112080:16745,15112084:16746,15112086:16747,15112088:16748,15112095:16749,15112112:16750,15112114:16751,15112116:16752,15112117:16753,15112121:16754,15112126:16755,15112127:16756,15112320:16757,15112324:16758,15112328:16759,15112329:16760,15112333:16761,15112337:16762,15112338:16763,15112341:16764,15112342:16765,15112349:16766,15112350:16929,15112353:16930,15112354:16931,15112355:16932,15112356:16933,15112358:16934,15112361:16935,15112362:16936,15112363:16937,15112364:16938,15112366:16939,15112368:16940,15112369:16941,15112371:16942,15112377:16943,15112375:16944,15112576:16945,15112581:16946,15112582:16947,15112586:16948,15112588:16949,15112593:16950,15112590:16951,15112599:16952,15112600:16953,15112601:16954,15112603:16955,15112604:16956,15112608:16957,15112609:16958,15113147:16959,15112618:16960,15112619:16961,15112620:16962,15112638:16963,15112627:16964,15112629:16965,15112639:16966,15112631:16967,15112632:16968,15112633:16969,15112635:16970,15112832:16971,15112636:16972,15112843:16973,15112844:16974,15112845:16975,15112848:16976,15112850:16977,15112857:16978,15112858:16979,15112859:16980,15112860:16981,15112863:16982,15112864:16983,15112868:16984,15112877:16985,15112881:16986,15112882:16987,15112885:16988,15112891:16989,15112895:16990,15113088:16991,15113090:16992,15113091:16993,15113096:16994,15113100:16995,15113102:16996,15113103:16997,15113108:16998,15113115:16999,15113119:17e3,15113128:17001,15113131:17002,15113132:17003,15113134:17004,15113146:17005,15113349:17006,15113351:17007,15113358:17008,15113363:17009,15113369:17010,15113372:17011,15113376:17012,15113378:17013,15113395:17014,15113406:17015,15113605:17016,15113607:17017,15113608:17018,15113612:17019,15113620:17020,15113621:17021,15113629:17022,15113638:17185,15113644:17186,15113646:17187,15113652:17188,15113654:17189,15113659:17190,15113857:17191,15113860:17192,15113870:17193,15113871:17194,15113873:17195,15113875:17196,15113878:17197,15113880:17198,15113881:17199,15113883:17200,15113904:17201,15113905:17202,15113906:17203,15113909:17204,15113915:17205,15113916:17206,15113917:17207,15114169:17208,15114112:17209,15114114:17210,15114115:17211,15114117:17212,15114120:17213,15114121:17214,15114130:17215,15114135:17216,15114137:17217,15114140:17218,15114145:17219,15114150:17220,15114160:17221,15114162:17222,15114166:17223,15114167:17224,15114642:17225,15114388:17226,15114393:17227,15114397:17228,15114399:17229,15114408:17230,15114407:17231,15114412:17232,15114413:17233,15114415:17234,15114416:17235,15114417:17236,15114419:17237,15114427:17238,15114431:17239,15114628:17240,15114629:17241,15114634:17242,15114636:17243,15114645:17244,15114647:17245,15114648:17246,15114651:17247,15114667:17248,15114670:17249,15114671:17250,15114672:17251,15114673:17252,15114674:17253,15114677:17254,15114681:17255,15114682:17256,15114683:17257,15114684:17258,15114882:17259,15114884:17260,15114886:17261,15114888:17262,15114902:17263,15114904:17264,15114906:17265,15114908:17266,15114913:17267,15114915:17268,15114917:17269,15114921:17270,15114922:17271,15114926:17272,15114930:17273,15114939:17274,15115141:17275,15115144:17276,15115148:17277,15115151:17278,15115152:17441,15115153:17442,15115155:17443,15115158:17444,15115161:17445,15115164:17446,15115165:17447,15115173:17448,15115176:17449,15115178:17450,15115179:17451,15115180:17452,15115181:17453,15115184:17454,15115185:17455,15115189:17456,15115190:17457,15115195:17458,15115196:17459,15115197:17460,15115398:17461,15115401:17462,15115402:17463,15115408:17464,15115409:17465,15115411:17466,15115414:17467,15115415:17468,15115441:17469,15115443:17470,15115445:17471,15115448:17472,15115451:17473,15115650:17474,15115653:17475,15115657:17476,15115662:17477,15115671:17478,15115675:17479,15115683:17480,15115684:17481,15115685:17482,15115686:17483,15115688:17484,15115689:17485,15115692:17486,15115696:17487,15115697:17488,15115698:17489,15115706:17490,15115707:17491,15115711:17492,15115904:17493,15115917:17494,15115922:17495,15115926:17496,15115928:17497,15115937:17498,15115941:17499,15115942:17500,15115944:17501,15115947:17502,15115949:17503,15115951:17504,15115959:17505,15115960:17506,15115962:17507,15115964:17508,15116165:17509,15116168:17510,15116177:17511,15116182:17512,15116183:17513,15116194:17514,15116197:17515,15116206:17516,15116207:17517,15116209:17518,15116211:17519,15116213:17520,15116222:17521,15116416:17522,15116417:17523,15116419:17524,15116431:17525,15116433:17526,15116437:17527,15116442:17528,15116445:17529,15116448:17530,15116452:17531,15116456:17532,15116464:17533,15116466:17534,15116468:17697,15116471:17698,15116475:17699,15116478:17700,15116479:17701,15116677:17702,15116678:17703,15116681:17704,15116682:17705,15116686:17706,15116688:17707,15116689:17708,15116690:17709,15116693:17710,15116694:17711,15116699:17712,15116708:17713,15116711:17714,15116714:17715,15116721:17716,15116723:17717,15116734:17718,15116929:17719,15116931:17720,15116934:17721,15116935:17722,15116937:17723,15116939:17724,15116945:17725,15116955:17726,15116957:17727,15116958:17728,15116959:17729,15116965:17730,15116971:17731,15116975:17732,15116976:17733,15116977:17734,15116980:17735,15116989:17736,15116990:17737,15116991:17738,15117190:17739,15117193:17740,15117192:17741,15117196:17742,15117200:17743,15117204:17744,15117205:17745,15117206:17746,15117212:17747,15117213:17748,15117220:17749,15117223:17750,15117228:17751,15117232:17752,15117233:17753,15117234:17754,15117244:17755,15117245:17756,15117442:17757,15117443:17758,15117446:17759,15117447:17760,15117449:17761,15117455:17762,15117456:17763,15117457:17764,15117463:17765,15117467:17766,15117470:17767,15117476:17768,15117480:17769,15117483:17770,15117484:17771,15117487:17772,15117493:17773,15117494:17774,15117499:17775,15117503:17776,15117702:17777,15117706:17778,15117709:17779,15117714:17780,15117718:17781,15117720:17782,15117725:17783,15117728:17784,15117735:17785,15117739:17786,15117742:17787,15117744:17788,15117749:17789,15117757:17790,15117758:17953,15117954:17954,15117957:17955,15117975:17956,15117979:17957,15117983:17958,15117984:17959,15117986:17960,15117987:17961,15117992:17962,15117993:17963,15117996:17964,15117997:17965,15117998:17966,15118e3:17967,15118008:17968,15118009:17969,15118013:17970,15118014:17971,15118211:17972,15118212:17973,15118217:17974,15118220:17975,15118230:17976,15118234:17977,15118241:17978,15118243:17979,15118246:17980,15118247:17981,15118254:17982,15118257:17983,15118263:17984,15118265:17985,15118271:17986,15118466:17987,15118468:17988,15118469:17989,15118473:17990,15118477:17991,15118478:17992,15118480:17993,15118482:17994,15118489:17995,15118495:17996,15118502:17997,15118503:17998,15118504:17999,15118508:18e3,15118510:18001,15118515:18002,15118517:18003,15118518:18004,15118522:18005,15118523:18006,15118527:18007,15118730:18008,15118731:18009,15118733:18010,15118735:18011,15118738:18012,15118740:18013,15118745:18014,15118747:18015,15118748:18016,15118763:18017,15118765:18018,15118767:18019,15118772:18020,15118774:18021,15118776:18022,15118777:18023,15118779:18024,15118981:18025,15118982:18026,15118983:18027,15118985:18028,15118996:18029,15118997:18030,15118999:18031,15119e3:18032,15119004:18033,15119007:18034,15119024:18035,15119026:18036,15119028:18037,15119234:18038,15119238:18039,15119245:18040,15119247:18041,15119248:18042,15119249:18043,15119250:18044,15119252:18045,15119254:18046,15119258:18209,15119260:18210,15119264:18211,15119271:18212,15119273:18213,15119275:18214,15119276:18215,15119278:18216,15119282:18217,15119284:18218,15119492:18219,15119495:18220,15119498:18221,15119502:18222,15119503:18223,15119505:18224,15119507:18225,15119514:18226,15119526:18227,15119527:18228,15119528:18229,15118759:18230,15119534:18231,15119535:18232,15119537:18233,15119545:18234,15119548:18235,15119551:18236,15119767:18237,15119774:18238,15119775:18239,15119777:18240,15119781:18241,15119783:18242,15119791:18243,15119792:18244,15119804:18245,15120002:18246,15120007:18247,15120017:18248,15120018:18249,15120020:18250,15120022:18251,15120023:18252,15120024:18253,15120042:18254,15120044:18255,15120052:18256,15120055:18257,15120057:18258,15120061:18259,15120063:18260,15120260:18261,15120264:18262,15120266:18263,15120270:18264,15120271:18265,15120278:18266,15120283:18267,15120285:18268,15120287:18269,15120288:18270,15120290:18271,15120293:18272,15120297:18273,15120303:18274,15120304:18275,15120308:18276,15120310:18277,15120316:18278,15120512:18279,15120516:18280,15120542:18281,15120546:18282,15120551:18283,15120562:18284,15120566:18285,15120569:18286,15120571:18287,15120572:18288,15120772:18289,15120773:18290,15120776:18291,15120777:18292,15120779:18293,15120783:18294,15120785:18295,15120786:18296,15120787:18297,15120788:18298,15120791:18299,15120796:18300,15120797:18301,15120798:18302,15120802:18465,15120803:18466,15120808:18467,15120819:18468,15120827:18469,15120829:18470,15121037:18471,15121043:18472,15121049:18473,15121056:18474,15121063:18475,15121069:18476,15121070:18477,15121073:18478,15121075:18479,15121083:18480,15121087:18481,15121280:18482,15121281:18483,15121283:18484,15121287:18485,15121288:18486,15121290:18487,15121293:18488,15121294:18489,15121295:18490,15121323:18491,15121325:18492,15121326:18493,15121337:18494,15121339:18495,15121341:18496,15121540:18497,15121544:18498,15121546:18499,15121548:18500,15121549:18501,15121558:18502,15121560:18503,15121562:18504,15121563:18505,15121574:18506,15121577:18507,15121578:18508,15121583:18509,15121584:18510,15121587:18511,15121590:18512,15121595:18513,15121596:18514,15121581:18515,15121807:18516,15121809:18517,15121810:18518,15121811:18519,15121815:18520,15121817:18521,15121818:18522,15121821:18523,15121822:18524,15121825:18525,15121826:18526,15121832:18527,15121836:18528,15121853:18529,15121854:18530,15122051:18531,15122055:18532,15122056:18533,15122059:18534,15122060:18535,15122061:18536,15122064:18537,15122066:18538,15122067:18539,15122068:18540,15122070:18541,15122074:18542,15122079:18543,15122080:18544,15122085:18545,15122086:18546,15122087:18547,15122088:18548,15122094:18549,15122095:18550,15122096:18551,15122101:18552,15122102:18553,15122108:18554,15122309:18555,15122311:18556,15122312:18557,15122314:18558,15122330:18721,15122334:18722,15122344:18723,15122345:18724,15122352:18725,15122357:18726,15122361:18727,15122364:18728,15122365:18729,15171712:18730,15171717:18731,15171718:18732,15171719:18733,15171725:18734,15171735:18735,15171744:18736,15171747:18737,15171759:18738,15171764:18739,15171767:18740,15171769:18741,15171772:18742,15171971:18743,15171972:18744,15171976:18745,15171977:18746,15171978:18747,15171979:18748,15171988:18749,15171989:18750,15171997:18751,15171998:18752,15171982:18753,15172004:18754,15172005:18755,15172012:18756,15172014:18757,15172021:18758,15172022:18759,15172030:18760,15172225:18761,15172229:18762,15172230:18763,15172244:18764,15172245:18765,15172246:18766,15172247:18767,15172248:18768,15172251:18769,15172260:18770,15172267:18771,15172272:18772,15172273:18773,15172276:18774,15172279:18775,15172490:18776,15172497:18777,15172499:18778,15172500:18779,15172501:18780,15172502:18781,15172504:18782,15172508:18783,15172516:18784,15172538:18785,15172739:18786,15172740:18787,15172741:18788,15172742:18789,15172743:18790,15172747:18791,15172748:18792,15172751:18793,15172766:18794,15172768:18795,15172779:18796,15172781:18797,15172783:18798,15172784:18799,15172785:18800,15172792:18801,15172993:18802,15172997:18803,15172998:18804,15172999:18805,15173002:18806,15173003:18807,15173008:18808,15173010:18809,15173015:18810,15173018:18811,15173020:18812,15173022:18813,15173024:18814,15173032:18977,15173049:18978,15173248:18979,15173253:18980,15173255:18981,15173260:18982,15173266:18983,15173274:18984,15173275:18985,15173280:18986,15173282:18987,15173295:18988,15173296:18989,15173298:18990,15173299:18991,15173306:18992,15173311:18993,15173504:18994,15173505:18995,15173508:18996,15173515:18997,15173516:18998,15173523:18999,15173526:19e3,15173529:19001,15173530:19002,15173532:19003,15173560:19004,15173566:19005,15173760:19006,15173767:19007,15173768:19008,15173769:19009,15173779:19010,15173783:19011,15173786:19012,15173789:19013,15173791:19014,15173796:19015,15173803:19016,15173807:19017,15173812:19018,15173816:19019,15173817:19020,15174017:19021,15174018:19022,15174019:19023,15174021:19024,15174030:19025,15174031:19026,15174032:19027,15174035:19028,15174037:19029,15174038:19030,15174042:19031,15174044:19032,15174046:19033,15174048:19034,15174051:19035,15174056:19036,15174059:19037,15174062:19038,15174063:19039,15174065:19040,15174071:19041,15174072:19042,15174075:19043,15174076:19044,15174079:19045,15174276:19046,15174281:19047,15174285:19048,15174286:19049,15174291:19050,15174299:19051,15174312:19052,15174317:19053,15174318:19054,15174321:19055,15174324:19056,15174334:19057,15174529:19058,15174535:19059,15174537:19060,15174540:19061,15174549:19062,15174550:19063,15174552:19064,15174559:19065,15174565:19066,15174579:19067,15174580:19068,15174586:19069,15174587:19070,15174590:19233,15174786:19234,15174788:19235,15174789:19236,15174791:19237,15174795:19238,15174797:19239,15174802:19240,15174803:19241,15174808:19242,15174809:19243,15174814:19244,15174818:19245,15174820:19246,15174823:19247,15174824:19248,15174828:19249,15174833:19250,15174834:19251,15174837:19252,15174842:19253,15174843:19254,15174845:19255,15175043:19256,15175053:19257,15175056:19258,15175058:19259,15175062:19260,15175064:19261,15175069:19262,15175070:19263,15175071:19264,15175072:19265,15175078:19266,15175079:19267,15175081:19268,15175083:19269,15175084:19270,15175086:19271,15175087:19272,15175089:19273,15175095:19274,15175097:19275,15175100:19276,15175296:19277,15175297:19278,15175299:19279,15175301:19280,15175302:19281,15175310:19282,15175312:19283,15175315:19284,15175317:19285,15175319:19286,15175320:19287,15175324:19288,15175326:19289,15175327:19290,15175328:19291,15175330:19292,15175333:19293,15175334:19294,15175338:19295,15175339:19296,15175341:19297,15175349:19298,15175351:19299,15175353:19300,15175356:19301,15175357:19302,15175359:19303,15175557:19304,15175558:19305,15175561:19306,15175563:19307,15175564:19308,15175567:19309,15175570:19310,15175571:19311,15175574:19312,15175577:19313,15175581:19314,15175585:19315,15175587:19316,15175590:19317,15175591:19318,15175593:19319,15175604:19320,15175605:19321,15175607:19322,15175609:19323,15175610:19324,15175611:19325,15175613:19326,15175615:19489,15175808:19490,15175809:19491,15175812:19492,15175815:19493,15175818:19494,15175825:19495,15175834:19496,15175835:19497,15175844:19498,15175846:19499,15175848:19500,15175849:19501,15175850:19502,15175851:19503,15175852:19504,15175853:19505,15175854:19506,15175855:19507,15175856:19508,15175857:19509,15175865:19510,15176064:19511,15176067:19512,15176068:19513,15176070:19514,15176071:19515,15176075:19516,15176077:19517,15176081:19518,15176082:19519,15176087:19520,15176093:19521,15176098:19522,15176102:19523,15176103:19524,15176104:19525,15176107:19526,15176109:19527,15176110:19528,15176113:19529,15176114:19530,15176320:19531,15176321:19532,15176325:19533,15176326:19534,15176327:19535,15176329:19536,15176335:19537,15176336:19538,15176337:19539,15176338:19540,15176344:19541,15176345:19542,15176346:19543,15176348:19544,15176351:19545,15176352:19546,15176353:19547,15176355:19548,15176358:19549,15176360:19550,15176361:19551,15176362:19552,15176363:19553,15176366:19554,15176367:19555,15176369:19556,15176370:19557,15176373:19558,15176377:19559,15176379:19560,15176383:19561,15176584:19562,15176585:19563,15176588:19564,15176592:19565,15176595:19566,15176600:19567,15176602:19568,15176603:19569,15176606:19570,15176607:19571,15176612:19572,15176616:19573,15176618:19574,15176619:19575,15176623:19576,15176628:19577,15176634:19578,15176635:19579,15176636:19580,15176639:19581,15176838:19582,15176850:19745,15176854:19746,15176855:19747,15176864:19748,15176865:19749,15176868:19750,15176871:19751,15176873:19752,15176874:19753,15176879:19754,15176886:19755,15176889:19756,15176893:19757,15176894:19758,15176895:19759,15177088:19760,15177091:19761,15177095:19762,15177096:19763,15177102:19764,15177104:19765,15177106:19766,15177111:19767,15177118:19768,15177119:19769,15177121:19770,15177135:19771,15177137:19772,15177145:19773,15177146:19774,15177147:19775,15177148:19776,15177149:19777,15177150:19778,15177345:19779,15177349:19780,15177360:19781,15177362:19782,15177363:19783,15177365:19784,15177369:19785,15177372:19786,15177378:19787,15177380:19788,15177396:19789,15177402:19790,15177407:19791,15177600:19792,15177601:19793,15177604:19794,15177606:19795,15177612:19796,15177614:19797,15177615:19798,15177623:19799,15177628:19800,15177631:19801,15177632:19802,15177633:19803,15177636:19804,15177639:19805,15177644:19806,15177646:19807,15177647:19808,15177649:19809,15177657:19810,15177856:19811,15177858:19812,15177859:19813,15177860:19814,15177863:19815,15177864:19816,15177866:19817,15177868:19818,15177871:19819,15177874:19820,15177875:19821,15177877:19822,15177878:19823,15177881:19824,15177883:19825,15177884:19826,15177885:19827,15177886:19828,15177891:19829,15177893:19830,15177894:19831,15177897:19832,15177901:19833,15177906:19834,15177907:19835,15177909:19836,15177912:19837,15177913:19838,15177914:20001,15177916:20002,15178122:20003,15178112:20004,15178113:20005,15178115:20006,15178116:20007,15178117:20008,15178121:20009,15178123:20010,15178133:20011,15178137:20012,15178143:20013,15178148:20014,15178149:20015,15178157:20016,15178158:20017,15178159:20018,15178161:20019,15178164:20020,15178369:20021,15178373:20022,15178380:20023,15178381:20024,15178389:20025,15178395:20026,15178396:20027,15178397:20028,15178399:20029,15178400:20030,15178402:20031,15178403:20032,15178404:20033,15178405:20034,15178406:20035,15178407:20036,15178408:20037,15178410:20038,15178413:20039,15178429:20040,15178625:20041,15178629:20042,15178633:20043,15178635:20044,15178636:20045,15178638:20046,15178644:20047,15178649:20048,15178656:20049,15178662:20050,15178664:20051,15178668:20052,15178672:20053,15178673:20054,15178678:20055,15178681:20056,15178684:20057,15178880:20058,15178886:20059,15178890:20060,15178894:20061,15178898:20062,15178900:20063,15178901:20064,15178903:20065,15178905:20066,15178906:20067,15178908:20068,15178914:20069,15178920:20070,15178925:20071,15178926:20072,15178927:20073,15178932:20074,15178933:20075,15178934:20076,15178937:20077,15178941:20078,15178942:20079,15179138:20080,15179141:20081,15179142:20082,15179146:20083,15179149:20084,15179150:20085,15179151:20086,15179154:20087,15179158:20088,15179159:20089,15179164:20090,15179166:20091,15179167:20092,15179168:20093,15179170:20094,15179172:20257,15179175:20258,15179178:20259,15179180:20260,15179184:20261,15179186:20262,15179187:20263,15179188:20264,15179194:20265,15179197:20266,15179392:20267,15179396:20268,15179404:20269,15179405:20270,15179412:20271,15179413:20272,15179414:20273,15179418:20274,15179423:20275,15179426:20276,15179431:20277,15179434:20278,15179438:20279,15179439:20280,15179441:20281,15179445:20282,15179454:20283,15179651:20284,15179657:20285,15179665:20286,15179666:20287,15179669:20288,15179673:20289,15179678:20290,15179679:20291,15179680:20292,15179684:20293,15179686:20294,15179690:20295,15179692:20296,15179696:20297,15179697:20298,15179700:20299,15179704:20300,15179707:20301,15179909:20302,15179910:20303,15179913:20304,15179917:20305,15179918:20306,15179921:20307,15179933:20308,15179937:20309,15179938:20310,15179939:20311,15179949:20312,15179950:20313,15179952:20314,15179957:20315,15179959:20316,15180163:20317,15180164:20318,15180167:20319,15180168:20320,15180172:20321,15180174:20322,15180178:20323,15180188:20324,15180190:20325,15180192:20326,15180193:20327,15180195:20328,15180196:20329,15180200:20330,15180202:20331,15180206:20332,15180218:20333,15180222:20334,15180426:20335,15180431:20336,15180436:20337,15180440:20338,15180449:20339,15180445:20340,15180446:20341,15180447:20342,15180452:20343,15180456:20344,15180460:20345,15180461:20346,15180464:20347,15180465:20348,15180466:20349,15180467:20350,15180475:20513,15180477:20514,15180479:20515,15180679:20516,15180680:20517,15180681:20518,15180684:20519,15180686:20520,15180690:20521,15180691:20522,15180693:20523,15180694:20524,15180708:20525,15180699:20526,15180703:20527,15180704:20528,15180705:20529,15180710:20530,15180714:20531,15180722:20532,15180723:20533,15180928:20534,15180726:20535,15180727:20536,15180730:20537,15180731:20538,15180735:20539,15180934:20540,15180940:20541,15180944:20542,15180954:20543,15180956:20544,15180958:20545,15180959:20546,15180960:20547,15180965:20548,15180967:20549,15180969:20550,15180973:20551,15180977:20552,15180980:20553,15180981:20554,15180987:20555,15180989:20556,15180991:20557,15181188:20558,15181189:20559,15181190:20560,15181194:20561,15181195:20562,15181199:20563,15181201:20564,15181204:20565,15181208:20566,15181211:20567,15181212:20568,15181223:20569,15181225:20570,15181227:20571,15181234:20572,15181241:20573,15181243:20574,15181244:20575,15181246:20576,15181451:20577,15181452:20578,15181457:20579,15181459:20580,15181460:20581,15181461:20582,15181462:20583,15181464:20584,15181467:20585,15181468:20586,15181473:20587,15181480:20588,15181481:20589,15181483:20590,15181487:20591,15181489:20592,15181492:20593,15181496:20594,15181499:20595,15181698:20596,15181700:20597,15181703:20598,15181704:20599,15181706:20600,15181711:20601,15181716:20602,15181718:20603,15181722:20604,15181725:20605,15181726:20606,15181728:20769,15181730:20770,15181733:20771,15181738:20772,15181739:20773,15181741:20774,15181745:20775,15181752:20776,15181756:20777,15181954:20778,15181955:20779,15181959:20780,15181961:20781,15181962:20782,15181964:20783,15181969:20784,15181973:20785,15181979:20786,15181982:20787,15181985:20788,15181991:20789,15181995:20790,15181997:20791,15181999:20792,15182e3:20793,15182004:20794,15182005:20795,15182008:20796,15182009:20797,15182010:20798,15182212:20799,15182213:20800,15182215:20801,15182216:20802,15182220:20803,15182229:20804,15182230:20805,15182233:20806,15182236:20807,15182237:20808,15182239:20809,15182240:20810,15182245:20811,15182247:20812,15182250:20813,15182253:20814,15182261:20815,15182264:20816,15182270:20817,15182464:20818,15182466:20819,15182469:20820,15182470:20821,15182474:20822,15182475:20823,15182480:20824,15182481:20825,15182484:20826,15182494:20827,15182496:20828,15182499:20829,15182508:20830,15182515:20831,15182517:20832,15182521:20833,15182523:20834,15182524:20835,15182726:20836,15182729:20837,15182732:20838,15182734:20839,15182737:20840,15182747:20841,15182760:20842,15182761:20843,15182763:20844,15182764:20845,15182769:20846,15182772:20847,15182779:20848,15182781:20849,15182782:20850,15182983:20851,15182996:20852,15183007:20853,15183011:20854,15183015:20855,15183017:20856,15183018:20857,15183019:20858,15183021:20859,15183022:20860,15183023:20861,15183024:20862,15183025:21025,15183028:21026,15183037:21027,15183039:21028,15183232:21029,15183233:21030,15183239:21031,15183246:21032,15183253:21033,15183264:21034,15183268:21035,15183270:21036,15183273:21037,15183274:21038,15183277:21039,15183279:21040,15183282:21041,15183283:21042,15183287:21043,15183492:21044,15183497:21045,15183502:21046,15183504:21047,15183505:21048,15183510:21049,15183515:21050,15183518:21051,15183520:21052,15183525:21053,15183532:21054,15183535:21055,15183536:21056,15183538:21057,15183541:21058,15183542:21059,15183546:21060,15183547:21061,15183548:21062,15183549:21063,15183746:21064,15183749:21065,15183752:21066,15183754:21067,15183764:21068,15183766:21069,15183767:21070,15183769:21071,15183770:21072,15183771:21073,15183784:21074,15183786:21075,15183794:21076,15183796:21077,15183797:21078,15183800:21079,15183801:21080,15183802:21081,15183804:21082,15183806:21083,15184001:21084,15184002:21085,15184003:21086,15184004:21087,15184006:21088,15184009:21089,15184011:21090,15184012:21091,15184014:21092,15184015:21093,15184025:21094,15184027:21095,15184032:21096,15184037:21097,15184038:21098,15184040:21099,15184044:21100,15184049:21101,15184051:21102,15184052:21103,15184054:21104,15184057:21105,15184058:21106,15184262:21107,15184266:21108,15184277:21109,15184273:21110,15184274:21111,15184275:21112,15184281:21113,15184282:21114,15184283:21115,15184284:21116,15184285:21117,15184286:21118,15184289:21281,15184291:21282,15184295:21283,15184297:21284,15184301:21285,15184302:21286,15184304:21287,15184306:21288,15184313:21289,15184316:21290,15184317:21291,15184518:21292,15184519:21293,15184527:21294,15184532:21295,15184542:21296,15184544:21297,15184550:21298,15184560:21299,15184566:21300,15184567:21301,15184570:21302,15184571:21303,15184572:21304,15184575:21305,15184772:21306,15184775:21307,15184776:21308,15184777:21309,15184781:21310,15184783:21311,15184787:21312,15184788:21313,15184789:21314,15184791:21315,15184793:21316,15184794:21317,15184797:21318,15184806:21319,15184809:21320,15184811:21321,15184821:21322,15185027:21323,15185031:21324,15185032:21325,15185033:21326,15185039:21327,15185041:21328,15185042:21329,15185043:21330,15185046:21331,15185053:21332,15185054:21333,15185059:21334,15185062:21335,15185066:21336,15185069:21337,15185073:21338,15185084:21339,15185085:21340,15185086:21341,15185280:21342,15185281:21343,15185287:21344,15185288:21345,15185293:21346,15185297:21347,15185299:21348,15185303:21349,15185305:21350,15185306:21351,15185308:21352,15185309:21353,15185317:21354,15185319:21355,15185322:21356,15185328:21357,15185336:21358,15185338:21359,15185339:21360,15185343:21361,15185537:21362,15185538:21363,15185539:21364,15185541:21365,15185542:21366,15185544:21367,15185547:21368,15185548:21369,15185549:21370,15185553:21371,15185558:21372,15185559:21373,15185565:21374,15185566:21537,15185574:21538,15185575:21539,15185578:21540,15185587:21541,15185590:21542,15185591:21543,15185593:21544,15185794:21545,15185795:21546,15185796:21547,15185797:21548,15185798:21549,15185804:21550,15185805:21551,15185806:21552,15185815:21553,15185817:21554,15186048:21555,15185826:21556,15185829:21557,15185830:21558,15185834:21559,15185835:21560,15185837:21561,15185841:21562,15185845:21563,15185846:21564,15185849:21565,15185850:21566,15186056:21567,15186064:21568,15186065:21569,15186069:21570,15186071:21571,15186076:21572,15186077:21573,15186080:21574,15186087:21575,15186088:21576,15186092:21577,15186093:21578,15186095:21579,15186099:21580,15186102:21581,15186111:21582,15186308:21583,15186309:21584,15186311:21585,15186318:21586,15186320:21587,15186322:21588,15186328:21589,15186335:21590,15186337:21591,15186338:21592,15186341:21593,15186347:21594,15186350:21595,15186351:21596,15186355:21597,15186360:21598,15186366:21599,15186561:21600,15186566:21601,15186567:21602,15186570:21603,15186573:21604,15186577:21605,15186581:21606,15186584:21607,15186586:21608,15186589:21609,15186590:21610,15187132:21611,15187131:21612,15187133:21613,15187134:21614,15187135:21615,15187331:21616,15187332:21617,15187335:21618,15187343:21619,15187346:21620,15187347:21621,15187355:21622,15187356:21623,15187357:21624,15187361:21625,15187363:21626,15187364:21627,15187365:21628,15187366:21629,15187373:21630,15187377:21793,15187389:21794,15187390:21795,15187391:21796,15187584:21797,15187595:21798,15187597:21799,15187599:21800,15187600:21801,15187601:21802,15187606:21803,15187607:21804,15187612:21805,15187617:21806,15187618:21807,15187622:21808,15187626:21809,15187629:21810,15187636:21811,15187644:21812,15187647:21813,15187840:21814,15187843:21815,15187848:21816,15187854:21817,15187855:21818,15187867:21819,15187871:21820,15187875:21821,15187877:21822,15187880:21823,15187884:21824,15187886:21825,15187887:21826,15187890:21827,15187898:21828,15187901:21829,15187902:21830,15187903:21831,15237255:21832,15237256:21833,15237258:21834,15237261:21835,15237262:21836,15237263:21837,15237265:21838,15237267:21839,15237268:21840,15237270:21841,15237277:21842,15237278:21843,15237279:21844,15237280:21845,15237284:21846,15237286:21847,15237292:21848,15237294:21849,15237296:21850,15237300:21851,15237301:21852,15237303:21853,15237305:21854,15237306:21855,15237308:21856,15237310:21857,15237504:21858,15237508:21859,15237536:21860,15237540:21861,15237542:21862,15237549:21863,15237553:21864,15237557:21865,15237761:21866,15237768:21867,15237774:21868,15237788:21869,15237790:21870,15237798:21871,15237799:21872,15237803:21873,15237816:21874,15237817:21875,15238024:21876,15238029:21877,15238031:21878,15238034:21879,15238036:21880,15238037:21881,15238039:21882,15238040:21883,15238048:21884,15238061:21885,15238062:21886,15238064:22049,15238066:22050,15238067:22051,15238070:22052,15238073:22053,15238074:22054,15238078:22055,15238275:22056,15238283:22057,15238294:22058,15238295:22059,15238296:22060,15238300:22061,15238302:22062,15238304:22063,15238308:22064,15238311:22065,15238316:22066,15238320:22067,15238325:22068,15238330:22069,15238332:22070,15238533:22071,15238535:22072,15238538:22073,15238540:22074,15238546:22075,15238551:22076,15238560:22077,15238561:22078,15238567:22079,15238568:22080,15238569:22081,15238573:22082,15238575:22083,15238583:22084,15238785:22085,15238800:22086,15238788:22087,15238789:22088,15238790:22089,15238795:22090,15238798:22091,15238806:22092,15238808:22093,15238811:22094,15238814:22095,15238818:22096,15238830:22097,15238834:22098,15238836:22099,15238843:22100,15239051:22101,15239043:22102,15239045:22103,15239050:22104,15239054:22105,15239055:22106,15239061:22107,15239063:22108,15239067:22109,15239069:22110,15239070:22111,15239073:22112,15239076:22113,15239083:22114,15239084:22115,15239088:22116,15239089:22117,15239090:22118,15239093:22119,15239094:22120,15239096:22121,15239097:22122,15239101:22123,15239103:22124,15239296:22125,15239299:22126,15239311:22127,15239315:22128,15239316:22129,15239321:22130,15239322:22131,15239325:22132,15239329:22133,15239330:22134,15239336:22135,15239346:22136,15239348:22137,15239354:22138,15239555:22139,15239556:22140,15239557:22141,15239558:22142,15239563:22305,15239566:22306,15239567:22307,15239569:22308,15239574:22309,15239580:22310,15239584:22311,15239587:22312,15239591:22313,15239597:22314,15239604:22315,15239611:22316,15239613:22317,15239615:22318,15239808:22319,15239809:22320,15239811:22321,15239812:22322,15239815:22323,15239817:22324,15239818:22325,15239822:22326,15239825:22327,15239828:22328,15239830:22329,15239832:22330,15239834:22331,15239835:22332,15239840:22333,15239841:22334,15239843:22335,15239844:22336,15239847:22337,15239848:22338,15239849:22339,15239850:22340,15239854:22341,15239856:22342,15239858:22343,15239860:22344,15239863:22345,15239866:22346,15239868:22347,15239870:22348,15239871:22349,15240070:22350,15240080:22351,15240085:22352,15240090:22353,15240096:22354,15240098:22355,15240100:22356,15240104:22357,15240106:22358,15240109:22359,15240111:22360,15240118:22361,15240119:22362,15240125:22363,15240126:22364,15240320:22365,15240321:22366,15240327:22367,15240328:22368,15240330:22369,15240331:22370,15240596:22371,15240347:22372,15240349:22373,15240350:22374,15240351:22375,15240353:22376,15240354:22377,15240364:22378,15240365:22379,15240366:22380,15240368:22381,15240371:22382,15240375:22383,15240378:22384,15240380:22385,15240381:22386,15240578:22387,15240579:22388,15240580:22389,15240583:22390,15240589:22391,15240590:22392,15240593:22393,15240597:22394,15240598:22395,15240599:22396,15240624:22397,15240632:22398,15240637:22561,15240639:22562,15240832:22563,15240834:22564,15240836:22565,15240838:22566,15240845:22567,15240850:22568,15240852:22569,15240853:22570,15240856:22571,15240857:22572,15240859:22573,15240860:22574,15240861:22575,15240870:22576,15240871:22577,15240873:22578,15240876:22579,15240894:22580,15240895:22581,15241088:22582,15241095:22583,15241097:22584,15241103:22585,15241104:22586,15241105:22587,15241108:22588,15241117:22589,15240595:22590,15241128:22591,15241130:22592,15241142:22593,15241144:22594,15241145:22595,15241148:22596,15241345:22597,15241350:22598,15241354:22599,15241359:22600,15241361:22601,15241365:22602,15241369:22603,15240877:22604,15241391:22605,15241401:22606,15241605:22607,15241607:22608,15241608:22609,15241610:22610,15241613:22611,15241615:22612,15241617:22613,15241618:22614,15241622:22615,15241624:22616,15241625:22617,15241626:22618,15241628:22619,15241632:22620,15241636:22621,15241637:22622,15241639:22623,15241642:22624,15241648:22625,15241651:22626,15241652:22627,15241654:22628,15241656:22629,15241660:22630,15241661:22631,15241857:22632,15241861:22633,15241874:22634,15241875:22635,15241877:22636,15241886:22637,15241894:22638,15241896:22639,15241897:22640,15241898:22641,15241903:22642,15241905:22643,15241908:22644,15241914:22645,15241917:22646,15241918:22647,15242112:22648,15242114:22649,15242119:22650,15242120:22651,15242124:22652,15242127:22653,15242131:22654,15242140:22817,15242151:22818,15242154:22819,15242159:22820,15242160:22821,15242161:22822,15242162:22823,15242167:22824,15242418:22825,15242170:22826,15242171:22827,15242173:22828,15242370:22829,15242371:22830,15242375:22831,15242380:22832,15242382:22833,15242384:22834,15242396:22835,15242398:22836,15242402:22837,15242403:22838,15242404:22839,15242405:22840,15242407:22841,15242410:22842,15242411:22843,15242415:22844,15242419:22845,15242420:22846,15242422:22847,15242431:22848,15242630:22849,15242639:22850,15242640:22851,15242641:22852,15242642:22853,15242643:22854,15242646:22855,15242649:22856,15242652:22857,15242653:22858,15242654:22859,15242655:22860,15242656:22861,15242657:22862,15242658:22863,15242660:22864,15242667:22865,15242671:22866,15242681:22867,15242682:22868,15242683:22869,15242685:22870,15242687:22871,15242881:22872,15242885:22873,15242886:22874,15242889:22875,15242891:22876,15242892:22877,15242895:22878,15242899:22879,15242904:22880,15242909:22881,15242911:22882,15242912:22883,15242914:22884,15242917:22885,15242919:22886,15242932:22887,15242934:22888,15242935:22889,15242936:22890,15242940:22891,15242941:22892,15242942:22893,15242943:22894,15243138:22895,15243143:22896,15243146:22897,15243147:22898,15243150:22899,15242925:22900,15243160:22901,15243162:22902,15243167:22903,15243168:22904,15243174:22905,15243176:22906,15243181:22907,15243187:22908,15243190:22909,15243196:22910,15243199:23073,15243392:23074,15243396:23075,15243397:23076,15243405:23077,15243406:23078,15243408:23079,15243409:23080,15243410:23081,15243416:23082,15243417:23083,15243419:23084,15243422:23085,15243425:23086,15243431:23087,15243433:23088,15243446:23089,15243448:23090,15243450:23091,15243452:23092,15243453:23093,15243648:23094,15243650:23095,15243654:23096,15243666:23097,15243667:23098,15243670:23099,15243671:23100,15243672:23101,15243673:23102,15243677:23103,15243680:23104,15243681:23105,15243682:23106,15243683:23107,15243684:23108,15243689:23109,15243692:23110,15243695:23111,15243701:23112,15243702:23113,15243703:23114,15243706:23115,15243917:23116,15243921:23117,15243926:23118,15243928:23119,15243930:23120,15243932:23121,15243937:23122,15243942:23123,15243943:23124,15243944:23125,15243949:23126,15243953:23127,15243955:23128,15243956:23129,15243957:23130,15243959:23131,15243960:23132,15243961:23133,15243967:23134,15244160:23135,15244161:23136,15244163:23137,15244165:23138,15244177:23139,15244178:23140,15244181:23141,15244183:23142,15244186:23143,15244188:23144,15244192:23145,15244195:23146,15244197:23147,15244199:23148,15243912:23149,15244218:23150,15244220:23151,15244221:23152,15244420:23153,15244421:23154,15244423:23155,15244427:23156,15244430:23157,15244431:23158,15244432:23159,15244435:23160,15244436:23161,15244441:23162,15244446:23163,15244447:23164,15244449:23165,15244451:23166,15244456:23329,15244462:23330,15244463:23331,15244465:23332,15244466:23333,15244473:23334,15244474:23335,15244476:23336,15244477:23337,15244478:23338,15244672:23339,15244675:23340,15244677:23341,15244685:23342,15244696:23343,15244701:23344,15244705:23345,15244708:23346,15244709:23347,15244719:23348,15244721:23349,15244722:23350,15244731:23351,15244931:23352,15244932:23353,15244933:23354,15244934:23355,15244935:23356,15244936:23357,15244937:23358,15244939:23359,15244940:23360,15244944:23361,15244947:23362,15244949:23363,15244951:23364,15244952:23365,15244953:23366,15244958:23367,15244960:23368,15244963:23369,15244967:23370,15244972:23371,15244973:23372,15244974:23373,15244977:23374,15244981:23375,15244990:23376,15244991:23377,15245185:23378,15245192:23379,15245193:23380,15245194:23381,15245198:23382,15245205:23383,15245206:23384,15245209:23385,15245210:23386,15245212:23387,15245215:23388,15245218:23389,15245219:23390,15245220:23391,15245226:23392,15245227:23393,15245229:23394,15245233:23395,15245235:23396,15245240:23397,15245242:23398,15245247:23399,15245441:23400,15245443:23401,15245446:23402,15245449:23403,15245450:23404,15245451:23405,15245456:23406,15245465:23407,15245458:23408,15245459:23409,15245460:23410,15245464:23411,15245466:23412,15245467:23413,15245468:23414,15245470:23415,15245471:23416,15245480:23417,15245485:23418,15245486:23419,15245488:23420,15245490:23421,15245493:23422,15245498:23585,15245500:23586,15245697:23587,15245699:23588,15245701:23589,15245704:23590,15245705:23591,15245706:23592,15245707:23593,15245710:23594,15245713:23595,15245717:23596,15245718:23597,15245720:23598,15245722:23599,15245724:23600,15245727:23601,15245728:23602,15245732:23603,15245737:23604,15245745:23605,15245753:23606,15245755:23607,15245952:23608,15245976:23609,15245978:23610,15245979:23611,15245980:23612,15245983:23613,15245984:23614,15245992:23615,15245994:23616,15246010:23617,15246013:23618,15246014:23619,15246208:23620,15246218:23621,15246219:23622,15246220:23623,15246221:23624,15246222:23625,15246225:23626,15246226:23627,15246227:23628,15246235:23629,15246238:23630,15246247:23631,15246255:23632,15246256:23633,15246257:23634,15246261:23635,15246263:23636,15246465:23637,15246470:23638,15246477:23639,15246478:23640,15246479:23641,15246485:23642,15246486:23643,15246488:23644,15246489:23645,15246490:23646,15246492:23647,15246496:23648,15246502:23649,15246503:23650,15246504:23651,15246512:23652,15246513:23653,15246514:23654,15246517:23655,15246521:23656,15246522:23657,15246526:23658,15246720:23659,15246722:23660,15246725:23661,15246726:23662,15246729:23663,15246735:23664,15246738:23665,15246743:23666,15246746:23667,15246747:23668,15246748:23669,15246753:23670,15246754:23671,15246755:23672,15246763:23673,15246766:23674,15246768:23675,15246771:23676,15246773:23677,15246778:23678,15246779:23841,15246780:23842,15246781:23843,15246985:23844,15246989:23845,15246992:23846,15246996:23847,15246997:23848,15247003:23849,15247004:23850,15247007:23851,15247008:23852,15247013:23853,15247024:23854,15247028:23855,15247029:23856,15247030:23857,15247031:23858,15247036:23859,15247252:23860,15247253:23861,15247254:23862,15247255:23863,15247256:23864,15247269:23865,15247273:23866,15247275:23867,15247277:23868,15247281:23869,15247283:23870,15247286:23871,15247289:23872,15247293:23873,15247295:23874,15247492:23875,15247493:23876,15247495:23877,15247503:23878,15247505:23879,15247506:23880,15247508:23881,15247509:23882,15247518:23883,15247520:23884,15247522:23885,15247524:23886,15247526:23887,15247531:23888,15247532:23889,15247535:23890,15247541:23891,15247543:23892,15247549:23893,15247550:23894,15247744:23895,15247747:23896,15247749:23897,15247751:23898,15247753:23899,15247757:23900,15247758:23901,15247763:23902,15247766:23903,15247767:23904,15247768:23905,15247772:23906,15247773:23907,15247777:23908,15247781:23909,15247783:23910,15247797:23911,15247798:23912,15247799:23913,15247801:23914,15247802:23915,15247803:23916,15247806:23917,15247807:23918,15248e3:23919,15248003:23920,15248006:23921,15248011:23922,15248015:23923,15248016:23924,15248018:23925,15248022:23926,15248023:23927,15248025:23928,15248031:23929,15248039:23930,15248041:23931,15248046:23932,15248047:23933,15248051:23934,15248054:24097,15248055:24098,15248059:24099,15248062:24100,15248259:24101,15248262:24102,15248264:24103,15248265:24104,15248266:24105,15248273:24106,15248275:24107,15248276:24108,15248277:24109,15248279:24110,15248285:24111,15248287:24112,15248300:24113,15248304:24114,15248308:24115,15248309:24116,15248310:24117,15248316:24118,15248319:24119,15248517:24120,15248518:24121,15248523:24122,15248529:24123,15248540:24124,15248542:24125,15248543:24126,15248522:24127,15248557:24128,15248560:24129,15248567:24130,15248572:24131,15248770:24132,15248771:24133,15248772:24134,15248773:24135,15248774:24136,15248776:24137,15248786:24138,15248787:24139,15248788:24140,15248793:24141,15248781:24142,15248798:24143,15248803:24144,15248813:24145,15248822:24146,15248824:24147,15248825:24148,15248828:24149,15248830:24150,15249025:24151,15249028:24152,15249029:24153,15249035:24154,15249037:24155,15249039:24156,15249044:24157,15249045:24158,15249052:24159,15249054:24160,15249055:24161,15249592:24162,15249593:24163,15249597:24164,15249598:24165,15249797:24166,15249799:24167,15249801:24168,15249803:24169,15249807:24170,15249809:24171,15249811:24172,15249812:24173,15249815:24174,15249816:24175,15249819:24176,15249821:24177,15249817:24178,15249827:24179,15249828:24180,15249830:24181,15249832:24182,15249833:24183,15249837:24184,15249843:24185,15249845:24186,15249846:24187,15249851:24188,15249854:24189,15250054:24190,15250055:24353,15250059:24354,15250064:24355,15250066:24356,15250067:24357,15250073:24358,15250075:24359,15250076:24360,15250084:24361,15250105:24362,15250106:24363,15250309:24364,15250310:24365,15250313:24366,15250315:24367,15250319:24368,15250326:24369,15250325:24370,15250329:24371,15250333:24372,15250337:24373,15250344:24374,15250348:24375,15250351:24376,15250352:24377,15250354:24378,15250357:24379,15250359:24380,15250360:24381,15250366:24382,15250367:24383,15250561:24384,15250563:24385,15250569:24386,15250578:24387,15250583:24388,15250587:24389,15250853:24390,15250857:24391,15250860:24392,15250862:24393,15250879:24394,15251074:24395,15251076:24396,15251080:24397,15251085:24398,15251088:24399,15251089:24400,15251093:24401,15251102:24402,15251103:24403,15251104:24404,15251110:24405,15251115:24406,15251116:24407,15251119:24408,15251122:24409,15251125:24410,15251127:24411,15251129:24412,15251131:24413,15251328:24414,15251333:24415,15251334:24416,15251335:24417,15251336:24418,15251338:24419,15251342:24420,15251345:24421,15251348:24422,15251349:24423,15251351:24424,15251353:24425,15251364:24426,15251365:24427,15251367:24428,15251372:24429,15251376:24430,15251132:24431,15251377:24432,15251378:24433,15251380:24434,15251389:24435,15251585:24436,15251588:24437,15251589:24438,15251590:24439,15251595:24440,15251601:24441,15251604:24442,15251606:24443,15251616:24444,15251617:24445,15251618:24446,15251619:24609,15251622:24610,15251623:24611,15251633:24612,15251635:24613,15251638:24614,15251639:24615,15251640:24616,15251641:24617,15251645:24618,15251840:24619,15251841:24620,15251851:24621,15251853:24622,15251854:24623,15251855:24624,15251860:24625,15251867:24626,15251868:24627,15251869:24628,15251870:24629,15251873:24630,15251874:24631,15251881:24632,15251884:24633,15251885:24634,15251887:24635,15251888:24636,15251889:24637,15251897:24638,15251898:24639,15251899:24640,15252098:24641,15252099:24642,15252105:24643,15252112:24644,15252114:24645,15252117:24646,15252122:24647,15252123:24648,15252125:24649,15252126:24650,15252130:24651,15252135:24652,15252137:24653,15252141:24654,15252142:24655,15252147:24656,15252149:24657,15252154:24658,15252155:24659,15252352:24660,15252353:24661,15252355:24662,15252356:24663,15252359:24664,15252367:24665,15252369:24666,15252372:24667,15252380:24668,15252392:24669,15252398:24670,15252400:24671,15252401:24672,15252407:24673,15252409:24674,15252410:24675,15252397:24676,15252608:24677,15252610:24678,15252615:24679,15252616:24680,15252623:24681,15252624:24682,15252630:24683,15252631:24684,15252632:24685,15252638:24686,15252640:24687,15252641:24688,15252643:24689,15252645:24690,15252647:24691,15252648:24692,15252652:24693,15252653:24694,15252654:24695,15252660:24696,15252661:24697,15252662:24698,15252663:24699,15252666:24700,15252864:24701,15252865:24702,15252867:24865,15252871:24866,15252879:24867,15252881:24868,15252882:24869,15252883:24870,15252884:24871,15252885:24872,15252888:24873,15252893:24874,15252894:24875,15252901:24876,15253149:24877,15253152:24878,15253153:24879,15253156:24880,15253157:24881,15253158:24882,15253173:24883,15253174:24884,15253176:24885,15253182:24886,15253376:24887,15253377:24888,15253382:24889,15253386:24890,15253387:24891,15253389:24892,15253392:24893,15253394:24894,15253395:24895,15253397:24896,15253408:24897,15253411:24898,15253412:24899,15253416:24900,15253422:24901,15253425:24902,15253429:24903,15253430:24904,15253435:24905,15253438:24906,15302786:24907,15302788:24908,15302792:24909,15302796:24910,15302808:24911,15302811:24912,15302824:24913,15302825:24914,15302831:24915,15302826:24916,15302828:24917,15302829:24918,15302835:24919,15302836:24920,15302839:24921,15302847:24922,15303043:24923,15303044:24924,15303052:24925,15303067:24926,15303069:24927,15303074:24928,15303078:24929,15303079:24930,15303084:24931,15303088:24932,15303092:24933,15303097:24934,15303301:24935,15303304:24936,15303307:24937,15303308:24938,15303310:24939,15303312:24940,15303317:24941,15303319:24942,15303320:24943,15303321:24944,15303323:24945,15303328:24946,15303329:24947,15303330:24948,15303333:24949,15303344:24950,15303346:24951,15303347:24952,15303348:24953,15303350:24954,15303357:24955,15303564:24956,15303358:24957,15303555:24958,15303556:25121,15303557:25122,15303559:25123,15303560:25124,15303573:25125,15303575:25126,15303576:25127,15303577:25128,15303580:25129,15303581:25130,15303583:25131,15303589:25132,15303570:25133,15303606:25134,15303595:25135,15303599:25136,15303600:25137,15303604:25138,15303614:25139,15303615:25140,15303808:25141,15303812:25142,15303813:25143,15303814:25144,15303816:25145,15303821:25146,15303824:25147,15303828:25148,15303830:25149,15303831:25150,15303832:25151,15303834:25152,15303836:25153,15303838:25154,15303840:25155,15303845:25156,15303842:25157,15303843:25158,15303847:25159,15303849:25160,15303854:25161,15303855:25162,15303857:25163,15303860:25164,15303862:25165,15303863:25166,15303865:25167,15303866:25168,15303868:25169,15303869:25170,15304067:25171,15304071:25172,15304072:25173,15304079:25174,15304083:25175,15304087:25176,15304089:25177,15304090:25178,15304091:25179,15304097:25180,15304100:25181,15304103:25182,15304109:25183,15304116:25184,15304121:25185,15304122:25186,15304123:25187,15304321:25188,15304323:25189,15304325:25190,15304326:25191,15304330:25192,15304334:25193,15304337:25194,15304339:25195,15304340:25196,15304341:25197,15304344:25198,15304350:25199,15304353:25200,15304358:25201,15304360:25202,15304364:25203,15304365:25204,15304366:25205,15304368:25206,15304369:25207,15304370:25208,15304371:25209,15304374:25210,15304379:25211,15304380:25212,15304381:25213,15304383:25214,15304578:25377,15304579:25378,15304581:25379,15304595:25380,15304596:25381,15304599:25382,15304601:25383,15304602:25384,15304606:25385,15304612:25386,15304613:25387,15304617:25388,15304618:25389,15304620:25390,15304621:25391,15304622:25392,15304623:25393,15304624:25394,15304625:25395,15304631:25396,15304633:25397,15304635:25398,15304637:25399,15304832:25400,15304833:25401,15304836:25402,15304837:25403,15304838:25404,15304839:25405,15304841:25406,15304842:25407,15304844:25408,15304848:25409,15304850:25410,15304851:25411,15304854:25412,15304856:25413,15304860:25414,15304861:25415,15304867:25416,15304868:25417,15304869:25418,15304870:25419,15304872:25420,15304878:25421,15304879:25422,15304880:25423,15304883:25424,15304885:25425,15304886:25426,15304888:25427,15304889:25428,15304890:25429,15304892:25430,15304894:25431,15305088:25432,15305090:25433,15305091:25434,15305094:25435,15305095:25436,15305098:25437,15305101:25438,15305102:25439,15305103:25440,15305105:25441,15305112:25442,15305113:25443,15305116:25444,15305117:25445,15305120:25446,15305121:25447,15305125:25448,15305127:25449,15305128:25450,15305129:25451,15305134:25452,15305135:25453,15305136:25454,15305141:25455,15305142:25456,15305143:25457,15305144:25458,15305145:25459,15305147:25460,15305148:25461,15305149:25462,15305151:25463,15305352:25464,15305353:25465,15305354:25466,15305357:25467,15305358:25468,15305362:25469,15305367:25470,15305369:25633,15305375:25634,15305376:25635,15305380:25636,15305381:25637,15305383:25638,15305384:25639,15305387:25640,15305391:25641,15305394:25642,15305398:25643,15305400:25644,15305402:25645,15305403:25646,15305404:25647,15305405:25648,15305407:25649,15305600:25650,15305601:25651,15305602:25652,15305603:25653,15305605:25654,15305606:25655,15305607:25656,15305608:25657,15305611:25658,15305612:25659,15305613:25660,15305614:25661,15305616:25662,15305619:25663,15305621:25664,15305623:25665,15305624:25666,15305625:25667,15305628:25668,15305629:25669,15305631:25670,15305632:25671,15305633:25672,15305635:25673,15305637:25674,15305639:25675,15305640:25676,15305644:25677,15305646:25678,15305648:25679,15305657:25680,15305659:25681,15305663:25682,15305856:25683,15305858:25684,15305864:25685,15305869:25686,15305873:25687,15305876:25688,15305877:25689,15305884:25690,15305885:25691,15305886:25692,15305887:25693,15305889:25694,15305892:25695,15305893:25696,15305895:25697,15305897:25698,15305898:25699,15305907:25700,15305908:25701,15305910:25702,15305911:25703,15306119:25704,15306120:25705,15306121:25706,15306128:25707,15306129:25708,15306130:25709,15306133:25710,15306135:25711,15306136:25712,15306138:25713,15306142:25714,15306148:25715,15306149:25716,15306151:25717,15306153:25718,15306154:25719,15306157:25720,15306159:25721,15306160:25722,15306161:25723,15306163:25724,15306164:25725,15306166:25726,15306170:25889,15306173:25890,15306175:25891,15306368:25892,15306369:25893,15306370:25894,15306376:25895,15306378:25896,15306379:25897,15306381:25898,15306383:25899,15306386:25900,15306389:25901,15306392:25902,15306395:25903,15306398:25904,15306401:25905,15306403:25906,15306404:25907,15306406:25908,15306408:25909,15306411:25910,15306420:25911,15306421:25912,15306422:25913,15306426:25914,15306409:25915,15306625:25916,15306628:25917,15306629:25918,15306630:25919,15306631:25920,15306633:25921,15306634:25922,15306635:25923,15306636:25924,15306637:25925,15306643:25926,15306649:25927,15306652:25928,15306654:25929,15306655:25930,15306658:25931,15306662:25932,15306663:25933,15306681:25934,15306679:25935,15306680:25936,15306682:25937,15306683:25938,15306685:25939,15306881:25940,15306882:25941,15306884:25942,15306888:25943,15306889:25944,15306893:25945,15306894:25946,15306895:25947,15306901:25948,15306902:25949,15306903:25950,15306911:25951,15306926:25952,15306927:25953,15306929:25954,15306930:25955,15306931:25956,15306932:25957,15306939:25958,15306943:25959,15306941:25960,15307139:25961,15307141:25962,15307144:25963,15307146:25964,15307148:25965,15307157:25966,15307161:25967,15307164:25968,15307167:25969,15307169:25970,15307171:25971,15307176:25972,15307179:25973,15307181:25974,15307182:25975,15307183:25976,15307185:25977,15307186:25978,15307396:25979,15307395:25980,15308216:25981,15308217:25982,15308222:26145,15308420:26146,15308424:26147,15308428:26148,15308429:26149,15308430:26150,15308445:26151,15308446:26152,15308447:26153,15308449:26154,15308454:26155,15308457:26156,15308459:26157,15308460:26158,15308468:26159,15308470:26160,15308474:26161,15308477:26162,15308479:26163,15308678:26164,15308680:26165,15308681:26166,15308683:26167,15308688:26168,15308689:26169,15308690:26170,15308691:26171,15308697:26172,15308698:26173,15308701:26174,15308702:26175,15308703:26176,15308704:26177,15308708:26178,15308710:26179,15308957:26180,15308958:26181,15308962:26182,15308964:26183,15308965:26184,15308966:26185,15308972:26186,15308977:26187,15308979:26188,15308983:26189,15308984:26190,15308985:26191,15308986:26192,15308988:26193,15308989:26194,15309185:26195,15309202:26196,15309204:26197,15309206:26198,15309207:26199,15309208:26200,15309217:26201,15309230:26202,15309236:26203,15309243:26204,15309244:26205,15309246:26206,15309247:26207,15309441:26208,15309442:26209,15309443:26210,15309444:26211,15309449:26212,15309457:26213,15309462:26214,15309466:26215,15309469:26216,15309471:26217,15309476:26218,15309477:26219,15309478:26220,15309481:26221,15309486:26222,15309487:26223,15309491:26224,15309498:26225,15309706:26226,15309714:26227,15054514:26228,15309720:26229,15309722:26230,15309725:26231,15309726:26232,15309727:26233,15309737:26234,15309743:26235,15309745:26236,15309754:26237,15309954:26238,15309955:26401,15309957:26402,15309961:26403,15309978:26404,15309979:26405,15309981:26406,15309985:26407,15309986:26408,15309987:26409,15309992:26410,15310001:26411,15310003:26412,15310209:26413,15310211:26414,15310218:26415,15310222:26416,15310223:26417,15310229:26418,15310231:26419,15310232:26420,15310234:26421,15310235:26422,15310243:26423,15310247:26424,15310250:26425,15310254:26426,15310259:26427,15310262:26428,15310263:26429,15310264:26430,15310267:26431,15310269:26432,15310271:26433,15310464:26434,15310473:26435,15310485:26436,15310486:26437,15310487:26438,15310489:26439,15310490:26440,15310494:26441,15310495:26442,15310498:26443,15310508:26444,15310510:26445,15310513:26446,15310514:26447,15310517:26448,15310518:26449,15310520:26450,15310521:26451,15310522:26452,15310524:26453,15310526:26454,15310527:26455,15310721:26456,15310724:26457,15310725:26458,15310727:26459,15310729:26460,15310730:26461,15310732:26462,15310733:26463,15310734:26464,15310736:26465,15310737:26466,15310740:26467,15310743:26468,15310744:26469,15310745:26470,15310749:26471,15310750:26472,15310752:26473,15310747:26474,15310753:26475,15310756:26476,15310767:26477,15310769:26478,15310772:26479,15310775:26480,15310776:26481,15310778:26482,15310983:26483,15310986:26484,15311001:26485,15310989:26486,15310990:26487,15310996:26488,15310998:26489,15311004:26490,15311006:26491,15311008:26492,15311011:26493,15311014:26494,15311019:26657,15311022:26658,15311023:26659,15311024:26660,15311026:26661,15311027:26662,15311029:26663,15311013:26664,15311038:26665,15311236:26666,15311239:26667,15311242:26668,15311249:26669,15311250:26670,15311251:26671,15311254:26672,15311255:26673,15311257:26674,15311258:26675,15311266:26676,15311267:26677,15311269:26678,15311270:26679,15311274:26680,15311276:26681,15311531:26682,15311533:26683,15311534:26684,15311536:26685,15311540:26686,15311543:26687,15311544:26688,15311546:26689,15311547:26690,15311551:26691,15311746:26692,15311749:26693,15311752:26694,15311756:26695,15311777:26696,15311779:26697,15311781:26698,15311782:26699,15311783:26700,15311786:26701,15311795:26702,15311798:26703,15312002:26704,15312007:26705,15312008:26706,15312017:26707,15312021:26708,15312022:26709,15312023:26710,15312026:26711,15312027:26712,15312028:26713,15312031:26714,15312034:26715,15312038:26716,15312039:26717,15312043:26718,15312049:26719,15312050:26720,15312051:26721,15312052:26722,15312053:26723,15312057:26724,15312058:26725,15312059:26726,15312060:26727,15312256:26728,15312257:26729,15312262:26730,15312263:26731,15312264:26732,15312269:26733,15312270:26734,15312276:26735,15312280:26736,15312281:26737,15312283:26738,15312284:26739,15312286:26740,15312287:26741,15312288:26742,15312539:26743,15312541:26744,15312543:26745,15312550:26746,15312560:26747,15312561:26748,15312562:26749,15312565:26750,15312569:26913,15312570:26914,15312573:26915,15312575:26916,15312771:26917,15312777:26918,15312787:26919,15312788:26920,15312793:26921,15312794:26922,15312796:26923,15312798:26924,15312807:26925,15312810:26926,15312811:26927,15312812:26928,15312816:26929,15312820:26930,15312821:26931,15312825:26932,15312829:26933,15312830:26934,15313026:26935,15313027:26936,15313028:26937,15313035:26938,15313036:26939,15313040:26940,15313041:26941,15313046:26942,15313054:26943,15313056:26944,15313058:26945,15313059:26946,15313060:26947,15313063:26948,15313069:26949,15313070:26950,15313075:26951,15313077:26952,15313078:26953,15313080:26954,15313287:26955,15313281:26956,15313284:26957,15313290:26958,15313291:26959,15313292:26960,15313294:26961,15313297:26962,15313300:26963,15313302:26964,15313309:26965,15313578:26966,15313580:26967,15313582:26968,15313583:26969,15313586:26970,15313588:26971,15313589:26972,15313590:26973,15313593:26974,15313595:26975,15313598:26976,15313599:26977,15313793:26978,15313795:26979,15313798:26980,15313800:26981,15313806:26982,15313808:26983,15313810:26984,15313813:26985,15313814:26986,15313815:26987,15313819:26988,15313820:26989,15313824:26990,15313828:26991,15313829:26992,15313831:26993,15313833:26994,15313836:26995,15313842:26996,15313843:26997,15313845:26998,15313849:26999,15313850:27e3,15313853:27001,15313855:27002,15314048:27003,15314049:27004,15314050:27005,15314051:27006,15314052:27169,15314053:27170,15314056:27171,15314057:27172,15314059:27173,15314060:27174,15314061:27175,15314062:27176,15314064:27177,15314066:27178,15314070:27179,15314073:27180,15314075:27181,15314076:27182,15314080:27183,15314086:27184,15314091:27185,15314093:27186,15314099:27187,15314100:27188,15314101:27189,15314103:27190,15314105:27191,15314106:27192,15314109:27193,15314312:27194,15314315:27195,15314316:27196,15314325:27197,15314326:27198,15314327:27199,15314331:27200,15314334:27201,15314337:27202,15314339:27203,15314341:27204,15314342:27205,15314344:27206,15314346:27207,15314347:27208,15314348:27209,15314349:27210,15314350:27211,15314355:27212,15314357:27213,15314359:27214,15314360:27215,15314361:27216,15314367:27217,15314560:27218,15314564:27219,15314565:27220,15314566:27221,15314567:27222,15314569:27223,15314570:27224,15314571:27225,15314573:27226,15314575:27227,15314576:27228,15314580:27229,15314586:27230,15314589:27231,15314590:27232,15314598:27233,15314599:27234,15314601:27235,15314604:27236,15314608:27237,15314609:27238,15314610:27239,15314615:27240,15314616:27241,15314619:27242,15314620:27243,15314622:27244,15314623:27245,15314817:27246,15314823:27247,15314824:27248,15314830:27249,15314832:27250,15314839:27251,15314840:27252,15314845:27253,15314847:27254,15314853:27255,15314855:27256,15314858:27257,15314859:27258,15314863:27259,15314867:27260,15314871:27261,15314872:27262,15314873:27425,15314874:27426,15314877:27427,15314879:27428,15315072:27429,15315074:27430,15315083:27431,15315087:27432,15315089:27433,15315094:27434,15315096:27435,15315097:27436,15315098:27437,15315100:27438,15315102:27439,15315106:27440,15315107:27441,15315110:27442,15315111:27443,15315112:27444,15315113:27445,15315114:27446,15315121:27447,15315125:27448,15315126:27449,15315127:27450,15315133:27451,15315329:27452,15315331:27453,15315332:27454,15315333:27455,15315337:27456,15315338:27457,15315342:27458,15315343:27459,15315344:27460,15315347:27461,15315348:27462,15315350:27463,15315352:27464,15315355:27465,15315357:27466,15315358:27467,15315359:27468,15315363:27469,15315369:27470,15315370:27471,15315356:27472,15315371:27473,15315368:27474,15315374:27475,15315376:27476,15315378:27477,15315381:27478,15315383:27479,15315387:27480,15315878:27481,15315890:27482,15315895:27483,15315897:27484,15316107:27485,15316098:27486,15316113:27487,15316119:27488,15316120:27489,15316124:27490,15316125:27491,15316126:27492,15316143:27493,15316144:27494,15316146:27495,15316147:27496,15316148:27497,15316154:27498,15316156:27499,15316357:27500,15316157:27501,15316354:27502,15316355:27503,15316359:27504,15316362:27505,15316371:27506,15316372:27507,15316383:27508,15316387:27509,15316386:27510,15316389:27511,15316393:27512,15316394:27513,15316395:27514,15316400:27515,15316406:27516,15316407:27517,15316411:27518,15316412:27681,15316414:27682,15316611:27683,15316612:27684,15316614:27685,15316618:27686,15316621:27687,15316622:27688,15316626:27689,15316627:27690,15316629:27691,15316630:27692,15316631:27693,15316632:27694,15316641:27695,15316650:27696,15316652:27697,15316654:27698,15316657:27699,15316661:27700,15316665:27701,15316668:27702,15316671:27703,15316867:27704,15316871:27705,15316873:27706,15316874:27707,15316884:27708,15316885:27709,15316886:27710,15316887:27711,15316890:27712,15316894:27713,15316895:27714,15316896:27715,15316901:27716,15316903:27717,15316905:27718,15316907:27719,15316910:27720,15316912:27721,15316915:27722,15316916:27723,15316926:27724,15317130:27725,15317122:27726,15317127:27727,15317134:27728,15317136:27729,15317137:27730,15317138:27731,15317141:27732,15317142:27733,15317145:27734,15317148:27735,15317149:27736,15317434:27737,15317435:27738,15317436:27739,15317632:27740,15317634:27741,15317635:27742,15317636:27743,15317637:27744,15317639:27745,15317646:27746,15317647:27747,15317654:27748,15317656:27749,15317659:27750,15317662:27751,15317668:27752,15317672:27753,15317676:27754,15317678:27755,15317679:27756,15317680:27757,15317683:27758,15317684:27759,15317685:27760,15317894:27761,15317896:27762,15317899:27763,15317909:27764,15317919:27765,15317924:27766,15317927:27767,15317932:27768,15317933:27769,15317934:27770,15317936:27771,15317937:27772,15317938:27773,15317941:27774,15317944:27937,15317951:27938,15318146:27939,15318147:27940,15318153:27941,15318159:27942,15318160:27943,15318161:27944,15318162:27945,15318164:27946,15318166:27947,15318167:27948,15318169:27949,15318170:27950,15318171:27951,15318175:27952,15318178:27953,15318182:27954,15318186:27955,15318187:27956,15318191:27957,15318193:27958,15318194:27959,15318196:27960,15318199:27961,15318201:27962,15318202:27963,15318204:27964,15318205:27965,15318207:27966,15318401:27967,15318403:27968,15318404:27969,15318405:27970,15318406:27971,15318407:27972,15318419:27973,15318421:27974,15318422:27975,15318423:27976,15318424:27977,15318426:27978,15318429:27979,15318430:27980,15318440:27981,15318441:27982,15318445:27983,15318446:27984,15318447:27985,15318448:27986,15318449:27987,15318451:27988,15318453:27989,15318458:27990,15318461:27991,15318671:27992,15318672:27993,15318673:27994,15318674:27995,15318676:27996,15318678:27997,15318679:27998,15318686:27999,15318689:28e3,15318690:28001,15318691:28002,15318693:28003,14909596:8513},s3=null,o3=s3,a3=null,l3=a3;Bx.UTF8_TO_JIS_TABLE=i3;Bx.UTF8_TO_JISX0212_TABLE=r3;Bx.JIS_TO_UTF8_TABLE=o3;Bx.JISX0212_TO_UTF8_TABLE=l3;var o9;function s8(){if(o9)return G;o9=1;var e=r8(),x=Bx;G.FALLBACK_CHARACTER=63;var E=G.HAS_TYPED=typeof Uint8Array<"u"&&typeof Uint16Array<"u",t=!1,A=!1;try{String.fromCharCode.apply(null,[97])==="a"&&(t=!0)}catch{}if(E)try{String.fromCharCode.apply(null,new Uint8Array([97]))==="a"&&(A=!0)}catch{}G.CAN_CHARCODE_APPLY=t,G.CAN_CHARCODE_APPLY_TYPED=A,G.APPLY_BUFFER_SIZE=65533,G.APPLY_BUFFER_SIZE_OK=null;var B=G.EncodingNames={UTF32:{order:0},UTF32BE:{alias:["UCS4"]},UTF32LE:null,UTF16:{order:1},UTF16BE:{alias:["UCS2"]},UTF16LE:null,BINARY:{order:2},ASCII:{order:3,alias:["ISO646","CP367"]},JIS:{order:4,alias:["ISO2022JP"]},UTF8:{order:5},EUCJP:{order:6},SJIS:{order:7,alias:["CP932","MSKANJI","WINDOWS31J"]},UNICODE:{order:8}},n={};G.EncodingAliases=n,G.EncodingOrders=function(){for(var r=n,s=e.objectKeys(B),o=[],a,l,h,c,F=0,p=s.length;F<p;F++)if(a=s[F],r[a]=a,l=B[a],l!=null&&(l.order!=null&&(o[o.length]=a),l.alias))for(h=0,c=l.alias.length;h<c;h++)r[l.alias[h]]=a;return o.sort(function(m,T){return B[m].order-B[T].order}),o}();function i(){if(x.JIS_TO_UTF8_TABLE===null){x.JIS_TO_UTF8_TABLE={};for(var r=e.objectKeys(x.UTF8_TO_JIS_TABLE),s=0,o=r.length,a,l;s<o;s++)a=r[s],l=x.UTF8_TO_JIS_TABLE[a],l>95&&(x.JIS_TO_UTF8_TABLE[l]=a|0);for(x.JISX0212_TO_UTF8_TABLE={},r=e.objectKeys(x.UTF8_TO_JISX0212_TABLE),o=r.length,s=0;s<o;s++)a=r[s],l=x.UTF8_TO_JISX0212_TABLE[a],x.JISX0212_TO_UTF8_TABLE[l]=a|0}}return G.init_JIS_TO_UTF8_TABLE=i,G}var z={};function C3(e){for(var x=0,E=e&&e.length,t;x<E;x++){if(t=e[x],t>255)return!1;if(t>=0&&t<=7||t===255)return!0}return!1}z.isBINARY=C3;function F3(e){for(var x=0,E=e&&e.length,t;x<E;x++)if(t=e[x],t>255||t>=128&&t<=255||t===27)return!1;return!0}z.isASCII=F3;function c3(e){for(var x=0,E=e&&e.length,t,A,B;x<E;x++){if(t=e[x],t>255||t>=128&&t<=255)return!1;if(t===27){if(x+2>=E)return!1;if(A=e[x+1],B=e[x+2],A===36){if(B===40||B===64||B===66)return!0}else{if(A===38&&B===64)return!0;if(A===40&&(B===66||B===73||B===74))return!0}}}return!1}z.isJIS=c3;function D3(e){for(var x=0,E=e&&e.length,t;x<E;x++)if(t=e[x],!(t<128)){if(t>255||t<142)return!1;if(t===142){if(x+1>=E||(t=e[++x],t<161||223<t))return!1}else if(t===143){if(x+2>=E||(t=e[++x],t<162||237<t)||(t=e[++x],t<161||254<t))return!1}else if(161<=t&&t<=254){if(x+1>=E||(t=e[++x],t<161||254<t))return!1}else return!1}return!0}z.isEUCJP=D3;function u3(e){for(var x=0,E=e&&e.length,t;x<E&&e[x]>128;)if(e[x++]>255)return!1;for(;x<E;x++)if(t=e[x],!(t<=128||161<=t&&t<=223)&&(t===160||t>239||x+1>=E||(t=e[++x],t<64||t===127||t>252)))return!1;return!0}z.isSJIS=u3;function f3(e){for(var x=0,E=e&&e.length,t;x<E;x++){if(t=e[x],t>255)return!1;if(!(t===9||t===10||t===13||t>=32&&t<=126))if(t>=194&&t<=223){if(x+1>=E||e[x+1]<128||e[x+1]>191)return!1;x++}else if(t===224){if(x+2>=E||e[x+1]<160||e[x+1]>191||e[x+2]<128||e[x+2]>191)return!1;x+=2}else if(t>=225&&t<=236||t===238||t===239){if(x+2>=E||e[x+1]<128||e[x+1]>191||e[x+2]<128||e[x+2]>191)return!1;x+=2}else if(t===237){if(x+2>=E||e[x+1]<128||e[x+1]>159||e[x+2]<128||e[x+2]>191)return!1;x+=2}else if(t===240){if(x+3>=E||e[x+1]<144||e[x+1]>191||e[x+2]<128||e[x+2]>191||e[x+3]<128||e[x+3]>191)return!1;x+=3}else if(t>=241&&t<=243){if(x+3>=E||e[x+1]<128||e[x+1]>191||e[x+2]<128||e[x+2]>191||e[x+3]<128||e[x+3]>191)return!1;x+=3}else if(t===244){if(x+3>=E||e[x+1]<128||e[x+1]>143||e[x+2]<128||e[x+2]>191||e[x+3]<128||e[x+3]>191)return!1;x+=3}else return!1}return!0}z.isUTF8=f3;function h3(e){var x=0,E=e&&e.length,t=null,A,B,n,i;if(E<2){if(e[0]>255)return!1}else{if(A=e[0],B=e[1],A===255&&B===254||A===254&&B===255)return!0;for(;x<E;x++)if(e[x]===0){t=x;break}else if(e[x]>255)return!1;if(t===null)return!1;if(n=e[t+1],n!==void 0&&n>0&&n<128||(i=e[t-1],i!==void 0&&i>0&&i<128))return!0}return!1}z.isUTF16=h3;function d3(e){var x=0,E=e&&e.length,t=null,A,B;if(E<2){if(e[0]>255)return!1}else{if(A=e[0],B=e[1],A===254&&B===255)return!0;for(;x<E;x++)if(e[x]===0){t=x;break}else if(e[x]>255)return!1;if(t===null)return!1;if(t%2===0)return!0}return!1}z.isUTF16BE=d3;function p3(e){var x=0,E=e&&e.length,t=null,A,B;if(E<2){if(e[0]>255)return!1}else{if(A=e[0],B=e[1],A===255&&B===254)return!0;for(;x<E;x++)if(e[x]===0){t=x;break}else if(e[x]>255)return!1;if(t===null)return!1;if(t%2!==0)return!0}return!1}z.isUTF16LE=p3;function m3(e){var x=0,E=e&&e.length,t=null,A,B,n,i,r,s;if(E<4){for(;x<E;x++)if(e[x]>255)return!1}else{if(A=e[0],B=e[1],n=e[2],i=e[3],A===0&&B===0&&n===254&&i===255||A===255&&B===254&&n===0&&i===0)return!0;for(;x<E;x++)if(e[x]===0&&e[x+1]===0&&e[x+2]===0){t=x;break}else if(e[x]>255)return!1;if(t===null)return!1;if(r=e[t+3],r!==void 0&&r>0&&r<=127)return e[t+2]===0&&e[t+1]===0;if(s=e[t-1],s!==void 0&&s>0&&s<=127)return e[t+1]===0&&e[t+2]===0}return!1}z.isUTF32=m3;function g3(e){for(var x=0,E=e&&e.length,t;x<E;x++)if(t=e[x],t<0||t>1114111)return!1;return!0}z.isUNICODE=g3;var _={},J=s8(),o8=r8(),a8=z,i0=Bx;function _3(e){for(var x=[],E=0,t=0,A=e&&e.length,B,n;t<A;t++){for(;e[t]===27;)if(e[t+1]===36&&e[t+2]===66||e[t+1]===36&&e[t+2]===64?E=1:e[t+1]===40&&e[t+2]===73?E=2:e[t+1]===36&&e[t+2]===40&&e[t+3]===68?(E=3,t++):E=0,t+=3,e[t]===void 0)return x;E===1?(B=e[t],n=e[++t],B&1?(B>>=1,B<47?B+=113:B-=79,n>95?n+=32:n+=31):(B>>=1,B<=47?B+=112:B-=80,n+=126),x[x.length]=B&255,x[x.length]=n&255):E===2?x[x.length]=e[t]+128&255:E===3?x[x.length]=J.FALLBACK_CHARACTER:x[x.length]=e[t]&255}return x}_.JISToSJIS=_3;function v3(e){for(var x=[],E=0,t=e&&e.length,A=0;A<t;A++){for(;e[A]===27;)if(e[A+1]===36&&e[A+2]===66||e[A+1]===36&&e[A+2]===64?E=1:e[A+1]===40&&e[A+2]===73?E=2:e[A+1]===36&&e[A+2]===40&&e[A+3]===68?(E=3,A++):E=0,A+=3,e[A]===void 0)return x;E===1?(x[x.length]=e[A]+128&255,x[x.length]=e[++A]+128&255):E===2?(x[x.length]=142,x[x.length]=e[A]+128&255):E===3?(x[x.length]=143,x[x.length]=e[A]+128&255,x[x.length]=e[++A]+128&255):x[x.length]=e[A]&255}return x}_.JISToEUCJP=v3;function T3(e){for(var x=[],E=0,t=e&&e.length,A=0,B,n,i=[27,40,66,27,36,66,27,40,73];A<t;A++)B=e[A],B>=161&&B<=223?(E!==2&&(E=2,x[x.length]=i[6],x[x.length]=i[7],x[x.length]=i[8]),x[x.length]=B-128&255):B>=128?(E!==1&&(E=1,x[x.length]=i[3],x[x.length]=i[4],x[x.length]=i[5]),B<<=1,n=e[++A],n<159?(B<319?B-=225:B-=97,n>126?n-=32:n-=31):(B<319?B-=224:B-=96,n-=126),x[x.length]=B&255,x[x.length]=n&255):(E!==0&&(E=0,x[x.length]=i[0],x[x.length]=i[1],x[x.length]=i[2]),x[x.length]=B&255);return E!==0&&(x[x.length]=i[0],x[x.length]=i[1],x[x.length]=i[2]),x}_.SJISToJIS=T3;function b3(e){for(var x=[],E=e&&e.length,t=0,A,B;t<E;t++)A=e[t],A>=161&&A<=223?(x[x.length]=142,x[x.length]=A):A>=129?(B=e[++t],A<<=1,B<159?(A<319?A-=97:A-=225,B>126?B+=96:B+=97):(A<319?A-=96:A-=224,B+=2),x[x.length]=A&255,x[x.length]=B&255):x[x.length]=A&255;return x}_.SJISToEUCJP=b3;function y3(e){for(var x=[],E=0,t=e&&e.length,A=0,B,n=[27,40,66,27,36,66,27,40,73,27,36,40,68];A<t;A++)B=e[A],B===142?(E!==2&&(E=2,x[x.length]=n[6],x[x.length]=n[7],x[x.length]=n[8]),x[x.length]=e[++A]-128&255):B===143?(E!==3&&(E=3,x[x.length]=n[9],x[x.length]=n[10],x[x.length]=n[11],x[x.length]=n[12]),x[x.length]=e[++A]-128&255,x[x.length]=e[++A]-128&255):B>142?(E!==1&&(E=1,x[x.length]=n[3],x[x.length]=n[4],x[x.length]=n[5]),x[x.length]=B-128&255,x[x.length]=e[++A]-128&255):(E!==0&&(E=0,x[x.length]=n[0],x[x.length]=n[1],x[x.length]=n[2]),x[x.length]=B&255);return E!==0&&(x[x.length]=n[0],x[x.length]=n[1],x[x.length]=n[2]),x}_.EUCJPToJIS=y3;function w3(e){for(var x=[],E=e&&e.length,t=0,A,B;t<E;t++)A=e[t],A===143?(x[x.length]=J.FALLBACK_CHARACTER,t+=2):A>142?(B=e[++t],A&1?(A>>=1,A<111?A+=49:A+=113,B>223?B-=96:B-=97):(A>>=1,A<=111?A+=48:A+=112,B-=2),x[x.length]=A&255,x[x.length]=B&255):A===142?x[x.length]=e[++t]&255:x[x.length]=A&255;return x}_.EUCJPToSJIS=w3;function hx(e){J.init_JIS_TO_UTF8_TABLE();for(var x=[],E=0,t=e&&e.length,A,B,n,i,r,s,o;E<t;E++)A=e[E],A>=161&&A<=223?(n=A-64,i=188|n>>6&3,r=128|n&63,x[x.length]=239,x[x.length]=i&255,x[x.length]=r&255):A>=128?(B=A<<1,n=e[++E],n<159?(B<319?B-=225:B-=97,n>126?n-=32:n-=31):(B<319?B-=224:B-=96,n-=126),B&=255,s=(B<<8)+n,o=i0.JIS_TO_UTF8_TABLE[s],o===void 0?x[x.length]=J.FALLBACK_CHARACTER:o<65535?(x[x.length]=o>>8&255,x[x.length]=o&255):(x[x.length]=o>>16&255,x[x.length]=o>>8&255,x[x.length]=o&255)):x[x.length]=e[E]&255;return x}_.SJISToUTF8=hx;function dx(e){J.init_JIS_TO_UTF8_TABLE();for(var x=[],E=0,t=e&&e.length,A,B,n,i,r,s,o,a;E<t;E++)A=e[E],A===142?(B=e[++E]-64,n=188|B>>6&3,i=128|B&63,x[x.length]=239,x[x.length]=n&255,x[x.length]=i&255):A===143?(r=e[++E]-128,s=e[++E]-128,o=(r<<8)+s,a=i0.JISX0212_TO_UTF8_TABLE[o],a===void 0?x[x.length]=J.FALLBACK_CHARACTER:a<65535?(x[x.length]=a>>8&255,x[x.length]=a&255):(x[x.length]=a>>16&255,x[x.length]=a>>8&255,x[x.length]=a&255)):A>=128?(o=(A-128<<8)+(e[++E]-128),a=i0.JIS_TO_UTF8_TABLE[o],a===void 0?x[x.length]=J.FALLBACK_CHARACTER:a<65535?(x[x.length]=a>>8&255,x[x.length]=a&255):(x[x.length]=a>>16&255,x[x.length]=a>>8&255,x[x.length]=a&255)):x[x.length]=e[E]&255;return x}_.EUCJPToUTF8=dx;function px(e){J.init_JIS_TO_UTF8_TABLE();for(var x=[],E=0,t=0,A=e&&e.length,B,n,i,r,s;t<A;t++){for(;e[t]===27;)if(e[t+1]===36&&e[t+2]===66||e[t+1]===36&&e[t+2]===64?E=1:e[t+1]===40&&e[t+2]===73?E=2:e[t+1]===36&&e[t+2]===40&&e[t+3]===68?(E=3,t++):E=0,t+=3,e[t]===void 0)return x;E===1?(r=(e[t]<<8)+e[++t],s=i0.JIS_TO_UTF8_TABLE[r],s===void 0?x[x.length]=J.FALLBACK_CHARACTER:s<65535?(x[x.length]=s>>8&255,x[x.length]=s&255):(x[x.length]=s>>16&255,x[x.length]=s>>8&255,x[x.length]=s&255)):E===2?(B=e[t]+64,n=188|B>>6&3,i=128|B&63,x[x.length]=239,x[x.length]=n&255,x[x.length]=i&255):E===3?(r=(e[t]<<8)+e[++t],s=i0.JISX0212_TO_UTF8_TABLE[r],s===void 0?x[x.length]=J.FALLBACK_CHARACTER:s<65535?(x[x.length]=s>>8&255,x[x.length]=s&255):(x[x.length]=s>>16&255,x[x.length]=s>>8&255,x[x.length]=s&255)):x[x.length]=e[t]&255}return x}_.JISToUTF8=px;function mx(e,x){for(var E=[],t=0,A=e&&e.length,B,n,i,r,s,o,a=x&&x.fallback;t<A;t++)B=e[t],B>=128?(B<=223?(r=[B,e[t+1]],s=(B<<8)+e[++t]):B<=239?(r=[B,e[t+1],e[t+2]],s=(B<<16)+(e[++t]<<8)+(e[++t]&255)):(r=[B,e[t+1],e[t+2],e[t+3]],s=(B<<24)+(e[++t]<<16)+(e[++t]<<8)+(e[++t]&255)),o=i0.UTF8_TO_JIS_TABLE[s],o==null?a?C8(E,r,a):E[E.length]=J.FALLBACK_CHARACTER:o<255?E[E.length]=o+128:(o>65536&&(o-=65536),n=o>>8,i=o&255,n&1?(n>>=1,n<47?n+=113:n-=79,i>95?i+=32:i+=31):(n>>=1,n<=47?n+=112:n-=80,i+=126),E[E.length]=n&255,E[E.length]=i&255)):E[E.length]=e[t]&255;return E}_.UTF8ToSJIS=mx;function gx(e,x){for(var E=[],t=0,A=e&&e.length,B,n,i,r,s=x&&x.fallback;t<A;t++)B=e[t],B>=128?(B<=223?(n=[B,e[t+1]],i=(B<<8)+e[++t]):B<=239?(n=[B,e[t+1],e[t+2]],i=(B<<16)+(e[++t]<<8)+(e[++t]&255)):(n=[B,e[t+1],e[t+2],e[t+3]],i=(B<<24)+(e[++t]<<16)+(e[++t]<<8)+(e[++t]&255)),r=i0.UTF8_TO_JIS_TABLE[i],r==null?(r=i0.UTF8_TO_JISX0212_TABLE[i],r==null?s?C8(E,n,s):E[E.length]=J.FALLBACK_CHARACTER:(E[E.length]=143,E[E.length]=(r>>8)-128&255,E[E.length]=(r&255)-128&255)):(r>65536&&(r-=65536),r<255?(E[E.length]=142,E[E.length]=r-128&255):(E[E.length]=(r>>8)-128&255,E[E.length]=(r&255)-128&255))):E[E.length]=e[t]&255;return E}_.UTF8ToEUCJP=gx;function _x(e,x){for(var E=[],t=0,A=e&&e.length,B=0,n,i,r,s,o=x&&x.fallback,a=[27,40,66,27,36,66,27,40,73,27,36,40,68];B<A;B++)n=e[B],n<128?(t!==0&&(t=0,E[E.length]=a[0],E[E.length]=a[1],E[E.length]=a[2]),E[E.length]=n&255):(n<=223?(i=[n,e[B+1]],r=(n<<8)+e[++B]):n<=239?(i=[n,e[B+1],e[B+2]],r=(n<<16)+(e[++B]<<8)+(e[++B]&255)):(i=[n,e[B+1],e[B+2],e[B+3]],r=(n<<24)+(e[++B]<<16)+(e[++B]<<8)+(e[++B]&255)),s=i0.UTF8_TO_JIS_TABLE[r],s==null?(s=i0.UTF8_TO_JISX0212_TABLE[r],s==null?(t!==0&&(t=0,E[E.length]=a[0],E[E.length]=a[1],E[E.length]=a[2]),o?C8(E,i,o):E[E.length]=J.FALLBACK_CHARACTER):(t!==3&&(t=3,E[E.length]=a[9],E[E.length]=a[10],E[E.length]=a[11],E[E.length]=a[12]),E[E.length]=s>>8&255,E[E.length]=s&255)):(s>65536&&(s-=65536),s<255?(t!==2&&(t=2,E[E.length]=a[6],E[E.length]=a[7],E[E.length]=a[8]),E[E.length]=s&255):(t!==1&&(t=1,E[E.length]=a[3],E[E.length]=a[4],E[E.length]=a[5]),E[E.length]=s>>8&255,E[E.length]=s&255)));return t!==0&&(E[E.length]=a[0],E[E.length]=a[1],E[E.length]=a[2]),E}_.UTF8ToJIS=_x;function $0(e){for(var x=[],E=0,t=e&&e.length,A,B;E<t;E++)A=e[E],A>=55296&&A<=56319&&E+1<t&&(B=e[E+1],B>=56320&&B<=57343&&(A=(A-55296)*1024+B-56320+65536,E++)),A<128?x[x.length]=A:A<2048?(x[x.length]=192|A>>6&31,x[x.length]=128|A&63):A<65536?(x[x.length]=224|A>>12&15,x[x.length]=128|A>>6&63,x[x.length]=128|A&63):A<2097152&&(x[x.length]=240|A>>18&15,x[x.length]=128|A>>12&63,x[x.length]=128|A>>6&63,x[x.length]=128|A&63);return x}_.UNICODEToUTF8=$0;function _0(e,x){for(var E=[],t=0,A=e&&e.length,B,n,i,r,s,o,a=x&&x.ignoreSurrogatePair;t<A;)n=e[t++],B=n>>4,B>=0&&B<=7?o=n:B===12||B===13?(i=e[t++],o=(n&31)<<6|i&63):B===14?(i=e[t++],r=e[t++],o=(n&15)<<12|(i&63)<<6|r&63):B===15&&(i=e[t++],r=e[t++],s=e[t++],o=(n&7)<<18|(i&63)<<12|(r&63)<<6|s&63),o<=65535||a?E[E.length]=o:(o-=65536,E[E.length]=(o>>10)+55296,E[E.length]=o%1024+56320);return E}_.UTF8ToUNICODE=_0;function be(e,x){var E;if(x&&x.bom){var t=x.bom;o8.isString(t)||(t="BE");var A,B;t.charAt(0).toUpperCase()==="B"?(A=[254,255],B=Yx(e)):(A=[255,254],B=l8(e)),E=[],E[0]=A[0],E[1]=A[1];for(var n=0,i=B.length;n<i;n++)E[E.length]=B[n]}else E=Yx(e);return E}_.UNICODEToUTF16=be;function Yx(e){for(var x=[],E=0,t=e&&e.length,A;E<t;)A=e[E++],A<=255?(x[x.length]=0,x[x.length]=A):A<=65535&&(x[x.length]=A>>8&255,x[x.length]=A&255);return x}_.UNICODEToUTF16BE=Yx;function l8(e){for(var x=[],E=0,t=e&&e.length,A;E<t;)A=e[E++],A<=255?(x[x.length]=A,x[x.length]=0):A<=65535&&(x[x.length]=A&255,x[x.length]=A>>8&255);return x}_.UNICODEToUTF16LE=l8;function ye(e){var x=[],E=0,t=e&&e.length,A,B;for(t>=2&&(e[0]===254&&e[1]===255||e[0]===255&&e[1]===254)&&(E=2);E<t;)A=e[E++],B=e[E++],A===0?x[x.length]=B:x[x.length]=(A&255)<<8|B&255;return x}_.UTF16BEToUNICODE=ye;function we(e){var x=[],E=0,t=e&&e.length,A,B;for(t>=2&&(e[0]===254&&e[1]===255||e[0]===255&&e[1]===254)&&(E=2);E<t;)A=e[E++],B=e[E++],B===0?x[x.length]=A:x[x.length]=(B&255)<<8|A&255;return x}_.UTF16LEToUNICODE=we;function Se(e){for(var x=[],E=0,t=e&&e.length,A=!1,B=!0,n,i;E<t;){if(n=e[E++],i=e[E++],B&&E===2){B=!1,n===254&&i===255?A=!1:n===255&&i===254?A=!0:(A=a8.isUTF16LE(e),E=0);continue}A?i===0?x[x.length]=n:x[x.length]=(i&255)<<8|n&255:n===0?x[x.length]=i:x[x.length]=(n&255)<<8|i&255}return x}_.UTF16ToUNICODE=Se;function S3(e){for(var x=[],E=0,t=e&&e.length,A=!1,B=!0,n,i;E<t;){if(n=e[E++],i=e[E++],B&&E===2){B=!1,n===254&&i===255?A=!1:n===255&&i===254?A=!0:(A=a8.isUTF16LE(e),E=0);continue}A?(x[x.length]=i,x[x.length]=n):(x[x.length]=n,x[x.length]=i)}return x}_.UTF16ToUTF16BE=S3;function O3(e,x){var E=!1,t;if(x&&x.bom){var A=x.bom;o8.isString(A)||(A="BE"),A.charAt(0).toUpperCase()==="B"?t=[254,255]:(t=[255,254],E=!0)}var B=[],n=e&&e.length,i=0;n>=2&&(e[0]===254&&e[1]===255||e[0]===255&&e[1]===254)&&(i=2),t&&(B[0]=t[0],B[1]=t[1]);for(var r,s;i<n;)r=e[i++],s=e[i++],E?(B[B.length]=s,B[B.length]=r):(B[B.length]=r,B[B.length]=s);return B}_.UTF16BEToUTF16=O3;function I3(e){for(var x=[],E=0,t=e&&e.length,A=!1,B=!0,n,i;E<t;){if(n=e[E++],i=e[E++],B&&E===2){B=!1,n===254&&i===255?A=!1:n===255&&i===254?A=!0:(A=a8.isUTF16LE(e),E=0);continue}A?(x[x.length]=n,x[x.length]=i):(x[x.length]=i,x[x.length]=n)}return x}_.UTF16ToUTF16LE=I3;function L3(e,x){var E=!1,t;if(x&&x.bom){var A=x.bom;o8.isString(A)||(A="BE"),A.charAt(0).toUpperCase()==="B"?t=[254,255]:(t=[255,254],E=!0)}var B=[],n=e&&e.length,i=0;n>=2&&(e[0]===254&&e[1]===255||e[0]===255&&e[1]===254)&&(i=2),t&&(B[0]=t[0],B[1]=t[1]);for(var r,s;i<n;)r=e[i++],s=e[i++],E?(B[B.length]=r,B[B.length]=s):(B[B.length]=s,B[B.length]=r);return B}_.UTF16LEToUTF16=L3;function Oe(e){var x=[],E=0,t=e&&e.length,A,B;for(t>=2&&(e[0]===254&&e[1]===255||e[0]===255&&e[1]===254)&&(E=2);E<t;)A=e[E++],B=e[E++],x[x.length]=B,x[x.length]=A;return x}_.UTF16BEToUTF16LE=Oe;function N3(e){return Oe(e)}_.UTF16LEToUTF16BE=N3;function k3(e,x){return _x($0(e),x)}_.UNICODEToJIS=k3;function M3(e){return _0(px(e))}_.JISToUNICODE=M3;function $3(e,x){return gx($0(e),x)}_.UNICODEToEUCJP=$3;function U3(e){return _0(dx(e))}_.EUCJPToUNICODE=U3;function P3(e,x){return mx($0(e),x)}_.UNICODEToSJIS=P3;function R3(e){return _0(hx(e))}_.SJISToUNICODE=R3;function eE(e,x){return be(_0(e),x)}_.UTF8ToUTF16=eE;function tE(e){return $0(Se(e))}_.UTF16ToUTF8=tE;function AE(e){return Yx(_0(e))}_.UTF8ToUTF16BE=AE;function BE(e){return $0(ye(e))}_.UTF16BEToUTF8=BE;function nE(e){return l8(_0(e))}_.UTF8ToUTF16LE=nE;function iE(e){return $0(we(e))}_.UTF16LEToUTF8=iE;function j3(e,x){return eE(px(e),x)}_.JISToUTF16=j3;function V3(e,x){return _x(tE(e),x)}_.UTF16ToJIS=V3;function H3(e){return AE(px(e))}_.JISToUTF16BE=H3;function W3(e,x){return _x(BE(e),x)}_.UTF16BEToJIS=W3;function K3(e){return nE(px(e))}_.JISToUTF16LE=K3;function J3(e,x){return _x(iE(e),x)}_.UTF16LEToJIS=J3;function Y3(e,x){return eE(dx(e),x)}_.EUCJPToUTF16=Y3;function q3(e,x){return gx(tE(e),x)}_.UTF16ToEUCJP=q3;function z3(e){return AE(dx(e))}_.EUCJPToUTF16BE=z3;function G3(e,x){return gx(BE(e),x)}_.UTF16BEToEUCJP=G3;function X3(e){return nE(dx(e))}_.EUCJPToUTF16LE=X3;function Z3(e,x){return gx(iE(e),x)}_.UTF16LEToEUCJP=Z3;function Q3(e,x){return eE(hx(e),x)}_.SJISToUTF16=Q3;function x4(e,x){return mx(tE(e),x)}_.UTF16ToSJIS=x4;function E4(e){return AE(hx(e))}_.SJISToUTF16BE=E4;function e4(e,x){return mx(BE(e),x)}_.UTF16BEToSJIS=e4;function t4(e){return nE(hx(e))}_.SJISToUTF16LE=t4;function A4(e,x){return mx(iE(e),x)}_.UTF16LEToSJIS=A4;function C8(e,x,E){switch(E){case"html-entity":case"html-entity-hex":var t=_0(x,{ignoreSurrogatePair:!0})[0];if(t){e[e.length]=38,e[e.length]=35;var A=E.slice(-3)==="hex"?16:10;A===16&&(e[e.length]=120);for(var B=t.toString(A),n=0,i=B.length;n<i;n++)e[e.length]=B.charCodeAt(n);e[e.length]=59}}}var vx={};vx.HANKANA_TABLE={12289:65380,12290:65377,12300:65378,12301:65379,12443:65438,12444:65439,12449:65383,12450:65393,12451:65384,12452:65394,12453:65385,12454:65395,12455:65386,12456:65396,12457:65387,12458:65397,12459:65398,12461:65399,12463:65400,12465:65401,12467:65402,12469:65403,12471:65404,12473:65405,12475:65406,12477:65407,12479:65408,12481:65409,12483:65391,12484:65410,12486:65411,12488:65412,12490:65413,12491:65414,12492:65415,12493:65416,12494:65417,12495:65418,12498:65419,12501:65420,12504:65421,12507:65422,12510:65423,12511:65424,12512:65425,12513:65426,12514:65427,12515:65388,12516:65428,12517:65389,12518:65429,12519:65390,12520:65430,12521:65431,12522:65432,12523:65433,12524:65434,12525:65435,12527:65436,12530:65382,12531:65437,12539:65381,12540:65392};vx.HANKANA_SONANTS={12532:65395,12535:65436,12538:65382};vx.HANKANA_MARKS=[65438,65439];vx.ZENKANA_TABLE=[12290,12300,12301,12289,12539,12530,12449,12451,12453,12455,12457,12515,12517,12519,12483,12540,12450,12452,12454,12456,12458,12459,12461,12463,12465,12467,12469,12471,12473,12475,12477,12479,12481,12484,12486,12488,12490,12491,12492,12493,12494,12495,12498,12501,12504,12507,12510,12511,12512,12513,12514,12516,12518,12520,12521,12522,12523,12524,12525,12527,12531,12443,12444];const B4="encoding-japanese",n4="2.0.0",i4="Convert or detect character encoding in JavaScript",r4="src/index.js",s4=["encoding.js","encoding.min.js","encoding.min.js.map","src/*"],o4={build:"npm run compile && npm run minify",compile:"browserify src/index.js -o encoding.js -s Encoding -p [ bannerify --file src/banner.js ] --no-bundle-external --bare",minify:`uglifyjs encoding.js -o encoding.min.js --source-map "url='encoding.min.js.map'" --comments -c -m -b ascii_only=true,beautify=false`,test:"./node_modules/.bin/eslint . && npm run build && mocha tests/test",watch:"watchify src/index.js -o encoding.js -s Encoding -p [ bannerify --file src/banner.js ] --no-bundle-external --bare --poll=300 -v"},a4={node:">=8.10.0"},l4={type:"git",url:"https://github.com/polygonplanet/encoding.js.git"},C4="polygonplanet <polygon.planet.aqua@gmail.com>",F4="MIT",c4={url:"https://github.com/polygonplanet/encoding.js/issues"},D4="https://github.com/polygonplanet/encoding.js",u4=["base64","charset","convert","detect","encoding","euc-jp","eucjp","iconv","iso-2022-jp","japanese","jis","shift_jis","sjis","unicode","urldecode","urlencode","utf-16","utf-32","utf-8"],f4={},h4={bannerify:"^1.0.1",browserify:"^17.0.0",eslint:"^8.12.0",mocha:"^9.2.2","package-json-versionify":"^1.0.4","power-assert":"^1.6.1","uglify-js":"^3.15.3",uglifyify:"^5.0.2",watchify:"^4.0.0"},d4={transform:["package-json-versionify"]},p4={name:B4,version:n4,description:i4,main:r4,files:s4,scripts:o4,engines:a4,repository:l4,author:C4,license:F4,bugs:c4,homepage:D4,keywords:u4,dependencies:f4,devDependencies:h4,browserify:d4};var m4=s8(),y=r8(),a9=z,l9=_,j0=vx,g4=p4.version,C9=Object.prototype.hasOwnProperty,Vx={version:g4,orders:m4.EncodingOrders,detect:function(e,x){if(e==null||e.length===0)return!1;y.isObject(x)&&!y.isArray(x)&&(x=x.encoding),y.isString(e)&&(e=y.stringToBuffer(e)),x==null?x=Vx.orders:y.isString(x)&&(x=x.toUpperCase(),x==="AUTO"?x=Vx.orders:~x.indexOf(",")?x=x.split(/\s*,\s*/):x=[x]);for(var E=x.length,t,A,B,n=0;n<E;n++)if(t=x[n],A=y.canonicalizeEncodingName(t),!!A){if(B="is"+A,!C9.call(a9,B))throw new Error("Undefined encoding: "+t);if(a9[B](e))return A}return!1},convert:function(e,x,E){var t,A,B;y.isObject(x)?(B=x,E=B.from,x=B.to,B.type&&(A=B.type)):B={},y.isString(e)?(A=A||"string",e=y.stringToBuffer(e)):(e==null||e.length===0)&&(e=[]);var n;E!=null&&y.isString(E)&&E.toUpperCase()!=="AUTO"&&!~E.indexOf(",")?n=y.canonicalizeEncodingName(E):n=Vx.detect(e);var i=y.canonicalizeEncodingName(x),r=n+"To"+i;switch(C9.call(l9,r)?t=l9[r](e,B):t=e,(""+A).toLowerCase()){case"string":return y.codeToString_fast(t);case"arraybuffer":return y.codeToBuffer(t);default:return y.bufferToCode(t)}},urlEncode:function(e){y.isString(e)&&(e=y.stringToBuffer(e));for(var x=y.stringToCode("0123456789ABCDEF"),E=[],t=0,A=e&&e.length,B;t<A;t++){if(B=e[t],B>255)return encodeURIComponent(y.codeToString_fast(e));B>=97&&B<=122||B>=65&&B<=90||B>=48&&B<=57||B===33||B>=39&&B<=42||B===45||B===46||B===95||B===126?E[E.length]=B:(E[E.length]=37,B<16?(E[E.length]=48,E[E.length]=x[B]):(E[E.length]=x[B>>4&15],E[E.length]=x[B&15]))}return y.codeToString_fast(E)},urlDecode:function(e){for(var x=[],E=0,t=e&&e.length,A;E<t;)A=e.charCodeAt(E++),A===37?x[x.length]=parseInt(e.charAt(E++)+e.charAt(E++),16):x[x.length]=A;return x},base64Encode:function(e){return y.isString(e)&&(e=y.stringToBuffer(e)),y.base64encode(e)},base64Decode:function(e){return y.base64decode(e)},codeToString:y.codeToString_fast,stringToCode:y.stringToCode,toHankakuCase:function(e){var x=!1;y.isString(e)&&(x=!0,e=y.stringToBuffer(e));for(var E=[],t=e&&e.length,A=0,B;A<t;)B=e[A++],B>=65281&&B<=65374&&(B-=65248),E[E.length]=B;return x?y.codeToString_fast(E):E},toZenkakuCase:function(e){var x=!1;y.isString(e)&&(x=!0,e=y.stringToBuffer(e));for(var E=[],t=e&&e.length,A=0,B;A<t;)B=e[A++],B>=33&&B<=126&&(B+=65248),E[E.length]=B;return x?y.codeToString_fast(E):E},toHiraganaCase:function(e){var x=!1;y.isString(e)&&(x=!0,e=y.stringToBuffer(e));for(var E=[],t=e&&e.length,A=0,B;A<t;)B=e[A++],B>=12449&&B<=12534?B-=96:B===12535?(E[E.length]=12431,B=12443):B===12538&&(E[E.length]=12434,B=12443),E[E.length]=B;return x?y.codeToString_fast(E):E},toKatakanaCase:function(e){var x=!1;y.isString(e)&&(x=!0,e=y.stringToBuffer(e));for(var E=[],t=e&&e.length,A=0,B;A<t;)B=e[A++],B>=12353&&B<=12438&&((B===12431||B===12434)&&A<t&&e[A]===12443?(B=B===12431?12535:12538,A++):B+=96),E[E.length]=B;return x?y.codeToString_fast(E):E},toHankanaCase:function(e){var x=!1;y.isString(e)&&(x=!0,e=y.stringToBuffer(e));for(var E=[],t=e&&e.length,A=0,B,n,i;A<t;){if(B=e[A++],B>=12289&&B<=12540&&(i=j0.HANKANA_TABLE[B],i!==void 0)){E[E.length]=i;continue}B===12532||B===12535||B===12538?(E[E.length]=j0.HANKANA_SONANTS[B],E[E.length]=65438):B>=12459&&B<=12489?(E[E.length]=j0.HANKANA_TABLE[B-1],E[E.length]=65438):B>=12495&&B<=12509?(n=B%3,E[E.length]=j0.HANKANA_TABLE[B-n],E[E.length]=j0.HANKANA_MARKS[n-1]):E[E.length]=B}return x?y.codeToString_fast(E):E},toZenkanaCase:function(e){var x=!1;y.isString(e)&&(x=!0,e=y.stringToBuffer(e));var E=[],t=e&&e.length,A=0,B,n,i;for(A=0;A<t;A++)B=e[A],B>65376&&B<65440&&(n=j0.ZENKANA_TABLE[B-65377],A+1<t&&(i=e[A+1],i===65438&&B===65395?(n=12532,A++):i===65438&&B===65436?(n=12535,A++):i===65438&&B===65382?(n=12538,A++):i===65438&&(B>65397&&B<65413||B>65417&&B<65423)?(n++,A++):i===65439&&B>65417&&B<65423&&(n+=2,A++)),B=n),E[E.length]=B;return x?y.codeToString_fast(E):E},toHankakuSpace:function(e){if(y.isString(e))return e.replace(/\u3000/g," ");for(var x=[],E=e&&e.length,t=0,A;t<E;)A=e[t++],A===12288&&(A=32),x[x.length]=A;return x},toZenkakuSpace:function(e){if(y.isString(e))return e.replace(/\u0020/g,"　");for(var x=[],E=e&&e.length,t=0,A;t<E;)A=e[t++],A===32&&(A=12288),x[x.length]=A;return x}},u0=Vx,UE={},_4={get exports(){return UE},set exports(e){UE=e}};/*! streamsaver. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */(function(e){((x,E)=>{e.exports=E()})("streamSaver",()=>{const x=typeof window=="object"?window:this;x.HTMLElement;let E=null,t=!1;const A=c=>{try{c()}catch{}},B=x.WebStreamsPolyfill||{},n=x.isSecureContext;let i=/constructor/i.test(x.HTMLElement)||!!x.safari||!!x.WebKitPoint;const r=n||"MozAppearance"in document.documentElement.style?"iframe":"navigate",s={createWriteStream:h,WritableStream:x.WritableStream||B.WritableStream,supported:!0,version:{full:"2.0.5",major:2,minor:0,dot:5},mitm:"https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0"};function o(c){if(!c)throw new Error("meh");const F=document.createElement("iframe");return F.hidden=!0,F.src=c,F.loaded=!1,F.name="iframe",F.isIframe=!0,F.postMessage=(...p)=>F.contentWindow.postMessage(...p),F.addEventListener("load",()=>{F.loaded=!0},{once:!0}),document.body.appendChild(F),F}function a(c){const F="width=200,height=100",p=document.createDocumentFragment(),m={frame:x.open(c,"popup",F),loaded:!1,isIframe:!1,isPopup:!0,remove(){m.frame.close()},addEventListener(...C){p.addEventListener(...C)},dispatchEvent(...C){p.dispatchEvent(...C)},removeEventListener(...C){p.removeEventListener(...C)},postMessage(...C){m.frame.postMessage(...C)}},T=C=>{C.source===m.frame&&(m.loaded=!0,x.removeEventListener("message",T),m.dispatchEvent(new Event("load")))};return x.addEventListener("message",T),m}try{new Response(new ReadableStream),n&&!("serviceWorker"in navigator)&&(i=!0)}catch{i=!0}A(()=>{const{readable:c}=new TransformStream,F=new MessageChannel;F.port1.postMessage(c,[c]),F.port1.close(),F.port2.close(),t=!0,Object.defineProperty(s,"TransformStream",{configurable:!1,writable:!1,value:TransformStream})});function l(){E||(E=n?o(s.mitm):a(s.mitm))}function h(c,F,p){let m={size:null,pathname:null,writableStrategy:void 0,readableStrategy:void 0},T=0,C=null,d=null,w=null;if(Number.isFinite(F)?([p,F]=[F,p],m.size=p,m.writableStrategy=F):F&&F.highWaterMark?(m.size=p,m.writableStrategy=F):m=F||{},!i){l(),d=new MessageChannel,c=encodeURIComponent(c.replace(/\//g,":")).replace(/['()]/g,escape).replace(/\*/g,"%2A");const L={transferringReadable:t,pathname:m.pathname||Math.random().toString().slice(-6)+"/"+c,headers:{"Content-Type":"application/octet-stream; charset=utf-8","Content-Disposition":"attachment; filename*=UTF-8''"+c}};m.size&&(L.headers["Content-Length"]=m.size);const $=[L,"*",[d.port2]];if(t){const u=r==="iframe"?void 0:{transform(v,g){if(!(v instanceof Uint8Array))throw new TypeError("Can only write Uint8Arrays");T+=v.length,g.enqueue(v),C&&(location.href=C,C=null)},flush(){C&&(location.href=C)}};w=new s.TransformStream(u,m.writableStrategy,m.readableStrategy);const f=w.readable;d.port1.postMessage({readableStream:f},[f])}d.port1.onmessage=u=>{u.data.download?r==="navigate"?(E.remove(),E=null,T?location.href=u.data.download:C=u.data.download):(E.isPopup&&(E.remove(),E=null,r==="iframe"&&o(s.mitm)),o(u.data.download)):u.data.abort&&(I=[],d.port1.postMessage("abort"),d.port1.onmessage=null,d.port1.close(),d.port2.close(),d=null)},E.loaded?E.postMessage(...$):E.addEventListener("load",()=>{E.postMessage(...$)},{once:!0})}let I=[];return!i&&w&&w.writable||new s.WritableStream({write(L){if(!(L instanceof Uint8Array))throw new TypeError("Can only write Uint8Arrays");if(i){I.push(L);return}d.port1.postMessage(L),T+=L.length,C&&(location.href=C,C=null)},close(){if(i){const L=new Blob(I,{type:"application/octet-stream; charset=utf-8"}),$=document.createElement("a");$.href=URL.createObjectURL(L),$.download=c,$.click()}else d.port1.postMessage("end")},abort(){I=[],d.port1.postMessage("abort"),d.port1.onmessage=null,d.port1.close(),d.port2.close(),d=null}},m.writableStrategy)}return s})})(_4);const v4=UE;lx(!0);const T4=document.querySelectorAll("*[title]");[...T4].map(e=>new k0(e));let Ie=!1;const xx=Ge.parse(window.location.hash),S=new A5("#wml"),b4=[".mid",".midi",".mld",".mml",".mms",".mmi",".mp2mml"];document.addEventListener("DOMContentLoaded",async()=>{S.setLoop(document.getElementById("playerloop").checked),S.setTempoRate(document.getElementById("tempo").value),S.setMasterVolume(document.getElementById("volume").value*16383),S.setWebMidiLink("https://logue.dev/sf2synth.js/?soundfont=Yamaha XG Sound Set Ver.2.0.sf2","wml"),[].slice.call(document.querySelectorAll("#control-tab button")).forEach(t=>{const A=new L0(t);t.addEventListener("click",B=>{B.preventDefault(),A.show()})});const x=document.getElementById("zips");document.getElementById("files").addEventListener("change",()=>t0()),x.addEventListener("change",t=>F9(t.target.value)),xx.zip&&!PE?x.value=xx.zip:S4(),F9(x.value);const E=document.getElementById("player");E.addEventListener("drop",t=>{const A=t.dataTransfer;A.files.length&&(t.preventDefault(),t.stopPropagation(),y4(A.files[0])),E.classList.remove("bg-info")},!1),E.addEventListener("dragover",t=>{t.preventDefault(),t.stopPropagation(),E.classList.add("bg-info")},!1),E.addEventListener("dragleave",t=>{t.preventDefault(),t.stopPropagation(),E.classList.remove("bg-info")},!1),document.getElementById("tempo").addEventListener("change",t=>{const A=t.target.value;S.setTempoRate(A),document.getElementById("tempo_value").innerText=A}),document.getElementById("volume").addEventListener("change",t=>{const A=t.target.value;S.setMasterVolume(A*16383),document.getElementById("volume_value").innerText=A}),document.getElementById("prev").addEventListener("click",()=>{const t=document.getElementById("files"),A=t.selectedIndex;A===t.options.length?t.selectedIndex=t.options.length:t.selectedIndex=A-1,t0()}),document.getElementById("next").addEventListener("click",()=>{const t=document.getElementById("files"),A=t.selectedIndex;A===t.options.length?t.selectedIndex=0:t.selectedIndex=A+1,t0()}),document.getElementById("play").addEventListener("click",()=>{S.pause?S.play():S.stop()}),document.getElementById("stop").addEventListener("click",()=>{t0(),history.pushState("",document.title,window.location.pathname),setTimeout(()=>{S.stop()},51)}),document.getElementById("panic").addEventListener("click",()=>S.sendAllSoundOff()),document.getElementById("reset").addEventListener("click",()=>S.sendGmReset()),document.getElementById("download").addEventListener("click",()=>{const t=document.getElementById("files"),B=t.querySelectorAll("option")[t.selectedIndex].dataset.midiplayerFilename,n=new Uint8Array(t.zip.decompress(B)),r=v4.createWriteStream(u0.convert(B,"UNICODE","AUTO"),{size:n.byteLength}).getWriter();r.write(n),r.close()}),document.getElementById("synth").addEventListener("change",t=>{S.stop(),S.setWebMidiLink(t.target.value,"wml")}),lx(!1)});function y4(e){const x=document.getElementById("info");x.innerText="Now Loading...";const E=document.createElement("div");E.className="progress";const t=document.createElement("div");t.className="progress-bar progress-warning",E.appendChild(t),x.appendChild(E);const A=new FileReader;S.sendGmReset(),A.onload=B=>{const n=new Uint8Array(B.target.result);Le(e.name,n),x.removeChild(E),x.innerHtml=`Now Playing "${u0.convert(e.name,"UNICODE","AUTO")}".`,x.classList.remove("alert-warning"),x.classList.add("alert-success")},A.onloadstart=()=>x.classList.remove("alert-success"),x.classList.add("alert-warning"),A.onprogress=B=>{if(B.lengthComputable){const n=B.loaded/B.total|0;t.style.width=n+"%",t.innerText=n+" %"}},A.readAsArrayBuffer(e)}let PE=!1;async function F9(e){lx(!0);const x=document.getElementById("files"),E=i=>{const r=new Uint8Array(i);for(;x.firstChild;)x.removeChild(x.firstChild);x.zip=new Zlib.Unzip(r),x.zip.getFilenames().sort().forEach((l,h)=>{const c=l.slice(l.lastIndexOf(".")).toLowerCase();if(c==="/"||!b4.includes(c))return;const F=document.createElement("option");F.textContent=u0.convert(l,"UNICODE","AUTO"),F.value=l,x.appendChild(F)});const o=x.selectedIndex;let a=o;for(;o==a;)a=~~(x.length*Math.random());x.selectedIndex=a,lx(!1),xx.file&&!PE&&(x.value=xx.file,t0()),PE=!0},t=await window.caches.open("zips"),A=await t.match(x.value);if(A){E(await A.arrayBuffer());return}const B=await fetch(e,{method:"GET",mode:"no-cors",credentials:"include"});if(!B.ok)throw new Error("Network response was not ok.");const n=B.clone();t&&t.put(e,n),E(await B.arrayBuffer()),lx(!1)}function t0(){const e=document.getElementById("files"),x=e.value;if(x){Le(x,e.zip.decompress(x));const E=u0.convert(x,"UNICODE","AUTO");document.getElementById("info").innerHTML=`Now playing "${E}".`,document.title=`${E} - ${document.getElementById("zips").value} / Standard MIDI Player for Web`;const t=`#zip=${encodeURIComponent(document.getElementById("zips").value)}&file=${encodeURIComponent(x)}`;if(document.getElementById("music_title").value=u0.convert(S.getSequenceName(1),"UNICODE","AUTO"),document.getElementById("copyright").value=u0.convert(S.getCopyright(),"UNICODE","AUTO"),window.history&&window.history.pushState)return window.history.pushState(document.title,null,t),!1;document.querySelector('link[rel="canonical"]').setAttribute("href",`${location.href}/${t}`),xx.zip&&xx.file&&S.play()}}function Le(e,x){switch(S.stop(),S.sendAllSoundOff(),S.sendGmReset(),document.getElementById("music_title").value="",document.getElementById("copyright").value="",document.getElementById("text_event").value="",document.title="SMF Player",e.split(".").pop().toLowerCase()){case"midi":case"mid":S.loadMidiFile(x);break;case"mld":S.loadMldFile(x);break;case"ms2mml":S.loadMs2MmlFile(x);break;case"mms":S.loadMakiMabiSequenceFile(x);break;case"mml":S.load3MleFile(x);break;case"mmi":S.loadMabiIccoFile(x);break}S.setMasterVolume(document.getElementById("volume").value*16383),S.play()}function w4(){const e=document.getElementById("files");e.selectedIndex=~~(e.length*Math.random()),t0()}function lx(e=!0){document.querySelectorAll("input, button, select").forEach(x=>x.disabled=e)}function S4(){const e=document.getElementById("zips");e.selectedIndex=~~(e.length*Math.random()),t0()}window.onmessage=e=>{const x=e.data,E=document.getElementById("files").selectedIndex||0,t=document.getElementById("play"),A=document.getElementById("info");switch(x){case"endoftrack":if(S.stop(),t.innerHTML='<em class="bi bi-play-fill"></em>',t.classList.add("btn-primary"),t.classList.remove("btn-success"),document.getElementById("random").chcked)w4();else{const B=document.getElementById("files");E!==0&&(E==B.options.length?B.selectedIndex=0:B.selectedIndex=E+1,t0())}break;case"progress":A.innerText="Loading soundfont...";break;case"link,ready":Ie=!0,document.getElementById("random").checked&&t0(),A.classList.add("alert-success"),A.classList.remove("alert-warning"),A.innerText="Ready.",document.querySelectorAll("input, button, select").forEach(B=>B.disabled="");break}};let c9="",D9="",bE="";setInterval(()=>{const e=document.getElementById("music-progress").querySelector(".progress-bar"),x=document.getElementById("play");if(Ie){S.pause?(x.innerHTML='<em class="bi bi-play"></em>',x.classList.remove("btn-success"),x.classList.add("btn-primary")):(x.innerHTML='<em class="bi bi-pause"></em>',x.classList.remove("btn-primary"),x.classList.add("btn-success"));const E=S.getPosition()/S.getLength()*100|0;e.style.width=E+"%",e.innerText=E+"%",document.getElementById("time-now").innerText=S.getTime(),document.getElementById("time-total").innerText=S.getTotalTime(),document.getElementById("current-tempo").innerText=S.getTempo();const t=S.getLyrics();if(t&&t.length!==0&&c9!==t&&(bE="",t.replace(/\//g,"<br />").replace(/>/g,"    ").replace(/&m/g,"👨‍🎤").replace(/&f/g,"👩‍🎤").replace(/&c/g,"👫"),bE+=t,document.getElementById("lyrics").innerText=u0.convert(bE,"UNICODE","AUTO")),D9!==S.getTextEvent()&&(document.getElementById("text_event").value=u0.convert(S.getTextEvent(),"UNICODE","AUTO")),c9=S.getLyrics(),D9=S.getTextEvent(),E===100){const A=document.getElementById("files");A.selectedIndex==A.options.length?A.selectedIndex=0:A.selectedIndex=A.selectedIndex+1,t0()}}},600);((e,x,E,t,A)=>{e[t]=e[t]||[],e[t].push({"gtm.start":new Date().getTime(),event:"gtm.js"});const B=x.getElementsByTagName(E)[0],n=x.createElement(E),i=t!="dataLayer"?"&l="+t:"";n.async=!0,n.src="https://www.googletagmanager.com/gtm.js?id="+A+i,B.parentNode.insertBefore(n,B)})(window,document,"script","dataLayer","UA-33600926-1");
