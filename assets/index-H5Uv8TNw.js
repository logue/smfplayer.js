(function(){const x=document.createElement("link").relList;if(x&&x.supports&&x.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))t(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&t(r)}).observe(document,{childList:!0,subtree:!0});function e(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function t(n){if(n.ep)return;n.ep=!0;const i=e(n);fetch(n.href,i)}})();const L9="%[a-f0-9]{2}",$8=new RegExp("("+L9+")|([^%]+?)","gi"),j8=new RegExp("("+L9+")+","gi");function Nt(E,x){try{return[decodeURIComponent(E.join(""))]}catch{}if(E.length===1)return E;x=x||1;const e=E.slice(0,x),t=E.slice(x);return Array.prototype.concat.call([],Nt(e),Nt(t))}function Z6(E){try{return decodeURIComponent(E)}catch{let x=E.match($8)||[];for(let e=1;e<x.length;e++)E=Nt(x,e).join(""),x=E.match($8)||[];return E}}function X6(E){const x={"%FE%FF":"��","%FF%FE":"��"};let e=j8.exec(E);for(;e;){try{x[e[0]]=decodeURIComponent(e[0])}catch{const n=Z6(e[0]);n!==e[0]&&(x[e[0]]=n)}e=j8.exec(E)}x["%C2"]="�";const t=Object.keys(x);for(const n of t)E=E.replace(new RegExp(n,"g"),x[n]);return E}function z6(E){if(typeof E!="string")throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof E+"`");try{return decodeURIComponent(E)}catch{return X6(E)}}function N9(E,x){if(!(typeof E=="string"&&typeof x=="string"))throw new TypeError("Expected the arguments to be of type `string`");if(E===""||x==="")return[];const e=E.indexOf(x);return e===-1?[]:[E.slice(0,e),E.slice(e+x.length)]}function Q6(E,x){const e={};if(Array.isArray(x))for(const t of x){const n=Object.getOwnPropertyDescriptor(E,t);n?.enumerable&&Object.defineProperty(e,t,n)}else for(const t of Reflect.ownKeys(E)){const n=Object.getOwnPropertyDescriptor(E,t);if(n.enumerable){const i=E[t];x(t,i,E)&&Object.defineProperty(e,t,n)}}return e}const xi=E=>E==null,ei=E=>encodeURIComponent(E).replace(/[!'()*]/g,x=>`%${x.charCodeAt(0).toString(16).toUpperCase()}`),Rt=Symbol("encodeFragmentIdentifier");function Ei(E){switch(E.arrayFormat){case"index":return x=>(e,t)=>{const n=e.length;return t===void 0||E.skipNull&&t===null||E.skipEmptyString&&t===""?e:t===null?[...e,[n0(x,E),"[",n,"]"].join("")]:[...e,[n0(x,E),"[",n0(n,E),"]=",n0(t,E)].join("")]};case"bracket":return x=>(e,t)=>t===void 0||E.skipNull&&t===null||E.skipEmptyString&&t===""?e:t===null?[...e,[n0(x,E),"[]"].join("")]:[...e,[n0(x,E),"[]=",n0(t,E)].join("")];case"colon-list-separator":return x=>(e,t)=>t===void 0||E.skipNull&&t===null||E.skipEmptyString&&t===""?e:t===null?[...e,[n0(x,E),":list="].join("")]:[...e,[n0(x,E),":list=",n0(t,E)].join("")];case"comma":case"separator":case"bracket-separator":{const x=E.arrayFormat==="bracket-separator"?"[]=":"=";return e=>(t,n)=>n===void 0||E.skipNull&&n===null||E.skipEmptyString&&n===""?t:(n=n===null?"":n,t.length===0?[[n0(e,E),x,n0(n,E)].join("")]:[[t,n0(n,E)].join(E.arrayFormatSeparator)])}default:return x=>(e,t)=>t===void 0||E.skipNull&&t===null||E.skipEmptyString&&t===""?e:t===null?[...e,n0(x,E)]:[...e,[n0(x,E),"=",n0(t,E)].join("")]}}function ti(E){let x;switch(E.arrayFormat){case"index":return(e,t,n)=>{if(x=/\[(\d*)]$/.exec(e),e=e.replace(/\[\d*]$/,""),!x){n[e]=t;return}n[e]===void 0&&(n[e]={}),n[e][x[1]]=t};case"bracket":return(e,t,n)=>{if(x=/(\[])$/.exec(e),e=e.replace(/\[]$/,""),!x){n[e]=t;return}if(n[e]===void 0){n[e]=[t];return}n[e]=[...n[e],t]};case"colon-list-separator":return(e,t,n)=>{if(x=/(:list)$/.exec(e),e=e.replace(/:list$/,""),!x){n[e]=t;return}if(n[e]===void 0){n[e]=[t];return}n[e]=[...n[e],t]};case"comma":case"separator":return(e,t,n)=>{const i=typeof t=="string"&&t.includes(E.arrayFormatSeparator),r=typeof t=="string"&&!i&&tx(t,E).includes(E.arrayFormatSeparator);t=r?tx(t,E):t;const A=i||r?t.split(E.arrayFormatSeparator).map(s=>tx(s,E)):t===null?t:tx(t,E);n[e]=A};case"bracket-separator":return(e,t,n)=>{const i=/(\[])$/.test(e);if(e=e.replace(/\[]$/,""),!i){n[e]=t&&tx(t,E);return}const r=t===null?[]:t.split(E.arrayFormatSeparator).map(A=>tx(A,E));if(n[e]===void 0){n[e]=r;return}n[e]=[...n[e],...r]};default:return(e,t,n)=>{if(n[e]===void 0){n[e]=t;return}n[e]=[...[n[e]].flat(),t]}}}function R9(E){if(typeof E!="string"||E.length!==1)throw new TypeError("arrayFormatSeparator must be single character string")}function n0(E,x){return x.encode?x.strict?ei(E):encodeURIComponent(E):E}function tx(E,x){return x.decode?z6(E):E}function M9(E){return Array.isArray(E)?E.sort():typeof E=="object"?M9(Object.keys(E)).sort((x,e)=>Number(x)-Number(e)).map(x=>E[x]):E}function U9(E){const x=E.indexOf("#");return x!==-1&&(E=E.slice(0,x)),E}function ni(E){let x="";const e=E.indexOf("#");return e!==-1&&(x=E.slice(e)),x}function W8(E,x){return x.parseNumbers&&!Number.isNaN(Number(E))&&typeof E=="string"&&E.trim()!==""?E=Number(E):x.parseBooleans&&E!==null&&(E.toLowerCase()==="true"||E.toLowerCase()==="false")&&(E=E.toLowerCase()==="true"),E}function e8(E){E=U9(E);const x=E.indexOf("?");return x===-1?"":E.slice(x+1)}function E8(E,x){x={decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1,...x},R9(x.arrayFormatSeparator);const e=ti(x),t=Object.create(null);if(typeof E!="string"||(E=E.trim().replace(/^[?#&]/,""),!E))return t;for(const n of E.split("&")){if(n==="")continue;const i=x.decode?n.replace(/\+/g," "):n;let[r,A]=N9(i,"=");r===void 0&&(r=i),A=A===void 0?null:["comma","separator","bracket-separator"].includes(x.arrayFormat)?A:tx(A,x),e(tx(r,x),A,t)}for(const[n,i]of Object.entries(t))if(typeof i=="object"&&i!==null)for(const[r,A]of Object.entries(i))i[r]=W8(A,x);else t[n]=W8(i,x);return x.sort===!1?t:(x.sort===!0?Object.keys(t).sort():Object.keys(t).sort(x.sort)).reduce((n,i)=>{const r=t[i];return r&&typeof r=="object"&&!Array.isArray(r)?n[i]=M9(r):n[i]=r,n},Object.create(null))}function P9(E,x){if(!E)return"";x={encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:",",...x},R9(x.arrayFormatSeparator);const e=r=>x.skipNull&&xi(E[r])||x.skipEmptyString&&E[r]==="",t=Ei(x),n={};for(const[r,A]of Object.entries(E))e(r)||(n[r]=A);const i=Object.keys(n);return x.sort!==!1&&i.sort(x.sort),i.map(r=>{const A=E[r];return A===void 0?"":A===null?n0(r,x):Array.isArray(A)?A.length===0&&x.arrayFormat==="bracket-separator"?n0(r,x)+"[]":A.reduce(t(r),[]).join("&"):n0(r,x)+"="+n0(A,x)}).filter(r=>r.length>0).join("&")}function $9(E,x){x={decode:!0,...x};let[e,t]=N9(E,"#");return e===void 0&&(e=E),{url:e?.split("?")?.[0]??"",query:E8(e8(E),x),...x&&x.parseFragmentIdentifier&&t?{fragmentIdentifier:tx(t,x)}:{}}}function j9(E,x){x={encode:!0,strict:!0,[Rt]:!0,...x};const e=U9(E.url).split("?")[0]||"",t=e8(E.url),n={...E8(t,{sort:!1}),...E.query};let i=P9(n,x);i&&(i=`?${i}`);let r=ni(E.url);if(E.fragmentIdentifier){const A=new URL(e);A.hash=E.fragmentIdentifier,r=x[Rt]?A.hash:`#${E.fragmentIdentifier}`}return`${e}${i}${r}`}function W9(E,x,e){e={parseFragmentIdentifier:!0,[Rt]:!1,...e};const{url:t,query:n,fragmentIdentifier:i}=$9(E,e);return j9({url:t,query:Q6(n,x),fragmentIdentifier:i},e)}function ii(E,x,e){const t=Array.isArray(x)?n=>!x.includes(n):(n,i)=>!x(n,i);return W9(E,t,e)}const ri=Object.freeze(Object.defineProperty({__proto__:null,exclude:ii,extract:e8,parse:E8,parseUrl:$9,pick:W9,stringify:P9,stringifyUrl:j9},Symbol.toStringTag,{value:"Module"}));/**
 * @classdesc Midi Event abstract Structure
 * @author    imaya
 * @license   MIT
 */class t8{static events={};constructor(x,e,t){this.subtype=x,this.deltaTime=e,this.time=t}}class l0 extends t8{static table={128:"NoteOff",144:"NoteOn",160:"PolyPressure",176:"ControllerChange",192:"ProgramChange",208:"ChannelPressure",224:"PitchBend",240:"SystemCommonMessage"};constructor(x,e,t,n,i=void 0,r=void 0){super(x,e,t),this.channel=n,this.parameter1=i,this.parameter2=r}}class Ae extends t8{static table={0:"SystemExclusive",1:"TimeCode",2:"SongPosition",3:"SongSelect",4:void 0,5:void 0,6:"TuneRequest",7:"SystemExclusive(F7)",8:"TimingClock",9:void 0,10:"Start",11:"Continue",12:"Stop",13:void 0,14:"ActiveSensing"};constructor(x,e,t,n){super(x,e,t),this.data=n}}class J extends t8{static table={0:"SequenceNumber",1:"TextEvent",2:"CopyrightNotice",3:"SequenceTrackName",4:"InstrumentName",5:"Lyrics",6:"Marker",7:"CuePoint",8:"ProgramName",9:"DeviceName",32:"MidiChannelPrefix",33:"ChannelPrefixOrPort",47:"EndOfTrack",75:"M-LiveTag",81:"SetTempo",84:"SmpteOffset",88:"TimeSignature",89:"KeySignature",127:"SequencerSpecific"};constructor(x,e,t,n){super(x,e,t),this.data=n}}/**
 * @class     PSGConverter
 * @classdesc Mabinogi MML and Maple Story 2 MML to MIDI Converter.
 * @version   3.0.6
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2007-2023 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class px{static PATTERN=/[a-glnortv<>][+#-]?\d*\.?&?/g;static NOTE_TABLE={c:0,d:2,e:4,f:5,g:7,a:9,b:11};static VELOCITY_MAGNIFICATION=7;constructor(x={timeDivision:96,channel:0,timeOffset:0,mml:[]}){this.timeDivision=x.timeDivision?parseInt(x.timeDivision):96,this.channel=x.channel?parseInt(x.channel):0,this.timeOffset=x.timeOffset?parseInt(x.timeOffset):0,this.MINIM=this.timeDivision*2,this.SEMIBREVE=this.timeDivision*4,this.mml=x.mml,this.events=[],this.endTime=0,this.noteOffNegativeOffset=2,this.ignoreTempo=x.igonreTempo||!1,this.maxOctave=x.maxOctave||8,this.minOctave=x.minOctave||0,this.octaveMode=x.octaveMode||0,this.minNote=x.minNote||12,this.maxNote=x.minNote||98,this.parse()}parse(){let x=[];try{x=this.mml.toLowerCase().match(px.PATTERN)}catch{throw new MediaError("[PSGConverter] Could not parse MML.",this.mml)}if(!x)return;let e=this.timeOffset,t=this.timeDivision,n=0,i=8,r=4,A=!1;const s=[];x.forEach(B=>{let o=t|0,a="",f=0;const F=RegExp(/([lotv<>])([1-9]\d*|0?)(\.?)(&?)/).exec(B);if(F)switch(a=F[1].toLowerCase(),f=parseInt(F[2]),A&&F[4]!=="&"&&(A=!1,s.push(new l0("NoteOff",0,e-this.noteOffNegativeOffset,this.channel,n))),a){case"l":f>=1&&f<=this.MINIM&&(t=Math.floor(this.SEMIBREVE/f),RegExp.$3==="."&&(t=Math.floor(t*1.5)));break;case"o":f>=this.minOctave&&f<=this.maxOctave&&(r=f);break;case"t":s.push(new J("SetTempo",0,e,[Math.floor(6e7/f)]));break;case"v":f>=0&&f<=15&&(i=f);break;case"<":r=r<=this.minOctave?this.minOctave:r-1;break;case">":r=r>=this.maxOctave?this.maxOctave:r+1;break}else if(RegExp(/([a-gn])([+#-]?)(\d*)(\.?)(&?)/).exec(B)){let h=0;switch(a=RegExp.$1.toLowerCase(),f=RegExp.$3|0,a==="n"?h=f:(f>=1&&f<=this.MINIM&&(o=Math.floor(this.SEMIBREVE/f)),RegExp.$4==="."&&(o=Math.floor(o*1.5)),this.octaveMode!==2&&(h=12*r+px.NOTE_TABLE[a],RegExp.$2==="+"||RegExp.$2==="#"?h++:RegExp.$2==="-"&&h--)),this.octaveMode){case 1:for(;h<this.minNote;)h=h+12;for(;h>this.maxNote;)h=h-12;h+=12;break;case 2:h=this.maxNote;break;default:h+=12;break}A?h!==n&&s.push(new l0("NoteOff",0,e-this.noteOffNegativeOffset,this.channel,n)):s.push(new l0("NoteOn",0,e,this.channel,h,i*px.VELOCITY_MAGNIFICATION)),e+=o,RegExp.$5==="&"?(A=!0,n=h):(A=!1,s.push(new l0("NoteOff",0,e-this.noteOffNegativeOffset,this.channel,h)))}else B.match(/R(\d*)(\.?)/i)&&(f=RegExp.$1|0,f>=1&&f<=this.MINIM&&(o=Math.floor(this.SEMIBREVE/f)),RegExp.$2==="."&&(o=Math.floor(o*1.5)),e+=o)}),this.events=s,this.endTime=e}}const{hasOwnProperty:tt}=Object.prototype,Mt=(E,x={})=>{typeof x=="string"&&(x={section:x}),x.align=x.align===!0,x.newline=x.newline===!0,x.sort=x.sort===!0,x.whitespace=x.whitespace===!0||x.align===!0,x.platform=x.platform||typeof process<"u"&&process.platform,x.bracketedArray=x.bracketedArray!==!1;const e=x.platform==="win32"?`\r
`:`
`,t=x.whitespace?" = ":"=",n=[],i=x.sort?Object.keys(E).sort():Object.keys(E);let r=0;x.align&&(r=Ex(i.filter(B=>E[B]===null||Array.isArray(E[B])||typeof E[B]!="object").map(B=>Array.isArray(E[B])?`${B}[]`:B).concat([""]).reduce((B,o)=>Ex(B).length>=Ex(o).length?B:o)).length);let A="";const s=x.bracketedArray?"[]":"";for(const B of i){const o=E[B];if(o&&Array.isArray(o))for(const a of o)A+=Ex(`${B}${s}`).padEnd(r," ")+t+Ex(a)+e;else o&&typeof o=="object"?n.push(B):A+=Ex(B).padEnd(r," ")+t+Ex(o)+e}x.section&&A.length&&(A="["+Ex(x.section)+"]"+(x.newline?e+e:e)+A);for(const B of n){const o=V9(B,".").join("\\."),a=(x.section?x.section+".":"")+o,f=Mt(E[B],{...x,section:a});A.length&&f.length&&(A+=e),A+=f}return A};function V9(E,x){var e=0,t=0,n=0,i=[];do if(n=E.indexOf(x,e),n!==-1){if(e=n+x.length,n>0&&E[n-1]==="\\")continue;i.push(E.slice(t,n)),t=n+x.length}while(n!==-1);return i.push(E.slice(t)),i}const V8=(E,x={})=>{x.bracketedArray=x.bracketedArray!==!1;const e=Object.create(null);let t=e,n=null;const i=/^\[([^\]]*)\]\s*$|^([^=]+)(=(.*))?$/i,r=E.split(/[\r\n]+/g),A={};for(const B of r){if(!B||B.match(/^\s*[;#]/)||B.match(/^\s*$/))continue;const o=B.match(i);if(!o)continue;if(o[1]!==void 0){if(n=FE(o[1]),n==="__proto__"){t=Object.create(null);continue}t=e[n]=e[n]||Object.create(null);continue}const a=FE(o[2]);let f;x.bracketedArray?f=a.length>2&&a.slice(-2)==="[]":(A[a]=(A?.[a]||0)+1,f=A[a]>1);const F=f?a.slice(0,-2):a;if(F==="__proto__")continue;const h=o[3]?FE(o[4]):!0,l=h==="true"||h==="false"||h==="null"?JSON.parse(h):h;f&&(tt.call(t,F)?Array.isArray(t[F])||(t[F]=[t[F]]):t[F]=[]),Array.isArray(t[F])?t[F].push(l):t[F]=l}const s=[];for(const B of Object.keys(e)){if(!tt.call(e,B)||typeof e[B]!="object"||Array.isArray(e[B]))continue;const o=V9(B,".");t=e;const a=o.pop(),f=a.replace(/\\\./g,".");for(const F of o)F!=="__proto__"&&((!tt.call(t,F)||typeof t[F]!="object")&&(t[F]=Object.create(null)),t=t[F]);t===e&&f===a||(t[f]=e[B],s.push(B))}for(const B of s)delete e[B];return e},H9=E=>E.startsWith('"')&&E.endsWith('"')||E.startsWith("'")&&E.endsWith("'"),Ex=E=>typeof E!="string"||E.match(/[=\r\n]/)||E.match(/^\[/)||E.length>1&&H9(E)||E!==E.trim()?JSON.stringify(E):E.split(";").join("\\;").split("#").join("\\#"),FE=(E,x)=>{if(E=(E||"").trim(),H9(E)){E.charAt(0)==="'"&&(E=E.slice(1,-1));try{E=JSON.parse(E)}catch{}}else{let e=!1,t="";for(let n=0,i=E.length;n<i;n++){const r=E.charAt(n);if(e)"\\;#".indexOf(r)!==-1?t+=r:t+="\\"+r,e=!1;else{if(";#".indexOf(r)!==-1)break;r==="\\"?e=!0:t+=r}}return e&&(t+="\\"),t.trim()}return E};var Ai={parse:V8,decode:V8,stringify:Mt,encode:Mt,safe:Ex,unsafe:FE},k0={},o0={},H8;function n8(){if(H8)return o0;H8=1;var E=i8(),x=String.fromCharCode,e=Array.prototype.slice,t=Object.prototype.toString,n=Object.prototype.hasOwnProperty,i=Array.isArray,r=Object.keys;function A(p){var D=typeof p;return D==="function"||D==="object"&&!!p}o0.isObject=A;function s(p){return i?i(p):t.call(p)==="[object Array]"}o0.isArray=s;function B(p){return typeof p=="string"||t.call(p)==="[object String]"}o0.isString=B;function o(p){if(r)return r(p);var D=[];for(var v in p)n.call(p,v)&&(D[D.length]=v);return D}o0.objectKeys=o;function a(p,D){if(E.HAS_TYPED)switch(p){case 8:return new Uint8Array(D);case 16:return new Uint16Array(D)}return new Array(D)}o0.createBuffer=a;function f(p){for(var D=p.length,v=a(16,D),S=0;S<D;S++)v[S]=p.charCodeAt(S);return v}o0.stringToBuffer=f;function F(p){if(E.CAN_CHARCODE_APPLY&&E.CAN_CHARCODE_APPLY_TYPED){var D=p&&p.length;if(D<E.APPLY_BUFFER_SIZE&&E.APPLY_BUFFER_SIZE_OK)return x.apply(null,p);if(E.APPLY_BUFFER_SIZE_OK===null)try{var v=x.apply(null,p);return D>E.APPLY_BUFFER_SIZE&&(E.APPLY_BUFFER_SIZE_OK=!0),v}catch{E.APPLY_BUFFER_SIZE_OK=!1}}return h(p)}o0.codeToString_fast=F;function h(p){for(var D="",v=p&&p.length,S=0,T;S<v;){if(p.subarray?T=p.subarray(S,S+E.APPLY_BUFFER_SIZE):T=p.slice(S,S+E.APPLY_BUFFER_SIZE),S+=E.APPLY_BUFFER_SIZE,E.APPLY_BUFFER_SIZE_OK){D+=x.apply(null,T);continue}if(E.APPLY_BUFFER_SIZE_OK===null)try{D+=x.apply(null,T),T.length>E.APPLY_BUFFER_SIZE&&(E.APPLY_BUFFER_SIZE_OK=!0);continue}catch{E.APPLY_BUFFER_SIZE_OK=!1}return l(p)}return D}o0.codeToString_chunked=h;function l(p){for(var D="",v=p&&p.length,S=0;S<v;S++)D+=x(p[S]);return D}o0.codeToString_slow=l;function c(p){for(var D=[],v=p&&p.length,S=0;S<v;S++)D[S]=p.charCodeAt(S);return D}o0.stringToCode=c;function u(p){if(E.HAS_TYPED)return new Uint16Array(p);if(s(p))return p;for(var D=p&&p.length,v=[],S=0;S<D;S++)v[S]=p[S];return v}o0.codeToBuffer=u;function C(p){return s(p)?p:e.call(p)}o0.bufferToCode=C;function d(p){for(var D="",v=(""+p).toUpperCase().replace(/[^A-Z0-9]+/g,""),S=o(E.EncodingAliases),T=S.length,M=0,R,N,P,Y=0;Y<T;Y++){if(R=S[Y],R===v){D=R;break}for(N=R.length,P=M;P<N;P++)(R.slice(0,P)===v.slice(0,P)||R.slice(-P)===v.slice(-P))&&(D=R,M=P)}return n.call(E.EncodingAliases,D)?E.EncodingAliases[D]:D}o0.canonicalizeEncodingName=d;var m=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47],g=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,-1,-1,-1,-1,-1],_=61;function b(p){var D,v,S,T,M,R;for(S=p&&p.length,v=0,D=[];v<S;){if(T=p[v++],v==S){D[D.length]=m[T>>2],D[D.length]=m[(T&3)<<4],D[D.length]=_,D[D.length]=_;break}if(M=p[v++],v==S){D[D.length]=m[T>>2],D[D.length]=m[(T&3)<<4|(M&240)>>4],D[D.length]=m[(M&15)<<2],D[D.length]=_;break}R=p[v++],D[D.length]=m[T>>2],D[D.length]=m[(T&3)<<4|(M&240)>>4],D[D.length]=m[(M&15)<<2|(R&192)>>6],D[D.length]=m[R&63]}return F(D)}o0.base64encode=b;function w(p){var D,v,S,T,M,R,N;for(R=p&&p.length,M=0,N=[];M<R;){do D=g[p.charCodeAt(M++)&255];while(M<R&&D==-1);if(D==-1)break;do v=g[p.charCodeAt(M++)&255];while(M<R&&v==-1);if(v==-1)break;N[N.length]=D<<2|(v&48)>>4;do{if(S=p.charCodeAt(M++)&255,S==61)return N;S=g[S]}while(M<R&&S==-1);if(S==-1)break;N[N.length]=(v&15)<<4|(S&60)>>2;do{if(T=p.charCodeAt(M++)&255,T==61)return N;T=g[T]}while(M<R&&T==-1);if(T==-1)break;N[N.length]=(S&3)<<6|T}return N}return o0.base64decode=w,o0}var ue={},si={15711649:33,15711650:34,15711651:35,15711652:36,15711653:37,15711654:38,15711655:39,15711656:40,15711657:41,15711658:42,15711659:43,15711660:44,15711661:45,15711662:46,15711663:47,15711664:48,15711665:49,15711666:50,15711667:51,15711668:52,15711669:53,15711670:54,15711671:55,15711672:56,15711673:57,15711674:58,15711675:59,15711676:60,15711677:61,15711678:62,15711679:63,15711872:64,15711873:65,15711874:66,15711875:67,15711876:68,15711877:69,15711878:70,15711879:71,15711880:72,15711881:73,15711882:74,15711883:75,15711884:76,15711885:77,15711886:78,15711887:79,15711888:80,15711889:81,15711890:82,15711891:83,15711892:84,15711893:85,15711894:86,15711895:87,15711896:88,15711897:89,15711898:90,15711899:91,15711900:92,15711901:93,15711902:94,15711903:95,14848416:11553,14848417:11554,14848418:11555,14848419:11556,14848420:11557,14848421:11558,14848422:11559,14848423:11560,14848424:11561,14848425:11562,14848426:11563,14848427:11564,14848428:11565,14848429:11566,14848430:11567,14848431:11568,14848432:11569,14848433:11570,14848434:11571,14848435:11572,14845344:11573,14845345:11574,14845346:11575,14845347:11576,14845348:11577,14845349:11578,14845350:11579,14845351:11580,14845352:11581,14845353:11582,14912905:11584,14912660:11585,14912674:11586,14912909:11587,14912664:11588,14912679:11589,14912643:11590,14912694:11591,14912913:11592,14912919:11593,14912653:11594,14912678:11595,14912675:11596,14912683:11597,14912906:11598,14912699:11599,14913180:11600,14913181:11601,14913182:11602,14913166:11603,14913167:11604,14913412:11605,14913185:11606,14912955:11615,14909597:11616,14909599:11617,14845078:11618,14913421:11619,14845089:11620,14912164:11621,14912165:11622,14912166:11623,14912167:11624,14912168:11625,14911665:11626,14911666:11627,14911673:11628,14912958:11629,14912957:11630,14912956:11631,14846126:11635,14846097:11636,14846111:11640,14846655:11641,14909568:8481,14909569:8482,14909570:8483,15711372:8484,15711374:8485,14910395:8486,15711386:8487,15711387:8488,15711391:8489,15711361:8490,14910107:8491,14910108:8492,49844:8493,15711616:8494,49832:8495,15711422:8496,15712163:8497,15711423:8498,14910397:8499,14910398:8500,14910109:8501,14910110:8502,14909571:8503,14990237:8504,14909573:8505,14909574:8506,14909575:8507,14910396:8508,14844053:8509,14844048:8510,15711375:8511,15711420:8512,15711646:8513,14844054:8514,15711644:8515,14844070:8516,14844069:8517,14844056:8518,14844057:8519,14844060:8520,14844061:8521,15711368:8522,15711369:8523,14909588:8524,14909589:8525,15711419:8526,15711421:8527,15711643:8528,15711645:8529,14909576:8530,14909577:8531,14909578:8532,14909579:8533,14909580:8534,14909581:8535,14909582:8536,14909583:8537,14909584:8538,14909585:8539,15711371:8540,15711373:8541,49841:8542,50071:8543,50103:8544,15711389:8545,14846368:8546,15711388:8547,15711390:8548,14846374:8549,14846375:8550,14846110:8551,14846132:8552,14850434:8553,14850432:8554,49840:8555,14844082:8556,14844083:8557,14845059:8558,15712165:8559,15711364:8560,15712160:8561,15712161:8562,15711365:8563,15711363:8564,15711366:8565,15711370:8566,15711392:8567,49831:8568,14850182:8569,14850181:8570,14849931:8571,14849935:8572,14849934:8573,14849927:8574,14849926:8737,14849697:8738,14849696:8739,14849715:8740,14849714:8741,14849725:8742,14849724:8743,14844091:8744,14909586:8745,14845586:8746,14845584:8747,14845585:8748,14845587:8749,14909587:8750,14846088:8762,14846091:8763,14846598:8764,14846599:8765,14846594:8766,14846595:8767,14846122:8768,14846121:8769,14846119:8778,14846120:8779,49836:8780,14845842:8781,14845844:8782,14846080:8783,14846083:8784,14846112:8796,14846629:8797,14847122:8798,14846082:8799,14846087:8800,14846369:8801,14846354:8802,14846378:8803,14846379:8804,14846106:8805,14846141:8806,14846109:8807,14846133:8808,14846123:8809,14846124:8810,14845099:8818,14844080:8819,14850479:8820,14850477:8821,14850474:8822,14844064:8823,14844065:8824,49846:8825,14849967:8830,15711376:9008,15711377:9009,15711378:9010,15711379:9011,15711380:9012,15711381:9013,15711382:9014,15711383:9015,15711384:9016,15711385:9017,15711393:9025,15711394:9026,15711395:9027,15711396:9028,15711397:9029,15711398:9030,15711399:9031,15711400:9032,15711401:9033,15711402:9034,15711403:9035,15711404:9036,15711405:9037,15711406:9038,15711407:9039,15711408:9040,15711409:9041,15711410:9042,15711411:9043,15711412:9044,15711413:9045,15711414:9046,15711415:9047,15711416:9048,15711417:9049,15711418:9050,15711617:9057,15711618:9058,15711619:9059,15711620:9060,15711621:9061,15711622:9062,15711623:9063,15711624:9064,15711625:9065,15711626:9066,15711627:9067,15711628:9068,15711629:9069,15711630:9070,15711631:9071,15711632:9072,15711633:9073,15711634:9074,15711635:9075,15711636:9076,15711637:9077,15711638:9078,15711639:9079,15711640:9080,15711641:9081,15711642:9082,14909825:9249,14909826:9250,14909827:9251,14909828:9252,14909829:9253,14909830:9254,14909831:9255,14909832:9256,14909833:9257,14909834:9258,14909835:9259,14909836:9260,14909837:9261,14909838:9262,14909839:9263,14909840:9264,14909841:9265,14909842:9266,14909843:9267,14909844:9268,14909845:9269,14909846:9270,14909847:9271,14909848:9272,14909849:9273,14909850:9274,14909851:9275,14909852:9276,14909853:9277,14909854:9278,14909855:9279,14909856:9280,14909857:9281,14909858:9282,14909859:9283,14909860:9284,14909861:9285,14909862:9286,14909863:9287,14909864:9288,14909865:9289,14909866:9290,14909867:9291,14909868:9292,14909869:9293,14909870:9294,14909871:9295,14909872:9296,14909873:9297,14909874:9298,14909875:9299,14909876:9300,14909877:9301,14909878:9302,14909879:9303,14909880:9304,14909881:9305,14909882:9306,14909883:9307,14909884:9308,14909885:9309,14909886:9310,14909887:9311,14910080:9312,14910081:9313,14910082:9314,14910083:9315,14910084:9316,14910085:9317,14910086:9318,14910087:9319,14910088:9320,14910089:9321,14910090:9322,14910091:9323,14910092:9324,14910093:9325,14910094:9326,14910095:9327,14910096:9328,14910097:9329,14910098:9330,14910099:9331,14910113:9505,14910114:9506,14910115:9507,14910116:9508,14910117:9509,14910118:9510,14910119:9511,14910120:9512,14910121:9513,14910122:9514,14910123:9515,14910124:9516,14910125:9517,14910126:9518,14910127:9519,14910128:9520,14910129:9521,14910130:9522,14910131:9523,14910132:9524,14910133:9525,14910134:9526,14910135:9527,14910136:9528,14910137:9529,14910138:9530,14910139:9531,14910140:9532,14910141:9533,14910142:9534,14910143:9535,14910336:9536,14910337:9537,14910338:9538,14910339:9539,14910340:9540,14910341:9541,14910342:9542,14910343:9543,14910344:9544,14910345:9545,14910346:9546,14910347:9547,14910348:9548,14910349:9549,14910350:9550,14910351:9551,14910352:9552,14910353:9553,14910354:9554,14910355:9555,14910356:9556,14910357:9557,14910358:9558,14910359:9559,14910360:9560,14910361:9561,14910362:9562,14910363:9563,14910364:9564,14910365:9565,14910366:9566,14910367:9567,14910368:9568,14910369:9569,14910370:9570,14910371:9571,14910372:9572,14910373:9573,14910374:9574,14910375:9575,14910376:9576,14910377:9577,14910378:9578,14910379:9579,14910380:9580,14910381:9581,14910382:9582,14910383:9583,14910384:9584,14910385:9585,14910386:9586,14910387:9587,14910388:9588,14910389:9589,14910390:9590,52881:9761,52882:9762,52883:9763,52884:9764,52885:9765,52886:9766,52887:9767,52888:9768,52889:9769,52890:9770,52891:9771,52892:9772,52893:9773,52894:9774,52895:9775,52896:9776,52897:9777,52899:9778,52900:9779,52901:9780,52902:9781,52903:9782,52904:9783,52905:9784,52913:9793,52914:9794,52915:9795,52916:9796,52917:9797,52918:9798,52919:9799,52920:9800,52921:9801,52922:9802,52923:9803,52924:9804,52925:9805,52926:9806,52927:9807,53120:9808,53121:9809,53123:9810,53124:9811,53125:9812,53126:9813,53127:9814,53128:9815,53129:9816,53392:10017,53393:10018,53394:10019,53395:10020,53396:10021,53397:10022,53377:10023,53398:10024,53399:10025,53400:10026,53401:10027,53402:10028,53403:10029,53404:10030,53405:10031,53406:10032,53407:10033,53408:10034,53409:10035,53410:10036,53411:10037,53412:10038,53413:10039,53414:10040,53415:10041,53416:10042,53417:10043,53418:10044,53419:10045,53420:10046,53421:10047,53422:10048,53423:10049,53424:10065,53425:10066,53426:10067,53427:10068,53428:10069,53429:10070,53649:10071,53430:10072,53431:10073,53432:10074,53433:10075,53434:10076,53435:10077,53436:10078,53437:10079,53438:10080,53439:10081,53632:10082,53633:10083,53634:10084,53635:10085,53636:10086,53637:10087,53638:10088,53639:10089,53640:10090,53641:10091,53642:10092,53643:10093,53644:10094,53645:10095,53646:10096,53647:10097,14849152:10273,14849154:10274,14849164:10275,14849168:10276,14849176:10277,14849172:10278,14849180:10279,14849196:10280,14849188:10281,14849204:10282,14849212:10283,14849153:10284,14849155:10285,14849167:10286,14849171:10287,14849179:10288,14849175:10289,14849187:10290,14849203:10291,14849195:10292,14849211:10293,14849419:10294,14849184:10295,14849199:10296,14849192:10297,14849207:10298,14849215:10299,14849181:10300,14849200:10301,14849189:10302,14849208:10303,14849410:10304,14989980:12321,15045782:12322,15050883:12323,15308991:12324,15045504:12325,15107227:12326,15109288:12327,15050678:12328,15302818:12329,15241653:12330,15240348:12331,15182224:12332,15106730:12333,15110049:12334,15120549:12335,15112109:12336,15241638:12337,15239846:12338,15314869:12339,15114899:12340,15047847:12341,15111841:12342,15108529:12343,15052443:12344,15050640:12345,15243707:12346,15311796:12347,15185314:12348,15185598:12349,15314574:12350,15108246:12351,15184543:12352,15246007:12353,15052425:12354,15055541:12355,15109257:12356,15112855:12357,15114632:12358,15308679:12359,15310477:12360,15113615:12361,14990245:12362,14990474:12363,14990733:12364,14991005:12365,15040905:12366,15047602:12367,15049911:12368,15050644:12369,15050881:12370,15052937:12371,15106975:12372,15107215:12373,15107504:12374,15112339:12375,15115397:12376,15172282:12377,15177103:12378,15177136:12379,15181755:12380,15185581:12381,15185839:12382,15238019:12383,15241358:12384,15245731:12385,15248514:12386,15303061:12387,15303098:12388,15043771:12389,14989973:12390,14989989:12391,15048607:12392,15237810:12393,15303553:12394,15180719:12395,14989440:12396,15049649:12397,15121058:12398,15302840:12399,15182002:12400,15240360:12401,15239819:12402,15315119:12403,15041921:12404,15044016:12405,15045309:12406,15045537:12407,15047584:12408,15050683:12409,15056021:12410,15311794:12411,15120299:12412,15238052:12413,15242413:12414,15309218:12577,15309232:12578,15309472:12579,15310779:12580,15044747:12581,15044531:12582,15052423:12583,15172495:12584,15187645:12585,15253378:12586,15309736:12587,15044015:12588,15316380:12589,15182522:12590,14989457:12591,15180435:12592,15239100:12593,15120550:12594,15046808:12595,15045764:12596,15117469:12597,15242394:12598,15315131:12599,15050661:12600,15044265:12601,15119782:12602,15176604:12603,15308431:12604,15047042:12605,14989969:12606,15303051:12607,15309746:12608,15240591:12609,15312012:12610,15044513:12611,15046326:12612,15051952:12613,15056305:12614,15112352:12615,15113139:12616,15114372:12617,15118520:12618,15119283:12619,15119529:12620,15176091:12621,15178632:12622,15182222:12623,15311028:12624,15240113:12625,15245723:12626,15247776:12627,15305645:12628,15120050:12629,15177387:12630,15178634:12631,15312773:12632,15106726:12633,15248513:12634,15251082:12635,15308466:12636,15115918:12637,15044269:12638,15042182:12639,15047826:12640,15048880:12641,15050116:12642,15052468:12643,15055798:12644,15106216:12645,15109801:12646,15110068:12647,15119039:12648,15121556:12649,15172238:12650,15172756:12651,15173017:12652,15173525:12653,15174847:12654,15186049:12655,15239606:12656,15240081:12657,15242903:12658,15303072:12659,15305115:12660,15316123:12661,15049129:12662,15111868:12663,15118746:12664,15176869:12665,15042489:12666,15049902:12667,15050149:12668,15056512:12669,15056796:12670,15108796:12833,15112122:12834,15116458:12835,15117479:12836,15118004:12837,15175307:12838,15187841:12839,15246742:12840,15316140:12841,15316110:12842,15317892:12843,15053473:12844,15118998:12845,15240635:12846,15041668:12847,15053195:12848,15107766:12849,15239046:12850,15114678:12851,15174049:12852,14989721:12853,14991290:12854,15044024:12855,15106473:12856,15120553:12857,15182223:12858,15310771:12859,14989451:12860,15043734:12861,14990254:12862,14990741:12863,14990525:12864,14991009:12865,14990771:12866,15043232:12867,15044527:12868,15046793:12869,15049871:12870,15051649:12871,15052470:12872,15052705:12873,15181713:12874,15112839:12875,15113884:12876,15113910:12877,15117708:12878,15119027:12879,15172011:12880,15175554:12881,15181453:12882,15181502:12883,15182012:12884,15183495:12885,15239857:12886,15240091:12887,15240324:12888,15240631:12889,15241135:12890,15241107:12891,15244710:12892,15248050:12893,15046825:12894,15250088:12895,15253414:12896,15303054:12897,15309982:12898,15243914:12899,14991236:12900,15053736:12901,15108241:12902,15174041:12903,15176891:12904,15239077:12905,15239869:12906,15244222:12907,15250304:12908,15309701:12909,15312019:12910,15312789:12911,14990219:12912,14990490:12913,15247267:12914,15047582:12915,15049098:12916,15049610:12917,15055803:12918,15056811:12919,15106218:12920,15106708:12921,15106466:12922,15107984:12923,15108242:12924,15109008:12925,15111353:12926,15314305:13089,15112614:13090,15114928:13091,15119799:13092,15172016:13093,15177100:13094,15178374:13095,15185333:13096,15239845:13097,15245241:13098,15308427:13099,15309454:13100,15250077:13101,15042481:13102,15043262:13103,15049878:13104,15045299:13105,15052467:13106,15053974:13107,15107496:13108,15115906:13109,15120047:13110,15180429:13111,15242123:13112,15245719:13113,15247794:13114,15306407:13115,15313592:13116,15119788:13117,15312552:13118,15244185:13119,15048355:13120,15114175:13121,15244174:13122,15304846:13123,15043203:13124,15047303:13125,15044740:13126,15055763:13127,15109025:13128,15110841:13129,15114428:13130,15114424:13131,15118011:13132,15175090:13133,15180474:13134,15182251:13135,15247002:13136,15247250:13137,15250859:13138,15252611:13139,15303597:13140,15308451:13141,15309460:13142,15310249:13143,15052198:13144,15053491:13145,15115709:13146,15311245:13147,15311246:13148,15109787:13149,15183008:13150,15116459:13151,15116735:13152,15114934:13153,15315085:13154,15121823:13155,15042994:13156,15046301:13157,15106480:13158,15109036:13159,15119547:13160,15120519:13161,15121297:13162,15241627:13163,15246480:13164,15252868:13165,14989460:13166,15315129:13167,15044534:13168,15115419:13169,15116474:13170,15310468:13171,15114410:13172,15041948:13173,15182723:13174,15241906:13175,15304604:13176,15306380:13177,15047067:13178,15316136:13179,15114402:13180,15240325:13181,15241393:13182,15184549:13345,15042696:13346,15240069:13347,15176614:13348,14989758:13349,14990979:13350,15042208:13351,15052690:13352,15042698:13353,15043480:13354,15043495:13355,15054779:13356,15046298:13357,15048874:13358,15050662:13359,15052428:13360,15052440:13361,15052699:13362,15055282:13363,15055289:13364,15106723:13365,15107231:13366,15107491:13367,15107774:13368,15110043:13369,15111586:13370,15114129:13371,15114643:13372,15115194:13373,15117502:13374,15117715:13375,15118743:13376,15121570:13377,15122071:13378,15121797:13379,15176368:13380,15176856:13381,15178659:13382,15178891:13383,15182783:13384,15183521:13385,15184033:13386,15185833:13387,15187126:13388,15187888:13389,15237789:13390,15239590:13391,15240862:13392,15247027:13393,15248268:13394,15250091:13395,15303300:13396,15307153:13397,15308435:13398,15308433:13399,15308450:13400,15309221:13401,15310739:13402,15312040:13403,15239320:13404,14989496:13405,15044779:13406,15053496:13407,15054732:13408,15175337:13409,15178124:13410,15178940:13411,15053481:13412,15187883:13413,15250571:13414,15309697:13415,15310993:13416,15311252:13417,15311256:13418,14990465:13419,14990478:13420,15044017:13421,15046300:13422,15047080:13423,15048634:13424,15050119:13425,15051913:13426,15052676:13427,15053456:13428,15054988:13429,15055294:13430,15056780:13431,15110062:13432,15113402:13433,15112087:13434,15112098:13435,15113375:13436,15115147:13437,15115140:13438,15116703:13601,15055024:13602,15118213:13603,15118487:13604,15118781:13605,15177151:13606,15181192:13607,15052195:13608,15181952:13609,15185024:13610,15056573:13611,15246991:13612,15247512:13613,15250100:13614,15250871:13615,15252364:13616,15252637:13617,15311778:13618,15313038:13619,15314108:13620,14989952:13621,15040957:13622,15041664:13623,15050387:13624,15052444:13625,15108271:13626,15108736:13627,15111084:13628,15117498:13629,15174304:13630,15177361:13631,15181191:13632,15187625:13633,15245243:13634,15248060:13635,15248816:13636,15109804:13637,15241098:13638,15310496:13639,15044745:13640,15044739:13641,15046315:13642,15114644:13643,15116696:13644,15247792:13645,15179943:13646,15113653:13647,15317901:13648,15044020:13649,15052450:13650,15238298:13651,15243664:13652,15302790:13653,14989464:13654,14989701:13655,14990215:13656,14990481:13657,15044490:13658,15044792:13659,15052462:13660,15056019:13661,15106213:13662,15111569:13663,15113405:13664,15118722:13665,15118770:13666,15119267:13667,15172024:13668,15175811:13669,15182262:13670,15182510:13671,15182984:13672,15185050:13673,15184830:13674,15185318:13675,15112103:13676,15174043:13677,15044283:13678,15053189:13679,15054760:13680,15109010:13681,15109024:13682,15109273:13683,15120544:13684,15243674:13685,15247537:13686,15251357:13687,15305656:13688,15121537:13689,15181478:13690,15314330:13691,14989992:13692,14989995:13693,14989996:13694,14991003:13857,14991008:13858,15041425:13859,15041927:13860,15182774:13861,15041969:13862,15042486:13863,15043988:13864,15043745:13865,15044031:13866,15044523:13867,15046316:13868,15049347:13869,15053729:13870,15056055:13871,15056266:13872,15106223:13873,15106448:13874,15106477:13875,15109279:13876,15111577:13877,15116683:13878,15119233:13879,15174530:13880,15174573:13881,15179695:13882,15238072:13883,15238277:13884,15239304:13885,15242638:13886,15303607:13887,15306657:13888,15310783:13889,15312279:13890,15313306:13891,14990256:13892,15042461:13893,15052973:13894,15112833:13895,15115693:13896,15053184:13897,15113138:13898,15115701:13899,15175305:13900,15114640:13901,15184513:13902,15041413:13903,15043492:13904,15048071:13905,15054782:13906,15305894:13907,15111844:13908,15117475:13909,15117501:13910,15175860:13911,15181441:13912,15181501:13913,15183243:13914,15185802:13915,15239865:13916,15241100:13917,15245759:13918,15246751:13919,15248569:13920,15253393:13921,15304593:13922,15044767:13923,15305344:13924,14989725:13925,15040694:13926,15044517:13927,15043770:13928,15174551:13929,15175318:13930,15179689:13931,15240102:13932,15252143:13933,15312774:13934,15312776:13935,15312786:13936,15041975:13937,15107226:13938,15243678:13939,15046320:13940,15182266:13941,15040950:13942,15052691:13943,15303047:13944,15309445:13945,14989490:13946,15117211:13947,15304615:13948,15053201:13949,15053192:13950,15109784:14113,15182495:14114,15118995:14115,15310260:14116,15252897:14117,15182506:14118,15173258:14119,15309448:14120,15184514:14121,15114391:14122,15186352:14123,15114641:14124,15306156:14125,15043506:14126,15044763:14127,15242923:14128,15247507:14129,15187620:14130,15252365:14131,15303585:14132,15044006:14133,15245960:14134,15181185:14135,14991234:14136,15041214:14137,15042705:14138,15041924:14139,15046035:14140,15047853:14141,15175594:14142,15048331:14143,15050129:14144,15056290:14145,15056516:14146,15106485:14147,15107510:14148,15107495:14149,15107753:14150,15109810:14151,15110330:14152,15111596:14153,15112623:14154,15114626:14155,15120531:14156,15177126:14157,15182013:14158,15184827:14159,15185292:14160,15185561:14161,15186315:14162,15187371:14163,15240334:14164,15240586:14165,15244173:14166,15247496:14167,15247779:14168,15248806:14169,15252413:14170,15311002:14171,15316623:14172,15239864:14173,15253390:14174,15314856:14175,15043207:14176,15108255:14177,15110787:14178,15122304:14179,15309465:14180,15114625:14181,15041169:14182,15117472:14183,15118778:14184,15121812:14185,15182260:14186,15185296:14187,15245696:14188,15247523:14189,15113352:14190,14990262:14191,15040697:14192,15040678:14193,15040933:14194,15041980:14195,15042744:14196,15042979:14197,15046311:14198,15047823:14199,15048837:14200,15051660:14201,15055802:14202,15107762:14203,15108024:14204,15109043:14205,15109554:14206,15115420:14369,15116457:14370,15174077:14371,15174316:14372,15174830:14373,15179924:14374,15180207:14375,15185337:14376,15178892:14377,15237801:14378,15246987:14379,15248537:14380,15250338:14381,15252370:14382,15303075:14383,15306165:14384,15309242:14385,15311253:14386,15313043:14387,15317432:14388,15041923:14389,15044255:14390,15044275:14391,15055291:14392,15056038:14393,15120539:14394,15121040:14395,15175300:14396,15175614:14397,15185283:14398,15239351:14399,15247488:14400,15248314:14401,15309200:14402,14989710:14403,15040651:14404,15044516:14405,15045052:14406,15047610:14407,15050641:14408,15052196:14409,15054769:14410,15055531:14411,15056039:14412,15108280:14413,15111557:14414,15113903:14415,15120790:14416,15174544:14417,15184778:14418,15246004:14419,15237793:14420,15238049:14421,15241136:14422,15243662:14423,15248007:14424,15251368:14425,15304887:14426,15309703:14427,15311271:14428,15318163:14429,14989972:14430,14989970:14431,14990477:14432,15043976:14433,15045001:14434,15044798:14435,15050927:14436,15056524:14437,15056545:14438,15106719:14439,15114919:14440,15116942:14441,15176090:14442,15180417:14443,15248030:14444,15248036:14445,15248823:14446,15304336:14447,14989726:14448,15314825:14449,14989988:14450,14990780:14451,14991023:14452,15040665:14453,15040662:14454,15041929:14455,15041964:14456,15043231:14457,15043257:14458,15043518:14459,15044250:14460,15044515:14461,15044753:14462,15044750:14625,15046281:14626,15048081:14627,15048354:14628,15050173:14629,15052180:14630,15052189:14631,15052431:14632,15054757:14633,15054759:14634,15054775:14635,15055288:14636,15055491:14637,15055514:14638,15055543:14639,15056024:14640,15106450:14641,15107468:14642,15108759:14643,15109016:14644,15109799:14645,15111355:14646,15112322:14647,15112579:14648,15113140:14649,15113645:14650,15114401:14651,15114903:14652,15116171:14653,15118751:14654,15119530:14655,15119785:14656,15120559:14657,15121053:14658,15176882:14659,15178375:14660,15180204:14661,15182015:14662,15184800:14663,15185029:14664,15185048:14665,15185310:14666,15185585:14667,15237269:14668,15237251:14669,15237807:14670,15237809:14671,15238548:14672,15238799:14673,15239338:14674,15240594:14675,15245708:14676,15245729:14677,15248539:14678,15250082:14679,15250364:14680,15303562:14681,15304117:14682,15305137:14683,15179967:14684,15305660:14685,15308452:14686,15309197:14687,15310981:14688,15312537:14689,15313816:14690,15316155:14691,15042971:14692,15043243:14693,15044535:14694,15044744:14695,15049621:14696,15109047:14697,15122336:14698,15249834:14699,15252895:14700,15317689:14701,15041931:14702,15042747:14703,15045002:14704,15047613:14705,15182208:14706,15304119:14707,15316384:14708,15317906:14709,15175044:14710,15121545:14711,15238576:14712,15176849:14713,15056829:14714,15106970:14715,15313576:14716,15174555:14717,15253180:14718,15117732:14881,15310979:14882,14990218:14883,15047600:14884,15048100:14885,15049406:14886,15051162:14887,15106472:14888,15107975:14889,15112335:14890,15112326:14891,15114425:14892,15114929:14893,15120311:14894,15177621:14895,15185082:14896,15239598:14897,15314306:14898,14989979:14899,14990736:14900,15044489:14901,15045766:14902,15054255:14903,15054758:14904,15054766:14905,15114171:14906,15119001:14907,15176115:14908,15179906:14909,15247760:14910,15306390:14911,15246239:14912,15048080:14913,15055527:14914,15109291:14915,15041205:14916,15041196:14917,15042189:14918,15113344:14919,15045513:14920,15049118:14921,15050427:14922,15052464:14923,15056297:14924,15108493:14925,15109793:14926,15114429:14927,15117747:14928,15120520:14929,15172029:14930,15304583:14931,15174272:14932,15179925:14933,15179942:14934,15181229:14935,15111822:14936,15185072:14937,15241116:14938,15246209:14939,15252617:14940,15309467:14941,15042980:14942,15047848:14943,15113616:14944,15187370:14945,15250081:14946,15042228:14947,15048066:14948,15308970:14949,15048890:14950,15115914:14951,15237812:14952,15045298:14953,15053966:14954,15048636:14955,15180437:14956,15316922:14957,14990748:14958,15042954:14959,15045259:14960,15110334:14961,15112360:14962,15113364:14963,15114165:14964,15182468:14965,15183254:14966,15185058:14967,15305903:14968,15114652:14969,15314605:14970,15183033:14971,15043737:14972,15042186:14973,15042743:14974,15052703:15137,15109046:15138,15110830:15139,15111078:15140,15113389:15141,15118010:15142,15242921:15143,15309713:15144,15178384:15145,15314838:15146,15109516:15147,15305862:15148,15314603:15149,15178431:15150,15112594:15151,14989449:15152,15041176:15153,15044482:15154,15053233:15155,15106984:15156,15110802:15157,15111587:15158,15114655:15159,15173542:15160,15175562:15161,15176867:15162,15183511:15163,15186562:15164,15243925:15165,15249027:15166,15250331:15167,15304120:15168,15312016:15169,15111852:15170,15112875:15171,15117963:15172,14990229:15173,14990228:15174,14990522:15175,14990783:15176,15042746:15177,15044536:15178,15044530:15179,15046563:15180,15047579:15181,15049643:15182,15050635:15183,15050633:15184,15050687:15185,15052176:15186,15053197:15187,15054978:15188,15055019:15189,15056791:15190,15106205:15191,15109255:15192,15111343:15193,15052188:15194,15111855:15195,15111869:15196,15112104:15197,15113885:15198,15117730:15199,15117755:15200,15118479:15201,15175045:15202,15181193:15203,15181697:15204,15184824:15205,15185049:15206,15185067:15207,15237794:15208,15238274:15209,15239091:15210,15246998:15211,15247774:15212,15247785:15213,15247782:15214,15248012:15215,15248302:15216,15250311:15217,15250332:15218,15309708:15219,15311804:15220,15117743:15221,14989963:15222,14990524:15223,14990989:15224,15041936:15225,15052183:15226,15052730:15227,15107464:15228,15109249:15229,15112578:15230,15117473:15393,15121291:15394,15119035:15395,15173822:15396,15176381:15397,15177620:15398,15180673:15399,15180986:15400,15237260:15401,15237299:15402,15239082:15403,15241876:15404,15253150:15405,15118736:15406,15317439:15407,15056015:15408,15248792:15409,15316139:15410,15182778:15411,15252408:15412,15052429:15413,15309739:15414,14989443:15415,15044529:15416,15048631:15417,15049905:15418,15051657:15419,15052452:15420,15106697:15421,15120831:15422,15121542:15423,15177406:15424,15250346:15425,15052447:15426,15242368:15427,15183776:15428,15040946:15429,15114164:15430,15239837:15431,15053217:15432,15242634:15433,15186078:15434,15239310:15435,15042201:15436,15052932:15437,15109544:15438,15250854:15439,15111836:15440,15173038:15441,15180990:15442,15185047:15443,15237253:15444,15248541:15445,15252362:15446,15303086:15447,15244167:15448,15303338:15449,15040671:15450,15043514:15451,15052986:15452,15113619:15453,15172028:15454,15173813:15455,15304076:15456,15304584:15457,15305899:15458,15240101:15459,15052674:15460,15056049:15461,15107001:15462,14989499:15463,15044502:15464,15052424:15465,15108491:15466,15113393:15467,15117962:15468,15174569:15469,15175584:15470,15181998:15471,15238571:15472,15251107:15473,15304082:15474,15312534:15475,15041682:15476,15044503:15477,15045034:15478,15052735:15479,15109768:15480,15116473:15481,15185580:15482,15309952:15483,15047578:15484,15044494:15485,15045032:15486,15052439:15649,15052977:15650,15054750:15651,14991278:15652,15107201:15653,15109054:15654,15119538:15655,15181696:15656,15181707:15657,15185282:15658,15186317:15659,15187858:15660,15239085:15661,15239327:15662,15241872:15663,15245702:15664,15246770:15665,15249040:15666,15251892:15667,15252655:15668,15302833:15669,15304075:15670,15304108:15671,15309702:15672,15304348:15673,14990208:15674,14990735:15675,15041925:15676,15043969:15677,15056531:15678,15108238:15679,15114132:15680,15118721:15681,15120523:15682,15175075:15683,15186086:15684,15304589:15685,15305347:15686,15044500:15687,15049881:15688,15052479:15689,15120273:15690,15181213:15691,15186094:15692,15184539:15693,15049150:15694,15173279:15695,15042490:15696,15245715:15697,15253424:15698,14991242:15699,15053755:15700,15112357:15701,15179436:15702,15182755:15703,15239324:15704,15312831:15705,15042438:15706,15056554:15707,15112108:15708,15115695:15709,15117961:15710,15120307:15711,15121046:15712,15121828:15713,15178686:15714,15185044:15715,15054753:15716,15303093:15717,15304327:15718,15310982:15719,15042470:15720,15042717:15721,15108480:15722,15112849:15723,15113113:15724,15120538:15725,15055542:15726,15185810:15727,15187378:15728,15113144:15729,15242927:15730,15243191:15731,15248312:15732,15043241:15733,15044505:15734,15050163:15735,15055503:15736,15056528:15737,15106453:15738,15305636:15739,15309220:15740,15041207:15741,15041695:15742,15043485:15905,15043744:15906,15043975:15907,15044524:15908,15045544:15909,15046022:15910,15045809:15911,15046807:15912,15050152:15913,15050430:15914,15050940:15915,15052469:15916,15052934:15917,15052943:15918,15052945:15919,15052954:15920,15055492:15921,15055498:15922,15055776:15923,15056304:15924,15108543:15925,15108740:15926,15109019:15927,15109772:15928,15109559:15929,15112327:15930,15112332:15931,15112365:15932,15112630:15933,15113662:15934,15114914:15935,15116447:15936,15116469:15937,15119036:15938,15120008:15939,15120521:15940,15120792:15941,15172796:15942,15172774:15943,15173031:15944,15177607:15945,15178881:15946,15180189:15947,15180929:15948,15181221:15949,15181744:15950,15182752:15951,15182993:15952,15184551:15953,15185081:15954,15237782:15955,15241110:15956,15241867:15957,15242633:15958,15245725:15959,15246259:15960,15247519:15961,15247548:15962,15247764:15963,15247795:15964,15249825:15965,15250334:15966,15304356:15967,15305126:15968,15306174:15969,15306904:15970,15309468:15971,15310488:15972,14989450:15973,14989448:15974,14989470:15975,14989719:15976,15042199:15977,15042992:15978,15048590:15979,15048884:15980,15049612:15981,15051938:15982,15055032:15983,15106949:15984,15111102:15985,15113633:15986,15113622:15987,15119748:15988,15174326:15989,15177139:15990,15182243:15991,15241912:15992,15248818:15993,15304376:15994,15305888:15995,15046833:15996,15048628:15997,15311806:15998,15109037:16161,15115405:16162,15117974:16163,15173549:16164,15186324:16165,15237559:16166,15239602:16167,15247270:16168,15311775:16169,15244693:16170,15253169:16171,15052987:16172,14990520:16173,14991265:16174,14991029:16175,15045767:16176,15050912:16177,15052701:16178,15052713:16179,15056771:16180,15107470:16181,15109295:16182,15111856:16183,15112587:16184,15115182:16185,15115931:16186,15119800:16187,15120305:16188,15176883:16189,15177401:16190,15178911:16191,15181214:16192,15181734:16193,15185075:16194,15239075:16195,15239855:16196,15242922:16197,15247018:16198,15247546:16199,15252139:16200,15253147:16201,15302834:16202,15304605:16203,15309959:16204,14990010:16205,14990209:16206,15042691:16207,15049141:16208,15049644:16209,15052939:16210,15176858:16211,15052989:16212,15238542:16213,15247498:16214,15253381:16215,15309219:16216,15310253:16217,15183013:16218,15248271:16219,15310984:16220,15304098:16221,15047603:16222,15044264:16223,15302807:16224,15044793:16225,15048322:16226,15055013:16227,15109800:16228,15118516:16229,15172234:16230,15179169:16231,15184523:16232,15187872:16233,15245744:16234,15303042:16235,15304084:16236,15305872:16237,15305880:16238,15309455:16239,15176094:16240,15313796:16241,15053959:16242,15054249:16243,15111600:16244,15113890:16245,15251112:16246,15309723:16247,15109550:16248,15113609:16249,15115417:16250,15241093:16251,15310999:16252,15309696:16253,15246270:16254,15122052:16417,15110586:16418,15052728:16419,14989462:16420,15171756:16421,15177117:16422,15112367:16423,15042436:16424,15042742:16425,15043490:16426,15050643:16427,15056513:16428,15106215:16429,15108240:16430,15111359:16431,15111604:16432,15112351:16433,15112628:16434,15115186:16435,15114390:16436,15117731:16437,15120517:16438,15174066:16439,15176863:16440,15178651:16441,15184574:16442,15237526:16443,15049648:16444,15246269:16445,15246783:16446,15248032:16447,15248019:16448,15248267:16449,15302813:16450,15304338:16451,15310226:16452,15310233:16453,15111817:16454,15181966:16455,15238278:16456,15309499:16457,15055021:16458,15106972:16459,15108250:16460,15111845:16461,15112340:16462,15113872:16463,15179699:16464,15182221:16465,15184269:16466,15186110:16467,15238282:16468,15250092:16469,15250852:16470,15251361:16471,15251871:16472,15180457:16473,15042695:16474,15109017:16475,15109797:16476,15110530:16477,15108760:16478,15247533:16479,15182467:16480,15183744:16481,15248044:16482,15309738:16483,15185334:16484,15239308:16485,15244681:16486,14990233:16487,15041928:16488,15043971:16489,15044e3:16490,15052451:16491,15052930:16492,15052950:16493,15054749:16494,15108262:16495,15108487:16496,15110832:16497,15114387:16498,15114420:16499,15119241:16500,15119749:16501,15119511:16502,15114131:16503,15121820:16504,15173006:16505,15173053:16506,15112075:16507,15182271:16508,15183533:16509,15185818:16510,15186314:16673,15187624:16674,15238586:16675,15239323:16676,15239353:16677,15242918:16678,15247790:16679,15250318:16680,15251381:16681,15303096:16682,15303095:16683,15305389:16684,15305361:16685,15308419:16686,15314606:16687,15042957:16688,15046276:16689,15121592:16690,15172790:16691,15041960:16692,15181445:16693,15186325:16694,15238835:16695,15184782:16696,15047052:16697,15049105:16698,15053480:16699,15109802:16700,15113150:16701,15113149:16702,15115674:16703,15174553:16704,15177359:16705,15177358:16706,15180942:16707,15181206:16708,15181727:16709,15184535:16710,15185056:16711,15185284:16712,15243399:16713,15247540:16714,15308987:16715,15303073:16716,15318176:16717,15041447:16718,15042997:16719,15044492:16720,15044514:16721,15040649:16722,15046314:16723,15049646:16724,15050127:16725,15173821:16726,15052427:16727,15053220:16728,15043741:16729,15106979:16730,15106995:16731,15109532:16732,15109763:16733,15109311:16734,15109819:16735,15111053:16736,15112105:16737,15113145:16738,15054755:16739,15116173:16740,15116221:16741,15121557:16742,15173541:16743,14989961:16744,15177641:16745,15178680:16746,15182483:16747,15184799:16748,15185807:16749,15185564:16750,15237537:16751,15240585:16752,15240600:16753,15241644:16754,15241916:16755,15243195:16756,15246213:16757,15250864:16758,15302785:16759,15303085:16760,15306391:16761,15309980:16762,15313042:16763,15041423:16764,15049367:16765,15107726:16766,15239059:16929,15242421:16930,15250568:16931,15302816:16932,14991235:16933,15040948:16934,15042951:16935,15044019:16936,15106479:16937,15109513:16938,15113631:16939,15120556:16940,15251123:16941,15302815:16942,14991255:16943,15053214:16944,15250314:16945,15112079:16946,15185562:16947,15043986:16948,15245974:16949,15041974:16950,15110019:16951,15052184:16952,15052203:16953,15052938:16954,15110285:16955,15113617:16956,15303068:16957,14990230:16958,15049882:16959,15049898:16960,15118768:16961,15247761:16962,15045822:16963,15048853:16964,15050405:16965,15106992:16966,15108499:16967,15114113:16968,15239349:16969,15115669:16970,15309184:16971,15312772:16972,15313064:16973,14990739:16974,15048838:16975,15052734:16976,15237264:16977,15053489:16978,15055023:16979,15056517:16980,15106208:16981,15107467:16982,15108276:16983,15113151:16984,15119280:16985,15121310:16986,15238030:16987,15238591:16988,15240084:16989,15245963:16990,15250104:16991,15302784:16992,15302830:16993,15309450:16994,15317915:16995,15314843:16996,14990243:16997,15044528:16998,15049895:16999,15183020:17e3,15304333:17001,15311244:17002,15316921:17003,15121309:17004,15171751:17005,15043987:17006,15046020:17007,15052421:17008,15108504:17009,15108766:17010,15109011:17011,15119010:17012,15122351:17013,15175842:17014,15247511:17015,15306936:17016,15122305:17017,15248318:17018,15240376:17019,15042471:17020,15244216:17021,15044522:17022,15044521:17185,14990726:17186,15303060:17187,15253168:17188,15050154:17189,15238321:17190,15054781:17191,15182762:17192,15253183:17193,15115162:17194,15249591:17195,15174584:17196,15315336:17197,15116477:17198,15248048:17199,14989497:17200,15043992:17201,15046790:17202,15048102:17203,15108997:17204,15109794:17205,15112102:17206,15117710:17207,15120289:17208,15120795:17209,15172269:17210,15179693:17211,15182767:17212,15183530:17213,15185595:17214,15237309:17215,15238022:17216,15244171:17217,15248021:17218,15306139:17219,15047587:17220,15049607:17221,15056062:17222,15111853:17223,15112854:17224,15116928:17225,15118005:17226,15176887:17227,15248263:17228,15040676:17229,15179685:17230,15047856:17231,15056027:17232,15106469:17233,15112634:17234,15118752:17235,15177652:17236,15181978:17237,15187374:17238,15239092:17239,15244440:17240,15303045:17241,15312563:17242,15183753:17243,15177116:17244,15182777:17245,15183249:17246,15242116:17247,15302800:17248,15181737:17249,15182482:17250,15240374:17251,15051681:17252,15179136:17253,14989485:17254,14990258:17255,15052441:17256,15056800:17257,15108797:17258,15112380:17259,15114161:17260,15119272:17261,15243691:17262,15245751:17263,15247547:17264,15304078:17265,15305651:17266,15312784:17267,15116439:17268,15171750:17269,15174826:17270,15240103:17271,15241623:17272,15250095:17273,14989441:17274,15041926:17275,15042443:17276,15046283:17277,15052725:17278,15054998:17441,15055027:17442,15055489:17443,15056020:17444,15056053:17445,15056299:17446,15056564:17447,15108018:17448,15109265:17449,15112866:17450,15113373:17451,15121838:17452,15174034:17453,15176890:17454,15178938:17455,15237556:17456,15238329:17457,15238584:17458,15244726:17459,15248063:17460,15248284:17461,15251077:17462,15251379:17463,15305370:17464,15308215:17465,15310978:17466,15315877:17467,15043461:17468,15109527:17469,15178676:17470,15113365:17471,15118984:17472,15175565:17473,15250307:17474,15306414:17475,15309235:17476,15119525:17477,15049372:17478,15115406:17479,15116172:17480,15253437:17481,15306394:17482,15177627:17483,15302810:17484,15049114:17485,15114370:17486,15109812:17487,15116219:17488,14990723:17489,15121580:17490,15114136:17491,15253179:17492,15242406:17493,15185588:17494,15306132:17495,15115455:17496,15121840:17497,15048106:17498,15049655:17499,15051948:17500,15185068:17501,15173802:17502,15044746:17503,15304611:17504,15316660:17505,14989997:17506,14990734:17507,15040924:17508,15040949:17509,15042947:17510,15250078:17511,15045e3:17512,15048868:17513,15052442:17514,15055005:17515,15055509:17516,15055533:17517,15055799:17518,15056031:17519,15106700:17520,15108789:17521,15109306:17522,15110032:17523,15114927:17524,15118720:17525,15180423:17526,15181454:17527,15181963:17528,15185824:17529,15239559:17530,15247490:17531,15248294:17532,15251844:17533,15302803:17534,15303352:17697,15303853:17698,15304600:17699,15318158:17700,15119269:17701,15110552:17702,15111074:17703,15111605:17704,15121332:17705,15178372:17706,15183003:17707,15303081:17708,15306641:17709,15121082:17710,15045554:17711,15056569:17712,15110820:17713,15252877:17714,15253421:17715,15305092:17716,15041976:17717,15049131:17718,15049897:17719,15053205:17720,15055511:17721,15120315:17722,15186575:17723,15176860:17724,15250108:17725,15252386:17726,15311259:17727,15172281:17728,14990493:17729,15118015:17730,15122097:17731,15176880:17732,15309755:17733,15041934:17734,15044752:17735,15048885:17736,15049111:17737,15050412:17738,15053216:17739,15056530:17740,15111831:17741,15113628:17742,15120545:17743,15178171:17744,15241119:17745,15250349:17746,15302804:17747,15303613:17748,15306125:17749,15179941:17750,15179962:17751,15043242:17752,15055526:17753,15047839:17754,15050164:17755,15106194:17756,15040658:17757,15041946:17758,15042220:17759,15042445:17760,15042688:17761,15045776:17762,15049108:17763,15049112:17764,15050135:17765,15052437:17766,15053750:17767,15054475:17768,15106748:17769,15108757:17770,15110317:17771,15113649:17772,15114627:17773,15114940:17774,15115167:17775,15178647:17776,15120280:17777,15120815:17778,15120027:17779,15172015:17780,15173512:17781,15056275:17782,15177624:17783,15181239:17784,15183241:17785,15183252:17786,15183250:17787,15184790:17788,15185329:17789,15042736:17790,15241635:17953,15242665:17954,15243172:17955,15247502:17956,15248516:17957,15249798:17958,15251599:17959,15302787:17960,15302799:17961,15306905:17962,15309238:17963,15311021:17964,15313072:17965,15308696:17966,15041421:17967,15043477:17968,15044748:17969,15048834:17970,15052942:17971,15107751:17972,15110814:17973,15119518:17974,15179443:17975,15182757:17976,15238068:17977,15241348:17978,15303059:17979,15305349:17980,15053728:17981,15316103:17982,15043775:17983,15056535:17984,15056563:17985,15120028:17986,15174073:17987,15179171:17988,15181503:17989,15183780:17990,15118226:17991,15174572:17992,15248045:17993,15114371:17994,15116705:17995,15042488:17996,15182465:17997,15115444:17998,15053194:17999,15315894:18e3,15240107:18001,15052677:18002,15304073:18003,15171742:18004,15047096:18005,15053231:18006,15106951:18007,15111590:18008,15118988:18009,15249818:18010,15303041:18011,15310995:18012,15045009:18013,15113095:18014,15304845:18015,15050120:18016,15303331:18017,15042181:18018,14989709:18019,15042474:18020,15242905:18021,15248526:18022,15171992:18023,15109562:18024,15306123:18025,15115682:18026,15312564:18027,15186052:18028,15177143:18029,15043991:18030,15115680:18031,15252383:18032,15309731:18033,15118749:18034,14989964:18035,15052988:18036,15056016:18037,15253417:18038,15043714:18039,15250321:18040,15237769:18041,15243705:18042,15055807:18043,15112101:18044,14989747:18045,15041957:18046,15050370:18209,15052991:18210,15310766:18211,14990267:18212,15050378:18213,15056781:18214,15248013:18215,15122337:18216,15181488:18217,15181218:18218,15052711:18219,15241649:18220,15174827:18221,15173297:18222,15055284:18223,15056821:18224,15109563:18225,15110810:18226,15173507:18227,15184536:18228,14989699:18229,15055804:18230,14989707:18231,15048604:18232,15047330:18233,15106729:18234,15122307:18235,15185037:18236,15238077:18237,15238323:18238,15238847:18239,15253170:18240,15246999:18241,15243940:18242,15054772:18243,15108746:18244,15110829:18245,15246983:18246,15113655:18247,15119266:18248,15119550:18249,15175862:18250,15179956:18251,15051142:18252,15187381:18253,15239853:18254,15312556:18255,14991283:18256,15055747:18257,15109021:18258,15109778:18259,15111575:18260,15113647:18261,15178627:18262,15174028:18263,15238028:18264,15237818:18265,15252649:18266,15304077:18267,15040653:18268,15048633:18269,15051410:18270,15114885:18271,15115699:18272,15173028:18273,15174589:18274,15250103:18275,15049650:18276,15250336:18277,15309226:18278,15302809:18279,15244735:18280,15181732:18281,15179687:18282,15241385:18283,14990511:18284,15042981:18285,15043994:18286,15109005:18287,15114127:18288,15119242:18289,15178173:18290,15183508:18291,15184533:18292,15239350:18293,15242884:18294,15253419:18295,15113117:18296,15121568:18297,15173766:18298,15186075:18299,15240875:18300,15312769:18301,15317670:18302,15042493:18465,15183537:18466,15180210:18467,15183544:18468,15237767:18469,15183240:18470,15117224:18471,15055265:18472,15237772:18473,15177105:18474,15177120:18475,15041963:18476,15305122:18477,15121036:18478,15178170:18479,15304343:18480,15313834:18481,14990480:18482,15187376:18483,15108764:18484,15183247:18485,15308453:18486,15315881:18487,15047098:18488,15049113:18489,15244196:18490,15309500:18491,14990516:18492,15042724:18493,15043978:18494,15044493:18495,15044507:18496,15054982:18497,15110316:18498,15111825:18499,15113663:18500,15118526:18501,15118734:18502,15174024:18503,15174319:18504,15175597:18505,15177108:18506,15186305:18507,15239340:18508,15243177:18509,15250089:18510,15183748:18511,15304582:18512,15173033:18513,15310994:18514,15311791:18515,15109309:18516,15112617:18517,15177130:18518,15178660:18519,15180688:18520,15242627:18521,15244206:18522,15043754:18523,15043985:18524,15044774:18525,15050371:18526,15055495:18527,15056316:18528,15106738:18529,15108489:18530,15108537:18531,15108779:18532,15111824:18533,15118228:18534,15119244:18535,15177394:18536,15178414:18537,15180433:18538,15181720:18539,15185803:18540,15187383:18541,15237797:18542,15245995:18543,15248057:18544,15250107:18545,15303103:18546,15310238:18547,15311771:18548,15116427:18549,15184056:18550,15041177:18551,15052990:18552,15056558:18553,15113863:18554,15118232:18555,15175861:18556,15178889:18557,15187598:18558,15318203:18721,15114122:18722,15181975:18723,15043769:18724,15177355:18725,15313837:18726,15056294:18727,15238813:18728,15241137:18729,15237784:18730,15056060:18731,15056773:18732,15177122:18733,15183238:18734,15302844:18735,15114663:18736,15050667:18737,15051419:18738,15185040:18739,15178174:18740,15248556:18741,14991285:18742,15056298:18743,15116441:18744,15118519:18745,15121538:18746,15176610:18747,15181224:18748,15245736:18749,15247765:18750,15249849:18751,15055775:18752,15110031:18753,15177605:18754,15181714:18755,15240087:18756,15305896:18757,15305650:18758,15241884:18759,15244205:18760,15315117:18761,15045505:18762,15056300:18763,15111820:18764,15119772:18765,15171733:18766,15250087:18767,15250323:18768,15311035:18769,15111567:18770,15176630:18771,14989453:18772,14990232:18773,15048608:18774,15049899:18775,15051174:18776,15052684:18777,15042216:18778,15054979:18779,15055516:18780,15106198:18781,15108534:18782,15111607:18783,15111847:18784,15112622:18785,15119790:18786,15173814:18787,15183014:18788,15238544:18789,15238810:18790,15239833:18791,15248796:18792,15250080:18793,15250342:18794,15250868:18795,15308956:18796,15309188:18797,14991022:18798,15110827:18799,15117734:18800,15239326:18801,15241633:18802,15242666:18803,15303592:18804,15052929:18805,15115667:18806,15311528:18807,15241658:18808,15242647:18809,14990479:18810,15042991:18811,15056553:18812,15055237:18813,15113357:18814,15181455:18977,15238585:18978,15246471:18979,15246982:18980,15120309:18981,15056023:18982,15108501:18983,15119032:18984,14990223:18985,15174057:18986,15314578:18987,15042694:18988,15044795:18989,15047092:18990,15049395:18991,15107748:18992,15108526:18993,15172762:18994,15050158:18995,15184521:18996,15184798:18997,15185051:18998,15309744:18999,15111815:19e3,15237534:19001,14989465:19002,14990773:19003,15041973:19004,15049088:19005,15055267:19006,15055283:19007,15056010:19008,15114116:19009,14989478:19010,15242429:19011,15308425:19012,15309211:19013,15184307:19014,15310977:19015,15041467:19016,15049601:19017,15178134:19018,15180455:19019,15042725:19020,15179429:19021,15242385:19022,15183494:19023,15040911:19024,15049865:19025,15174023:19026,15183751:19027,15185832:19028,15253178:19029,15253396:19030,15303053:19031,14991039:19032,15043465:19033,15050921:19034,15056001:19035,15310509:19036,14991261:19037,15239319:19038,15305642:19039,15047811:19040,15109525:19041,15117737:19042,15176875:19043,15246236:19044,15252628:19045,15182210:19046,15043487:19047,15049363:19048,15107477:19049,15108234:19050,15112878:19051,15118221:19052,15184063:19053,15241129:19054,15040675:19055,14991288:19056,15043717:19057,15044998:19058,15048881:19059,15050121:19060,15052445:19061,15053744:19062,15053743:19063,15053993:19064,15055510:19065,15108785:19066,15109543:19067,15111358:19068,15111865:19069,15113355:19070,15119253:19233,15119265:19234,15172537:19235,15179954:19236,15186091:19237,15238046:19238,15239859:19239,15241356:19240,15242156:19241,15244418:19242,15246482:19243,15247530:19244,15249802:19245,15303334:19246,15305618:19247,15311805:19248,15315891:19249,15316396:19250,14989711:19251,14989985:19252,15041165:19253,15042966:19254,15048074:19255,15050408:19256,15055037:19257,15056792:19258,15056793:19259,15108287:19260,15112884:19261,15113371:19262,15114128:19263,15115154:19264,15042194:19265,15185057:19266,15237802:19267,15238824:19268,15248512:19269,15250060:19270,15250111:19271,15305150:19272,15308978:19273,15044768:19274,15311020:19275,15043735:19276,15041429:19277,15043996:19278,15049384:19279,15110834:19280,15113396:19281,15174055:19282,15179174:19283,15182214:19284,15304614:19285,15043459:19286,15119009:19287,15117958:19288,15048832:19289,15055244:19290,15050132:19291,15113388:19292,15187899:19293,15042465:19294,15178630:19295,15110569:19296,15180712:19297,15314324:19298,15317691:19299,15048587:19300,15050425:19301,15112359:19302,15113882:19303,15118222:19304,15045545:19305,15116185:19306,15055253:19307,15238812:19308,15113877:19309,15314602:19310,15114174:19311,15315346:19312,15114653:19313,14989990:19314,14991267:19315,15044488:19316,15108793:19317,15113387:19318,15119019:19319,15253380:19320,14991021:19321,15186349:19322,15317695:19323,14989447:19324,15107490:19325,15121024:19326,15121579:19489,15242387:19490,15045043:19491,15113386:19492,15314309:19493,15054771:19494,15183509:19495,15053484:19496,15052678:19497,15244444:19498,15120778:19499,15242129:19500,15181972:19501,15238280:19502,15050393:19503,15184525:19504,15118481:19505,15178912:19506,15043481:19507,15049890:19508,15172769:19509,15174047:19510,15179675:19511,15309991:19512,15316385:19513,15115403:19514,15051199:19515,15050904:19516,15042213:19517,15044749:19518,15045053:19519,15112334:19520,15178655:19521,15253431:19522,15305368:19523,15315892:19524,15050666:19525,15174045:19526,15121285:19527,15041933:19528,15115145:19529,15185599:19530,15185836:19531,15310242:19532,15317690:19533,15110584:19534,15116449:19535,15240322:19536,15050372:19537,15052191:19538,15118235:19539,15174811:19540,15178674:19541,15185586:19542,15237271:19543,15241881:19544,15041714:19545,15113384:19546,15317913:19547,15178670:19548,15113634:19549,15043519:19550,15312005:19551,15052964:19552,15108283:19553,15184318:19554,15250096:19555,15046031:19556,15106742:19557,15185035:19558,15308416:19559,15043713:19560,14989727:19561,15042230:19562,15049884:19563,15173818:19564,15237302:19565,15304590:19566,15056037:19567,15179682:19568,15044228:19569,15056313:19570,15185028:19571,15242924:19572,15247539:19573,15252109:19574,15310230:19575,15114163:19576,15242926:19577,15307155:19578,15107209:19579,15107208:19580,15119033:19581,15178130:19582,15248301:19745,15252664:19746,15045807:19747,14990737:19748,15041706:19749,15043463:19750,15044491:19751,15052453:19752,15055293:19753,15106720:19754,15107714:19755,15110038:19756,15113353:19757,15114138:19758,15120807:19759,15120012:19760,15174838:19761,15174839:19762,15176881:19763,15181200:19764,15246229:19765,15248024:19766,15303050:19767,15303313:19768,15303605:19769,15309700:19770,15244941:19771,15049877:19772,14989960:19773,14990745:19774,14989454:19775,15248009:19776,15252671:19777,15310992:19778,15041197:19779,15055292:19780,15050390:19781,15052473:19782,15055544:19783,15110042:19784,15110074:19785,15111041:19786,15113116:19787,15115658:19788,15116184:19789,15119499:19790,15121078:19791,15173268:19792,15176872:19793,15182511:19794,15187594:19795,15237248:19796,15241609:19797,15242121:19798,15246977:19799,15248545:19800,15251594:19801,15303077:19802,15309245:19803,15312010:19804,15107518:19805,15108753:19806,15117490:19807,15118979:19808,15119796:19809,15187852:19810,15187900:19811,15120256:19812,15187589:19813,15244986:19814,15246264:19815,15113637:19816,15240881:19817,15311036:19818,15309751:19819,15119515:19820,15185313:19821,15241405:19822,15304106:19823,14989745:19824,15044021:19825,15054224:19826,15117444:19827,15122347:19828,15243149:19829,15243437:19830,15247015:19831,15042729:19832,15044751:19833,15053221:19834,15113614:19835,15114920:19836,15175814:19837,15176323:19838,15177634:20001,15246223:20002,15246241:20003,15304588:20004,15309730:20005,15309240:20006,15056523:20007,15175303:20008,15182731:20009,15241614:20010,15109792:20011,15177125:20012,15043209:20013,15119745:20014,15121052:20015,15175817:20016,15177113:20017,15180203:20018,15184530:20019,15309446:20020,15182748:20021,15318669:20022,14991030:20023,15107502:20024,15112069:20025,15243676:20026,14989958:20027,14989998:20028,15041434:20029,14989473:20030,15042444:20031,15052718:20032,15111833:20033,15114881:20034,15120060:20035,15174815:20036,15178114:20037,15179437:20038,15181980:20039,15184807:20040,15239599:20041,15248274:20042,15303100:20043,15304591:20044,15309237:20045,15311e3:20046,15043227:20047,15185809:20048,15040683:20049,15044248:20050,15113879:20051,15120267:20052,15173520:20053,15175859:20054,15239080:20055,15252650:20056,15309475:20057,15315351:20058,15317663:20059,15176096:20060,15049089:20061,15120025:20062,15185071:20063,15311262:20064,14990244:20065,14990518:20066,14990987:20067,15042231:20068,15043249:20069,15054522:20070,15106204:20071,15175346:20072,15180988:20073,15240083:20074,15304884:20075,15309495:20076,15309750:20077,15309962:20078,15317655:20079,15318434:20080,15112870:20081,15117748:20082,15042711:20083,15043235:20084,15172488:20085,15246210:20086,15055753:20087,15106443:20088,15107728:20089,15121571:20090,15173001:20091,15184062:20092,15185844:20093,15237551:20094,15242158:20257,15302819:20258,15305900:20259,15044994:20260,15314351:20261,15117203:20262,15172233:20263,15250306:20264,15251375:20265,15310002:20266,15043252:20267,15051137:20268,15055754:20269,15056004:20270,15113367:20271,15115708:20272,15115924:20273,15119786:20274,15121551:20275,15174050:20276,15174588:20277,15183789:20278,15237249:20279,15237566:20280,15244683:20281,15303566:20282,15041965:20283,15317651:20284,15181444:20285,15237771:20286,15305906:20287,15248278:20288,15040685:20289,15045260:20290,15247793:20291,15117738:20292,15250308:20293,15238279:20294,15106961:20295,15113888:20296,15316914:20297,14989977:20298,14989976:20299,15315088:20300,15247787:20301,15243137:20302,15242664:20303,15115392:20304,15120830:20305,15180439:20306,15238549:20307,15056012:20513,14989456:20514,14989461:20515,14989482:20516,14989489:20517,14989494:20518,14989500:20519,14989503:20520,14989698:20521,14989718:20522,14989720:20523,14989954:20524,14989957:20525,15249835:20526,14989962:20527,15239314:20528,15056013:20529,14989966:20530,14989982:20531,14989983:20532,14989984:20533,14989986:20534,1499e4:20535,14990003:20536,14990006:20537,14990222:20538,14990221:20539,14990212:20540,14990214:20541,14990210:20542,14990231:20543,14990238:20544,14990253:20545,14990239:20546,14990263:20547,14990473:20548,14990746:20549,14990512:20550,14990747:20551,14990749:20552,14990743:20553,14990727:20554,14990774:20555,14990984:20556,14990991:20557,14991e3:20558,14990779:20559,14990761:20560,14990768:20561,14990993:20562,14990767:20563,14990982:20564,14990998:20565,15041688:20566,14991252:20567,14991263:20568,14991246:20569,14991256:20570,14991259:20571,14991249:20572,14991258:20573,14991248:20574,14991268:20575,14991269:20576,15040666:20577,15040680:20578,15040660:20579,15040682:20580,15040677:20581,15040645:20582,14990492:20583,14991286:20584,15040673:20585,15040681:20586,15040684:20587,14991294:20588,14991279:20589,15040657:20590,15040646:20591,15040899:20592,15040903:20593,15113347:20594,15040917:20595,15040912:20596,15040904:20597,15040922:20598,15040918:20599,15040940:20600,15040952:20601,15041152:20602,15041178:20603,15041157:20604,15041204:20605,15041202:20606,15041417:20769,15041418:20770,15041203:20771,15041410:20772,15041430:20773,15041438:20774,15041445:20775,15041453:20776,15041443:20777,15041454:20778,15041465:20779,15041461:20780,15041673:20781,15041665:20782,15041666:20783,15041686:20784,15041685:20785,15041684:20786,15041690:20787,15041697:20788,15041722:20789,15041719:20790,15041724:20791,15041723:20792,15041727:20793,15041920:20794,15041938:20795,15041932:20796,15041940:20797,15041954:20798,15182776:20799,15041961:20800,15041962:20801,15041966:20802,15042176:20803,15042178:20804,15047576:20805,15042188:20806,15042185:20807,15042191:20808,15042193:20809,15042195:20810,15042197:20811,15042198:20812,15042212:20813,15042214:20814,15042210:20815,15042217:20816,15042218:20817,15042219:20818,15042227:20819,15042225:20820,15042226:20821,15042224:20822,15042229:20823,15042237:20824,15042437:20825,15042441:20826,15042459:20827,15042464:20828,15243669:20829,15042473:20830,15042477:20831,15042480:20832,15042485:20833,15042494:20834,15042692:20835,15042699:20836,15042708:20837,15042702:20838,15042727:20839,15042730:20840,15042734:20841,15042739:20842,15042745:20843,15042959:20844,15042948:20845,15042955:20846,15042956:20847,15042974:20848,15042964:20849,15042986:20850,15042996:20851,15042985:20852,15042995:20853,15043007:20854,15043005:20855,15043213:20856,15043220:20857,15043218:20858,15042993:20859,15043208:20860,15043217:20861,15253160:20862,15253159:21025,15043244:21026,15043245:21027,15043260:21028,15043253:21029,15043457:21030,15043469:21031,15043479:21032,15043486:21033,15043491:21034,15043494:21035,15311789:21036,15043488:21037,15043507:21038,15043509:21039,15043512:21040,15043513:21041,15043718:21042,15043720:21043,15176888:21044,15043725:21045,15043728:21046,15043727:21047,15043733:21048,15043738:21049,15043747:21050,15043759:21051,15043761:21052,15043763:21053,15043768:21054,15043968:21055,15043974:21056,15043973:21057,14989463:21058,15043977:21059,15043981:21060,15042454:21061,15043998:21062,15044009:21063,15044014:21064,15049880:21065,15044027:21066,15044023:21067,15044226:21068,15044246:21069,15044256:21070,15044262:21071,15044261:21072,15044270:21073,15044272:21074,15044278:21075,15044483:21076,15184018:21077,15309721:21078,15044511:21079,15113148:21080,15173550:21081,15044526:21082,15044520:21083,15044525:21084,15044538:21085,15044737:21086,15044797:21087,15044992:21088,15044780:21089,15044781:21090,15044796:21091,15044782:21092,15044790:21093,15044777:21094,15044765:21095,15045006:21096,15045263:21097,15045045:21098,15045262:21099,15045023:21100,15045041:21101,15045047:21102,15045040:21103,15045266:21104,15045051:21105,15045248:21106,15045046:21107,15045252:21108,15045264:21109,15045254:21110,15045511:21111,15045282:21112,15045304:21113,15045285:21114,15045292:21115,15045508:21116,15045512:21117,15045288:21118,15045291:21281,15045506:21282,15045284:21283,15045310:21284,15045308:21285,15045528:21286,15045541:21287,15045542:21288,15045775:21289,15045780:21290,15045565:21291,15045550:21292,15045549:21293,15045562:21294,15045538:21295,15045817:21296,15046016:21297,15046051:21298,15046028:21299,15045806:21300,15046044:21301,15046021:21302,15046038:21303,15046039:21304,15045816:21305,15045811:21306,15046045:21307,15046297:21308,15046272:21309,15045295:21310,15046282:21311,15046303:21312,15046075:21313,15046078:21314,15046296:21315,15046302:21316,15046318:21317,15046076:21318,15046275:21319,15046313:21320,15046279:21321,15046312:21322,15046554:21323,15046533:21324,15046559:21325,15046532:21326,15046556:21327,15046564:21328,15046548:21329,15046804:21330,15046583:21331,15046806:21332,15046590:21333,15046589:21334,15046811:21335,15046585:21336,15047054:21337,15047056:21338,15173535:21339,15046836:21340,15046838:21341,15046834:21342,15046840:21343,15047083:21344,15047076:21345,15046831:21346,15047084:21347,15047082:21348,15047302:21349,15047296:21350,15047306:21351,15047328:21352,15047316:21353,15047311:21354,15047333:21355,15047342:21356,15047350:21357,15047348:21358,15047554:21359,15047356:21360,15047553:21361,15047555:21362,15047552:21363,15047560:21364,15047566:21365,15047569:21366,15047571:21367,15047575:21368,15047598:21369,15047609:21370,15047808:21371,15047615:21372,15047812:21373,15047817:21374,15047816:21537,15047819:21538,15047821:21539,15047827:21540,15047832:21541,15047830:21542,15046535:21543,15047836:21544,15047846:21545,15047863:21546,15047864:21547,15048078:21548,15047867:21549,15048064:21550,15048079:21551,15048105:21552,15048576:21553,15048328:21554,15048097:21555,15048127:21556,15048329:21557,15048339:21558,15048352:21559,15048371:21560,15048356:21561,15048362:21562,15048368:21563,15048579:21564,15048582:21565,15048596:21566,15048594:21567,15048595:21568,15048842:21569,15048598:21570,15048611:21571,15048843:21572,15048857:21573,15048861:21574,15049138:21575,15048865:21576,15049122:21577,15049099:21578,15049136:21579,15118208:21580,15049106:21581,15048893:21582,15049145:21583,15049349:21584,15049401:21585,15049375:21586,15049387:21587,15049402:21588,15049630:21589,15049403:21590,15049400:21591,15049390:21592,15049605:21593,15049619:21594,15049617:21595,15049623:21596,15049625:21597,15049624:21598,15049637:21599,15049628:21600,15049636:21601,15049631:21602,15049647:21603,15049658:21604,15049657:21605,15049659:21606,15049660:21607,15049661:21608,15049858:21609,15049866:21610,15049872:21611,15049883:21612,15114918:21613,15049893:21614,15049900:21615,15049901:21616,15049906:21617,15049912:21618,15049918:21619,15182738:21620,15050133:21621,15050128:21622,15050126:21623,15050138:21624,15050136:21625,15050146:21626,15050144:21627,15050151:21628,15050156:21629,15050153:21630,15050168:21793,15050369:21794,15050397:21795,14990750:21796,14991019:21797,15050403:21798,15050418:21799,15050630:21800,15050664:21801,15050652:21802,15050381:21803,15050649:21804,15050650:21805,15050917:21806,15050911:21807,15050897:21808,15050908:21809,15050889:21810,15050906:21811,15051136:21812,15051180:21813,15051145:21814,15050933:21815,15050934:21816,15051170:21817,15051178:21818,15051418:21819,15051452:21820,15051454:21821,15051659:21822,15051650:21823,15051453:21824,15051683:21825,15051671:21826,15051686:21827,15051689:21828,15051670:21829,15051706:21830,15051707:21831,15051916:21832,15051915:21833,15051926:21834,15051954:21835,15051664:21836,15051946:21837,15051958:21838,15051966:21839,15052163:21840,15052165:21841,15052160:21842,15052177:21843,15052181:21844,15052186:21845,15052187:21846,15052197:21847,15052201:21848,15052208:21849,15052211:21850,15052213:21851,15052216:21852,15111816:21853,15052218:21854,15052416:21855,15052419:21856,15052454:21857,15052472:21858,15052675:21859,15052679:21860,15052681:21861,15052692:21862,15052688:21863,15052708:21864,15052710:21865,15052706:21866,15052702:21867,15052709:21868,15052715:21869,15052720:21870,15052726:21871,15052723:21872,15052933:21873,15052935:21874,15052936:21875,15052941:21876,15052947:21877,15052960:21878,15052962:21879,15052968:21880,15052984:21881,15052985:21882,15053185:21883,15053190:21884,15053198:21885,15053203:21886,15053200:22049,15053199:22050,15052209:22051,15053228:22052,15053230:22053,14989730:22054,15053238:22055,15053241:22056,15053452:22057,15053457:22058,15053460:22059,15050395:22060,15053483:22061,15053499:22062,15053494:22063,15053500:22064,15053495:22065,15053701:22066,15053502:22067,15053703:22068,15053721:22069,15053737:22070,15053757:22071,15053754:22072,15053741:22073,15054476:22074,15053738:22075,15053963:22076,15053973:22077,15053975:22078,15054236:22079,15053983:22080,15053979:22081,15053969:22082,15053972:22083,15053986:22084,15053978:22085,15053977:22086,15053976:22087,15054220:22088,15054226:22089,15054222:22090,15054219:22091,15054252:22092,15054259:22093,15054262:22094,15054471:22095,15054468:22096,15054466:22097,15054498:22098,15054493:22099,15054508:22100,15054510:22101,15054525:22102,15054480:22103,15054519:22104,15054524:22105,15054729:22106,15054733:22107,15054739:22108,15054738:22109,15054742:22110,15054747:22111,15054763:22112,15054770:22113,15054773:22114,15054987:22115,15055002:22116,15055001:22117,15054993:22118,15055003:22119,15055030:22120,15055031:22121,15055236:22122,15055235:22123,15055232:22124,15055246:22125,15055255:22126,15055252:22127,15055263:22128,15055266:22129,15055268:22130,15055239:22131,15055285:22132,15055286:22133,15055290:22134,15317692:22135,15055295:22136,15055520:22137,15055745:22138,15055746:22139,15055752:22140,15055760:22141,15055759:22142,15055766:22305,15055779:22306,15055773:22307,15055770:22308,15055771:22309,15055778:22310,15055777:22311,15055784:22312,15055785:22313,15055788:22314,15055793:22315,15055795:22316,15055792:22317,15055796:22318,15055800:22319,15055806:22320,15056003:22321,15056009:22322,15056285:22323,15056284:22324,15056011:22325,15056017:22326,15056022:22327,15056041:22328,15056045:22329,15056056:22330,15056257:22331,15056264:22332,15056268:22333,15056270:22334,15056047:22335,15056273:22336,15056278:22337,15056279:22338,15056281:22339,15056289:22340,15056301:22341,15056307:22342,15056311:22343,15056515:22344,15056514:22345,15056319:22346,15056522:22347,15056520:22348,15056529:22349,15056519:22350,15056542:22351,15056537:22352,15056536:22353,15056544:22354,15056552:22355,15056557:22356,15056572:22357,15056790:22358,15056827:22359,15056804:22360,15056824:22361,15056817:22362,15056797:22363,15106739:22364,15056831:22365,15106209:22366,15106464:22367,15106201:22368,15106192:22369,15106217:22370,15106190:22371,15106225:22372,15106203:22373,15106197:22374,15106219:22375,15106214:22376,15106191:22377,15106234:22378,15106458:22379,15106433:22380,15106474:22381,15106487:22382,15106463:22383,15106442:22384,15106438:22385,15106445:22386,15106467:22387,15106435:22388,15106468:22389,15106434:22390,15106476:22391,15106475:22392,15106457:22393,15106689:22394,15106701:22395,15106983:22396,15106691:22397,15106714:22398,15106692:22561,15106715:22562,15106710:22563,15106711:22564,15106706:22565,15106727:22566,15106699:22567,15106977:22568,15106744:22569,15106976:22570,15106963:22571,15106740:22572,15056816:22573,15106749:22574,15106950:22575,15106741:22576,15106968:22577,15107469:22578,15107221:22579,15107206:22580,15106998:22581,15106999:22582,15107200:22583,15106996:22584,15107002:22585,15107203:22586,15107233:22587,15107003:22588,15106993:22589,15107213:22590,15107214:22591,15107463:22592,15107262:22593,15107240:22594,15107239:22595,15107466:22596,15107263:22597,15107260:22598,15107244:22599,15107252:22600,15107261:22601,15107458:22602,15107460:22603,15107507:22604,15107511:22605,15107480:22606,15107481:22607,15107482:22608,15107499:22609,15107508:22610,15107503:22611,15107493:22612,15107505:22613,15107487:22614,15107485:22615,15107475:22616,15107509:22617,15107737:22618,15107734:22619,15107719:22620,15107756:22621,15107732:22622,15107738:22623,15107722:22624,15107729:22625,15107755:22626,15107758:22627,15107980:22628,15107978:22629,15107977:22630,15108023:22631,15107976:22632,15107971:22633,15107974:22634,15107770:22635,15107979:22636,15187385:22637,15107981:22638,15108006:22639,15108003:22640,15108022:22641,15108026:22642,15108020:22643,15108031:22644,15108029:22645,15108028:22646,15108030:22647,15108224:22648,15108232:22649,15108233:22650,15108237:22651,15108236:22652,15108244:22653,15108251:22654,15108254:22817,15108257:22818,15108266:22819,15108270:22820,15108272:22821,15108274:22822,15108275:22823,15108481:22824,15108494:22825,15108510:22826,15108515:22827,15108507:22828,15108512:22829,15108520:22830,15108540:22831,15108738:22832,15108745:22833,15108542:22834,15108754:22835,15108755:22836,15108758:22837,15109012:22838,15108739:22839,15108756:22840,15109015:22841,15109009:22842,15108795:22843,15109007:22844,15109055:22845,15108998:22846,15111060:22847,15109e3:22848,15109020:22849,15109004:22850,15109002:22851,15108994:22852,15108999:22853,15108763:22854,15109001:22855,15109260:22856,15109038:22857,15109041:22858,15109287:22859,15109250:22860,15109256:22861,15109039:22862,15109045:22863,15109520:22864,15109310:22865,15109517:22866,15110300:22867,15109519:22868,15109782:22869,15109774:22870,15109760:22871,15109803:22872,15109558:22873,15109795:22874,15109775:22875,15109769:22876,15109791:22877,15109813:22878,15109547:22879,15109545:22880,15109822:22881,15110057:22882,15110016:22883,15110022:22884,15110051:22885,15110025:22886,15110034:22887,15110070:22888,15110020:22889,15110294:22890,15110324:22891,15110278:22892,15110291:22893,15110310:22894,15110326:22895,15111325:22896,15110295:22897,15110312:22898,15110287:22899,15110567:22900,15110575:22901,15110582:22902,15110542:22903,15111338:22904,15110805:22905,15110803:22906,15110821:22907,15110825:22908,15110792:22909,15110844:22910,15111066:23073,15111058:23074,15111045:23075,15111047:23076,15110843:23077,15111064:23078,15111042:23079,15111089:23080,15111079:23081,15239305:23082,15111072:23083,15111073:23084,15108780:23085,15111075:23086,15111087:23087,15111340:23088,15111094:23089,15111092:23090,15111090:23091,15111098:23092,15111296:23093,15111101:23094,15111320:23095,15111324:23096,15111301:23097,15111332:23098,15111331:23099,15111339:23100,15111348:23101,15111349:23102,15111351:23103,15111350:23104,15111352:23105,15177099:23106,15111560:23107,15111574:23108,15111573:23109,15111565:23110,15111576:23111,15111582:23112,15111581:23113,15111602:23114,15111608:23115,15111810:23116,15111811:23117,15249034:23118,15111835:23119,15111839:23120,15111851:23121,15111863:23122,15112067:23123,15112070:23124,15112065:23125,15112068:23126,15112076:23127,15112082:23128,15112091:23129,15112089:23130,15112096:23131,15112097:23132,15112113:23133,15113650:23134,15112330:23135,15112323:23136,15112123:23137,15113651:23138,15112373:23139,15112374:23140,15112372:23141,15112348:23142,15112591:23143,15112580:23144,15112585:23145,15112577:23146,15112606:23147,15112605:23148,15112612:23149,15112615:23150,15112616:23151,15112607:23152,15112610:23153,15112624:23154,15112835:23155,15112840:23156,15112846:23157,15112841:23158,15112836:23159,15112856:23160,15112861:23161,15113089:23162,15112889:23163,15113097:23164,15112894:23165,15112892:23166,15113092:23329,15112888:23330,15113110:23331,15113114:23332,15113120:23333,15112383:23334,15113126:23335,15113129:23336,15113136:23337,15113141:23338,15113143:23339,15113359:23340,15113366:23341,15113374:23342,15113382:23343,15113383:23344,15310008:23345,15113390:23346,15113407:23347,15113398:23348,15113601:23349,15113400:23350,15113399:23351,15113606:23352,15113630:23353,15113632:23354,15113625:23355,15113635:23356,15113636:23357,15113865:23358,15113648:23359,15113897:23360,15113660:23361,15113642:23362,15113868:23363,15113867:23364,15113894:23365,15113889:23366,15113861:23367,15113911:23368,15114159:23369,15113908:23370,15114156:23371,15113907:23372,15114153:23373,15113912:23374,15114148:23375,15114142:23376,15114141:23377,15114146:23378,15114158:23379,15113913:23380,15114126:23381,15114118:23382,15114151:23383,15116956:23384,15114398:23385,15114630:23386,15114409:23387,15114624:23388,15114637:23389,15114418:23390,15114638:23391,15114931:23392,15114411:23393,15114649:23394,15114659:23395,15114679:23396,15114687:23397,15114911:23398,15114895:23399,15114925:23400,15114900:23401,15114909:23402,15114907:23403,15114883:23404,15116974:23405,15114937:23406,15114676:23407,15114933:23408,15114912:23409,15114938:23410,15115407:23411,15114893:23412,15114686:23413,15115393:23414,15115146:23415,15115400:23416,15115160:23417,15115426:23418,15115430:23419,15115169:23420,15115404:23421,15115149:23422,15115156:23585,15115175:23586,15115157:23587,15115446:23588,15115410:23589,15115396:23590,15115159:23591,15115171:23592,15115429:23593,15115193:23594,15115168:23595,15115183:23596,15115432:23597,15115434:23598,15115418:23599,15115427:23600,15115425:23601,15115142:23602,15115705:23603,15115703:23604,15115676:23605,15115704:23606,15115691:23607,15115668:23608,15115710:23609,15115694:23610,15115449:23611,15115700:23612,15115453:23613,15115673:23614,15115440:23615,15115681:23616,15115678:23617,15115677:23618,15115905:23619,15115690:23620,15115954:23621,15115950:23622,15116176:23623,15115967:23624,15116161:23625,15116179:23626,15115966:23627,15116174:23628,15052712:23629,15116170:23630,15116189:23631,15115963:23632,15116163:23633,15115943:23634,15116462:23635,15115921:23636,15115936:23637,15115932:23638,15115925:23639,15115956:23640,15116190:23641,15116200:23642,15116418:23643,15116443:23644,15116223:23645,15117450:23646,15116217:23647,15116210:23648,15116199:23649,15116421:23650,15115953:23651,15116446:23652,15116205:23653,15116436:23654,15116203:23655,15116426:23656,15116434:23657,15117185:23658,15116451:23659,15116435:23660,15116676:23661,15116428:23662,15116722:23663,15116470:23664,15116728:23665,15116679:23666,15116706:23667,15116697:23668,15116710:23669,15116680:23670,15116472:23671,15116450:23672,15116944:23673,15116941:23674,15116960:23675,15116932:23676,15116962:23677,15116963:23678,15116951:23841,15243415:23842,15116987:23843,15117187:23844,15117186:23845,15116984:23846,15116979:23847,15116972:23848,15117214:23849,15117201:23850,15117215:23851,15116970:23852,15117210:23853,15117226:23854,15117243:23855,15117445:23856,15243414:23857,15117242:23858,15117458:23859,15117462:23860,15314097:23861,15117471:23862,15117496:23863,15117495:23864,15178652:23865,15117497:23866,15311790:23867,15117703:23868,15117699:23869,15117705:23870,15117712:23871,15117721:23872,15117716:23873,15117723:23874,15117727:23875,15117729:23876,15117752:23877,15117753:23878,15117759:23879,15117952:23880,15117956:23881,15117955:23882,15117965:23883,15117976:23884,15117973:23885,15117982:23886,15117988:23887,15117994:23888,15117995:23889,15117999:23890,15118002:23891,15118001:23892,15118003:23893,15118007:23894,15118012:23895,15118214:23896,15118219:23897,15118227:23898,15118239:23899,15118252:23900,15118251:23901,15118259:23902,15118255:23903,15317694:23904,15118472:23905,15118483:23906,15118484:23907,15118491:23908,15118500:23909,15118499:23910,15118750:23911,15118741:23912,15118754:23913,15118762:23914,15118978:23915,15118989:23916,15119002:23917,15118977:23918,15119003:23919,15118782:23920,15118760:23921,15118771:23922,15118994:23923,15118992:23924,15119236:23925,15119281:23926,15119251:23927,15119037:23928,15119255:23929,15119237:23930,15119261:23931,15119022:23932,15119025:23933,15119038:23934,15119034:24097,15119259:24098,15119279:24099,15119257:24100,15119274:24101,15119519:24102,15245709:24103,15119542:24104,15119531:24105,15119549:24106,15119544:24107,15119513:24108,15119541:24109,15119539:24110,15119506:24111,15119500:24112,15119779:24113,15120019:24114,15119780:24115,15119770:24116,15119801:24117,15119769:24118,15120014:24119,15120021:24120,15122340:24121,15120005:24122,15120313:24123,15120533:24124,15120522:24125,15120053:24126,15120263:24127,15120294:24128,15120056:24129,15120262:24130,15120300:24131,15120286:24132,15120268:24133,15120296:24134,15120274:24135,15120261:24136,15120314:24137,15120281:24138,15120292:24139,15120277:24140,15120298:24141,15120302:24142,15120557:24143,15120814:24144,15120558:24145,15120537:24146,15120818:24147,15120799:24148,15120574:24149,15120547:24150,15120811:24151,15120555:24152,15120822:24153,15120781:24154,15120543:24155,15120771:24156,15120570:24157,15120782:24158,15120548:24159,15121343:24160,15120541:24161,15120568:24162,15121026:24163,15121066:24164,15121048:24165,15121289:24166,15121079:24167,15121299:24168,15121085:24169,15121071:24170,15121284:24171,15121074:24172,15121300:24173,15121301:24174,15121039:24175,15121061:24176,15121282:24177,15121055:24178,15121793:24179,15121553:24180,15171980:24181,15121324:24182,15121336:24183,15121342:24184,15121599:24185,15121330:24186,15121585:24187,15121327:24188,15121586:24189,15121292:24190,15121598:24353,15121555:24354,15121335:24355,15122054:24356,15121850:24357,15121848:24358,15122049:24359,15122048:24360,15121839:24361,15121819:24362,15122355:24363,15121837:24364,15122050:24365,15121852:24366,15121816:24367,15122062:24368,15122065:24369,15122306:24370,15121830:24371,15122099:24372,15122083:24373,15122081:24374,15122084:24375,15122105:24376,15122310:24377,15122090:24378,15122335:24379,15122325:24380,15122348:24381,15122324:24382,15122328:24383,15122353:24384,15122350:24385,15122331:24386,15171721:24387,15171723:24388,15122362:24389,15171729:24390,15171713:24391,15171727:24392,15122366:24393,15171739:24394,15171738:24395,15121844:24396,15171741:24397,15171736:24398,15171743:24399,15171760:24400,15171774:24401,15171762:24402,15171985:24403,15172003:24404,15172249:24405,15172242:24406,15172271:24407,15172529:24408,15172268:24409,15172280:24410,15172275:24411,15172270:24412,15172511:24413,15172491:24414,15172509:24415,15172505:24416,15172745:24417,15172541:24418,15172764:24419,15172761:24420,15173029:24421,15173013:24422,15173256:24423,15173030:24424,15173026:24425,15173004:24426,15173014:24427,15173036:24428,15173263:24429,15173563:24430,15173252:24431,15173269:24432,15173288:24433,15173292:24434,15173527:24435,15173305:24436,15173310:24437,15173522:24438,15173513:24439,15173524:24440,15173518:24441,15173536:24442,15173548:24443,15173543:24444,15173557:24445,15173564:24446,15173561:24609,15173567:24610,15173773:24611,15173776:24612,15173787:24613,15173800:24614,15173805:24615,15173804:24616,15173808:24617,15173810:24618,15173819:24619,15173820:24620,15173823:24621,15174016:24622,15174022:24623,15174027:24624,15174040:24625,15174068:24626,15174078:24627,15174274:24628,15174273:24629,15174279:24630,15174290:24631,15174294:24632,15174306:24633,15174311:24634,15174329:24635,15174322:24636,15174531:24637,15174534:24638,15174532:24639,15174542:24640,15174546:24641,15174562:24642,15174560:24643,15174561:24644,15174585:24645,15174583:24646,15040655:24647,15174807:24648,15174794:24649,15174812:24650,15174806:24651,15174813:24652,15174836:24653,15174831:24654,15174825:24655,15174821:24656,15174846:24657,15175054:24658,15175055:24659,15317912:24660,15175063:24661,15175082:24662,15175080:24663,15175088:24664,15175096:24665,15175093:24666,15175099:24667,15175098:24668,15175560:24669,15175347:24670,15175566:24671,15175355:24672,15175552:24673,15175589:24674,15175598:24675,15175582:24676,15176354:24677,15175813:24678,15176111:24679,15175845:24680,15175608:24681,15175858:24682,15175866:24683,15176085:24684,15175871:24685,15176095:24686,15176089:24687,15176065:24688,15176092:24689,15176105:24690,15176112:24691,15176099:24692,15176106:24693,15176118:24694,15176126:24695,15176331:24696,15176350:24697,15176359:24698,15176586:24699,15176591:24700,15176596:24701,15175601:24702,15176608:24865,15176611:24866,15176615:24867,15176617:24868,15176622:24869,15176626:24870,15176624:24871,15176625:24872,15176632:24873,15176631:24874,15176836:24875,15176835:24876,15176837:24877,15176844:24878,15176846:24879,15176845:24880,15176853:24881,15176851:24882,15176862:24883,15176870:24884,15176876:24885,15176892:24886,15177092:24887,15177101:24888,15177098:24889,15177097:24890,15177115:24891,15177094:24892,15177114:24893,15177129:24894,15177124:24895,15177127:24896,15177131:24897,15177133:24898,15177144:24899,15177142:24900,15177350:24901,15177351:24902,15177140:24903,15177354:24904,15177353:24905,15177346:24906,15177364:24907,15177370:24908,15177373:24909,15177381:24910,15177379:24911,15177602:24912,15177395:24913,15177603:24914,15177397:24915,15177405:24916,15177400:24917,15177404:24918,15177393:24919,15177613:24920,15177610:24921,15177618:24922,15177625:24923,15177635:24924,15177630:24925,15177662:24926,15177663:24927,15177660:24928,15177857:24929,15177648:24930,15177658:24931,15177650:24932,15177651:24933,15177867:24934,15177869:24935,15177865:24936,15177887:24937,15177895:24938,15177888:24939,15177889:24940,15177890:24941,15177892:24942,15177908:24943,15177904:24944,15177915:24945,15178119:24946,15178120:24947,15178118:24948,15178140:24949,15178136:24950,15178145:24951,15178146:24952,15178152:24953,15178153:24954,15178154:24955,15178151:24956,15178156:24957,15178160:24958,15178162:25121,15178166:25122,15178168:25123,15178172:25124,15178368:25125,15178371:25126,15178376:25127,15178379:25128,15178382:25129,15178390:25130,15178387:25131,15178393:25132,15178394:25133,15178416:25134,15178420:25135,15178424:25136,15178425:25137,15178426:25138,15178626:25139,15178637:25140,15178646:25141,15178642:25142,15178654:25143,15178657:25144,15178661:25145,15178663:25146,15178666:25147,15243439:25148,15178683:25149,15178888:25150,15178887:25151,15178884:25152,15178921:25153,15178916:25154,15178910:25155,15178917:25156,15178918:25157,15178907:25158,15178935:25159,15178936:25160,15179143:25161,15179162:25162,15179176:25163,15179179:25164,15179163:25165,15179173:25166,15179199:25167,15179198:25168,15179193:25169,15179406:25170,15179403:25171,15179409:25172,15179424:25173,15179422:25174,15179440:25175,15179446:25176,15179449:25177,15179455:25178,15179452:25179,15179453:25180,15179451:25181,15179655:25182,15179661:25183,15179671:25184,15179674:25185,15179676:25186,15179683:25187,15179694:25188,15179708:25189,15179916:25190,15179922:25191,15180966:25192,15179936:25193,15180970:25194,15180165:25195,15180430:25196,15180212:25197,15180422:25198,15180220:25199,15180442:25200,15180428:25201,15180451:25202,15180469:25203,15180458:25204,15180463:25205,15180689:25206,15180678:25207,15180683:25208,15180692:25209,15180478:25210,15180476:25211,15180677:25212,15180682:25213,15180716:25214,15180711:25377,15180698:25378,15180733:25379,15180724:25380,15180935:25381,15180946:25382,15180945:25383,15180953:25384,15180972:25385,15180971:25386,15181184:25387,15181216:25388,15181207:25389,15181215:25390,15181210:25391,15181205:25392,15181203:25393,15181242:25394,15181247:25395,15181450:25396,15181469:25397,15181479:25398,15318411:25399,15181482:25400,15181486:25401,15181491:25402,15181497:25403,15181498:25404,15181705:25405,15181717:25406,15181735:25407,15181740:25408,15181729:25409,15181731:25410,15181960:25411,15181965:25412,15181976:25413,15181977:25414,15181984:25415,15181983:25416,15181440:25417,15182001:25418,15182011:25419,15182014:25420,15182007:25421,15182211:25422,15182231:25423,15182217:25424,15182241:25425,15182242:25426,15182249:25427,15318685:25428,15182256:25429,15182265:25430,15182269:25431,15182472:25432,15182487:25433,15182485:25434,15182488:25435,15182486:25436,15182505:25437,15182728:25438,15182512:25439,15182518:25440,15182725:25441,15182724:25442,15182527:25443,15303299:25444,15182727:25445,15182730:25446,15182733:25447,15182735:25448,15182741:25449,15182739:25450,15182745:25451,15182746:25452,15182749:25453,15182753:25454,15182754:25455,15182758:25456,15182765:25457,15182768:25458,15182978:25459,15182991:25460,15182986:25461,15182982:25462,15183027:25463,15183e3:25464,15183001:25465,15183006:25466,15183029:25467,15183016:25468,15183030:25469,15183248:25470,15183290:25633,15182980:25634,15183245:25635,15182987:25636,15183244:25637,15183237:25638,15183285:25639,15183269:25640,15183284:25641,15183271:25642,15183280:25643,15183281:25644,15183276:25645,15183278:25646,15183517:25647,15183512:25648,15183519:25649,15183501:25650,15183516:25651,15183514:25652,15183499:25653,15183506:25654,15183503:25655,15183261:25656,15183513:25657,15183755:25658,15183745:25659,15183756:25660,15183759:25661,15183540:25662,15183750:25663,15183773:25664,15183785:25665,15184017:25666,15184020:25667,15183782:25668,15183781:25669,15184288:25670,15184e3:25671,15184007:25672,15184019:25673,15183795:25674,15183799:25675,15184023:25676,15184013:25677,15183798:25678,15184035:25679,15184039:25680,15184042:25681,15184031:25682,15184055:25683,15184043:25684,15184061:25685,15184268:25686,15184259:25687,15184276:25688,15184271:25689,15184256:25690,15184272:25691,15184280:25692,15184287:25693,15184292:25694,15184278:25695,15184293:25696,15184300:25697,15184309:25698,15184515:25699,15184528:25700,15184548:25701,15184557:25702,15184546:25703,15184555:25704,15184545:25705,15184552:25706,15184563:25707,15184562:25708,15184561:25709,15184558:25710,15184569:25711,15184573:25712,15184768:25713,15184773:25714,15184770:25715,15184792:25716,15184786:25717,15184796:25718,15184802:25719,15314107:25720,15184815:25721,15184818:25722,15184820:25723,15184822:25724,15184826:25725,15185030:25726,15185026:25889,15185052:25890,15185045:25891,15185034:25892,15185285:25893,15185291:25894,15185070:25895,15185074:25896,15185087:25897,15185077:25898,15185286:25899,15185331:25900,15185302:25901,15185294:25902,15185330:25903,15185320:25904,15185326:25905,15185295:25906,15185315:25907,15185555:25908,15185545:25909,15185307:25910,15185551:25911,15185341:25912,15185563:25913,15185594:25914,15185582:25915,15185571:25916,15185589:25917,15185799:25918,15185597:25919,15185579:25920,15186109:25921,15185570:25922,15185583:25923,15185820:25924,15185592:25925,15185567:25926,15185584:25927,15185816:25928,15185821:25929,15185828:25930,15185822:25931,15185851:25932,15185842:25933,15185825:25934,15186053:25935,15186058:25936,15186083:25937,15186081:25938,15186066:25939,15186097:25940,15186079:25941,15186057:25942,15186059:25943,15186082:25944,15186310:25945,15186342:25946,15186107:25947,15186101:25948,15186105:25949,15186307:25950,15186103:25951,15186098:25952,15186106:25953,15186343:25954,15186333:25955,15186326:25956,15186334:25957,15186329:25958,15186330:25959,15186361:25960,15186346:25961,15186345:25962,15186364:25963,15186363:25964,15186563:25965,15185813:25966,15186365:25967,15253166:25968,15186367:25969,15186568:25970,15186569:25971,15186572:25972,15186578:25973,15186576:25974,15186579:25975,15186580:25976,15186582:25977,15186574:25978,15186587:25979,15186588:25980,15187128:25981,15187130:25982,15187333:26145,15187340:26146,15187341:26147,15187342:26148,15187344:26149,15187345:26150,15187349:26151,15187348:26152,15187352:26153,15187359:26154,15187360:26155,15187368:26156,15187369:26157,15187367:26158,15187384:26159,15187586:26160,15187590:26161,15187587:26162,15187592:26163,15187591:26164,15187596:26165,15187604:26166,15187614:26167,15187613:26168,15187610:26169,15187619:26170,15187631:26171,15187634:26172,15187641:26173,15187630:26174,15187638:26175,15187640:26176,15248817:26177,15187845:26178,15187846:26179,15187850:26180,15187861:26181,15187860:26182,15187873:26183,15187878:26184,15187881:26185,15187891:26186,15187897:26187,15311772:26188,15237254:26189,15237252:26190,15237259:26191,15237266:26192,15237272:26193,15237273:26194,15237276:26195,15237281:26196,15237288:26197,15237311:26198,15237307:26199,15237514:26200,15237510:26201,15237522:26202,15237528:26203,15237530:26204,15237535:26205,15237538:26206,15237544:26207,15237555:26208,15237554:26209,15237552:26210,15237558:26211,15237561:26212,15237565:26213,15237567:26214,15237764:26215,15237766:26216,15237765:26217,15237787:26218,15237779:26219,15237786:26220,15237805:26221,15042192:26222,15237804:26223,15238043:26224,15238053:26225,15238041:26226,15238045:26227,15238020:26228,15238042:26229,15238038:26230,15238281:26231,15238063:26232,15238065:26233,15238299:26234,15238313:26235,15238307:26236,15238319:26237,15238539:26238,15309451:26401,15238534:26402,15238334:26403,15238547:26404,15238545:26405,15238076:26406,15238577:26407,15238574:26408,15238565:26409,15238566:26410,15238580:26411,15238787:26412,15238792:26413,15238794:26414,15238784:26415,15238786:26416,15238816:26417,15238805:26418,15238820:26419,15238819:26420,15238559:26421,15238803:26422,15238825:26423,15238832:26424,15238837:26425,15238846:26426,15238840:26427,15238845:26428,15239040:26429,15239042:26430,15238842:26431,15239049:26432,15239053:26433,15239057:26434,15239065:26435,15239064:26436,15239048:26437,15239066:26438,15239071:26439,15239072:26440,15239079:26441,15239098:26442,15239099:26443,15239102:26444,15239297:26445,15239298:26446,15239301:26447,15239303:26448,15239306:26449,15239309:26450,15239312:26451,15239318:26452,15239337:26453,15239339:26454,15239352:26455,15239347:26456,15239552:26457,15239577:26458,15239576:26459,15239581:26460,15239578:26461,15239583:26462,15239588:26463,15239586:26464,15239592:26465,15239594:26466,15239595:26467,15239342:26468,15239601:26469,15239607:26470,15239608:26471,15239614:26472,15239821:26473,15239826:26474,15239851:26475,15239839:26476,15239867:26477,15239852:26478,15240097:26479,15240099:26480,15240095:26481,15240082:26482,15240116:26483,15240115:26484,15240122:26485,15240851:26486,15240323:26487,15240123:26488,15240121:26489,15240094:26490,15240326:26491,15240092:26492,15240329:26493,15240089:26494,15240373:26657,15240372:26658,15240342:26659,15240370:26660,15240369:26661,15240576:26662,15240377:26663,15240592:26664,15240581:26665,15240367:26666,15240363:26667,15240343:26668,15240344:26669,15240837:26670,15240858:26671,15240874:26672,15240863:26673,15240866:26674,15240854:26675,15240355:26676,15240846:26677,15240839:26678,15240842:26679,15240636:26680,15240885:26681,15240627:26682,15240629:26683,15240864:26684,15240841:26685,15240872:26686,15241140:26687,15241363:26688,15241131:26689,15241102:26690,15241149:26691,15241347:26692,15241112:26693,15241355:26694,15241089:26695,15241143:26696,15241351:26697,15241120:26698,15241138:26699,15241357:26700,15241378:26701,15241376:26702,15240893:26703,15241400:26704,15242374:26705,15241147:26706,15241645:26707,15241386:26708,15241404:26709,15242650:26710,15241860:26711,15241655:26712,15241643:26713,15241901:26714,15241646:26715,15241858:26716,15241641:26717,15241606:26718,15241388:26719,15241647:26720,15241657:26721,15241397:26722,15242122:26723,15241634:26724,15241913:26725,15241919:26726,15241887:26727,15242137:26728,15242125:26729,15241915:26730,15242138:26731,15242128:26732,15242113:26733,15242118:26734,15242134:26735,15241889:26736,15242401:26737,15242175:26738,15242164:26739,15242391:26740,15242392:26741,15242412:26742,15242399:26743,15242389:26744,15242388:26745,15242172:26746,15242624:26747,15242659:26748,15242648:26749,15242632:26750,15242625:26913,15243394:26914,15242635:26915,15242645:26916,15242880:26917,15242916:26918,15242888:26919,15242897:26920,15242890:26921,15242920:26922,15242669:26923,15242900:26924,15242907:26925,15243178:26926,15242887:26927,15242908:26928,15242679:26929,15242686:26930,15242896:26931,15243145:26932,15242938:26933,15243151:26934,15242937:26935,15243152:26936,15243157:26937,15243165:26938,15243173:26939,15243164:26940,15243193:26941,15243402:26942,15243411:26943,15243403:26944,15243198:26945,15243194:26946,15243398:26947,15243426:26948,15243418:26949,15243440:26950,15243455:26951,15243661:26952,14989717:26953,15243668:26954,15243679:26955,15243687:26956,15243697:26957,15243923:26958,15243939:26959,15243945:26960,15243946:26961,15243915:26962,15243916:26963,15243958:26964,15243951:26965,15244164:26966,15244166:26967,15243952:26968,15244169:26969,15245475:26970,15243947:26971,15244180:26972,15244190:26973,15244201:26974,15244204:26975,15244191:26976,15244187:26977,15244207:26978,15244434:26979,15244422:26980,15244424:26981,15244416:26982,15244419:26983,15244219:26984,15244433:26985,15244425:26986,15244429:26987,15244217:26988,15244426:26989,15244468:26990,15244479:26991,15244471:26992,15244475:26993,15244453:26994,15244457:26995,15244442:26996,15244704:26997,15244703:26998,15244728:26999,15244684:27e3,15244686:27001,15244724:27002,15244695:27003,15244712:27004,15244718:27005,15244697:27006,15244691:27169,15244707:27170,15244714:27171,15245445:27172,15244962:27173,15244959:27174,15244930:27175,15244975:27176,15245195:27177,15244989:27178,15245184:27179,15245200:27180,15309718:27181,15244971:27182,15245188:27183,15244979:27184,15245191:27185,15245190:27186,15244987:27187,15245231:27188,15245234:27189,15245216:27190,15245455:27191,15245453:27192,15245246:27193,15245238:27194,15245239:27195,15245454:27196,15245202:27197,15245457:27198,15245462:27199,15245461:27200,15245474:27201,15245473:27202,15245489:27203,15245494:27204,15245497:27205,15245479:27206,15245499:27207,15245700:27208,15245698:27209,15245714:27210,15245721:27211,15245726:27212,15245730:27213,15245739:27214,15245953:27215,15245758:27216,15245982:27217,15245749:27218,15245757:27219,15246005:27220,15245746:27221,15245954:27222,15245975:27223,15245970:27224,15245998:27225,15245977:27226,15245986:27227,15245965:27228,15245988:27229,15246e3:27230,15246015:27231,15246001:27232,15246211:27233,15246212:27234,15246228:27235,15246232:27236,15246233:27237,15246237:27238,15246265:27239,15246466:27240,15246268:27241,15246260:27242,15246248:27243,15246258:27244,15246468:27245,15246476:27246,15246474:27247,15246483:27248,15246723:27249,15246494:27250,15246501:27251,15246506:27252,15246507:27253,15246721:27254,15246724:27255,15246523:27256,15246518:27257,15246520:27258,15246732:27259,15246493:27260,15246752:27261,15246750:27262,15246758:27425,15246756:27426,15246765:27427,15246762:27428,15246767:27429,15246772:27430,15246775:27431,15246782:27432,15246979:27433,15246984:27434,15246986:27435,15246995:27436,15247e3:27437,15247009:27438,15247017:27439,15247014:27440,15247020:27441,15247023:27442,15247026:27443,15247034:27444,15247037:27445,15247039:27446,15247232:27447,15247258:27448,15247260:27449,15247261:27450,15247271:27451,15247284:27452,15247288:27453,15247491:27454,15247510:27455,15247504:27456,15247500:27457,15247515:27458,15247517:27459,15247525:27460,15247542:27461,15247745:27462,15247771:27463,15247762:27464,15247750:27465,15247752:27466,15247804:27467,15247789:27468,15247788:27469,15247778:27470,15248005:27471,15248002:27472,15248004:27473,15248040:27474,15248033:27475,15248017:27476,15248037:27477,15248038:27478,15248026:27479,15248035:27480,15248260:27481,15248269:27482,15248258:27483,15248282:27484,15248299:27485,15248307:27486,15248295:27487,15248292:27488,15248305:27489,15248532:27490,15248288:27491,15248290:27492,15248311:27493,15248286:27494,15248283:27495,15248524:27496,15248519:27497,15248538:27498,15248289:27499,15248534:27500,15248528:27501,15248535:27502,15248544:27503,15248563:27504,15310507:27505,15248550:27506,15248555:27507,15248574:27508,15248552:27509,15248769:27510,15248780:27511,15248783:27512,15248782:27513,15248777:27514,15248790:27515,15248795:27516,15248794:27517,15248811:27518,15248799:27681,15248812:27682,15248815:27683,15248820:27684,15248829:27685,15249024:27686,15249036:27687,15249038:27688,15249042:27689,15249043:27690,15249046:27691,15249049:27692,15249050:27693,15249594:27694,15249793:27695,15249599:27696,15249800:27697,15249804:27698,15249806:27699,15249808:27700,15249813:27701,15249826:27702,15249836:27703,15249848:27704,15249850:27705,15250050:27706,15250057:27707,15250053:27708,15250058:27709,15250061:27710,15250062:27711,15250068:27712,15249852:27713,15250072:27714,15108253:27715,15250093:27716,15250090:27717,15250109:27718,15250098:27719,15250099:27720,15250094:27721,15250102:27722,15250312:27723,15250305:27724,15250340:27725,15250339:27726,15250330:27727,15250365:27728,15250362:27729,15250363:27730,15250564:27731,15250565:27732,15250570:27733,15250567:27734,15250575:27735,15250573:27736,15250576:27737,15318414:27738,15250579:27739,15250317:27740,15250580:27741,15250582:27742,15250855:27743,15250861:27744,15250865:27745,15250867:27746,15251073:27747,15251097:27748,15251330:27749,15251134:27750,15251130:27751,15251343:27752,15251354:27753,15251350:27754,15251340:27755,15251355:27756,15251339:27757,15251370:27758,15251371:27759,15251359:27760,15251363:27761,15251388:27762,15251592:27763,15251593:27764,15251391:27765,15251613:27766,15251614:27767,15251600:27768,15251615:27769,15251842:27770,15251637:27771,15251632:27772,15251636:27773,15251850:27774,15251847:27937,15251849:27938,15251852:27939,15251856:27940,15251848:27941,15251865:27942,15251876:27943,15251872:27944,15251626:27945,15251875:27946,15251861:27947,15251894:27948,15251890:27949,15251900:27950,15252097:27951,15252103:27952,15252101:27953,15252100:27954,15252107:27955,15252106:27956,15252115:27957,15252113:27958,15252116:27959,15252121:27960,15252138:27961,15252129:27962,15252140:27963,15252144:27964,15252358:27965,15252145:27966,15252158:27967,15252357:27968,15252360:27969,15252363:27970,15252379:27971,15252387:27972,15252412:27973,15252411:27974,15252395:27975,15252414:27976,15252618:27977,15252613:27978,15252629:27979,15252626:27980,15252633:27981,15252627:27982,15252636:27983,15252639:27984,15252635:27985,15252620:27986,15252646:27987,15252659:27988,15252667:27989,15252665:27990,15252869:27991,15252866:27992,15252670:27993,15252876:27994,15252873:27995,15252870:27996,15252878:27997,15252887:27998,15252892:27999,15252898:28e3,15252899:28001,15252900:28002,15253148:28003,15253151:28004,15253155:28005,15253165:28006,15253167:28007,15253175:28008,15253402:28009,15253413:28010,15253410:28011,15253418:28012,15253423:28013,15303303:28014,15253428:28015,15302789:28016,15253433:28017,15253434:28018,15302801:28019,15302805:28020,15302817:28021,15302797:28022,15302814:28023,15302806:28024,15302795:28025,15302823:28026,15302838:28027,15302837:28028,15302841:28029,15253432:28030,15303055:28193,15303056:28194,15303057:28195,15303058:28196,15302798:28197,15303049:28198,15302846:28199,15303062:28200,15303064:28201,15303070:28202,15303080:28203,15303087:28204,15303094:28205,15309480:28206,15303090:28207,15303298:28208,15303101:28209,15303297:28210,15303296:28211,15303306:28212,15303305:28213,15303311:28214,15303336:28215,15303343:28216,15303345:28217,15303349:28218,15303586:28219,15303588:28220,15108488:28221,15303579:28222,15303810:28223,15303826:28224,15303833:28225,15303858:28226,15303856:28227,15304074:28228,15304086:28229,15304088:28230,15304099:28231,15304101:28232,15304105:28233,15304115:28234,15304114:28235,15304331:28236,15304329:28237,15304322:28238,15304354:28239,15304363:28240,15304367:28241,15304362:28242,15304373:28243,15304372:28244,15304378:28245,15304576:28246,15304577:28247,15304585:28248,15304587:28249,15304592:28250,15304598:28251,15304607:28252,15304609:28253,15304603:28254,15304636:28255,15304629:28256,15304630:28257,15304862:28258,15304639:28259,15304852:28260,15304876:28261,15304853:28262,15304849:28263,15305118:28264,15305111:28265,15305093:28266,15305097:28267,15305124:28268,15305096:28269,15305365:28270,15304895:28271,15305099:28272,15305104:28273,15305372:28274,15305366:28275,15305363:28276,15305371:28277,15305114:28278,15305615:28279,15305401:28280,15305399:28281,15305641:28282,15305871:28283,15305658:28284,15306116:28285,15305902:28286,15305881:28449,15305890:28450,15305882:28451,15305891:28452,15305914:28453,15305909:28454,15305915:28455,15306140:28456,15306144:28457,15306172:28458,15306158:28459,15306134:28460,15306416:28461,15306412:28462,15306413:28463,15306388:28464,15306425:28465,15306646:28466,15306647:28467,15306664:28468,15306661:28469,15306648:28470,15306627:28471,15306653:28472,15306640:28473,15306632:28474,15306660:28475,15306906:28476,15306900:28477,15306899:28478,15306883:28479,15306887:28480,15306896:28481,15306934:28482,15306923:28483,15306933:28484,15306913:28485,15306938:28486,15307137:28487,15307154:28488,15307140:28489,15307163:28490,15307168:28491,15307170:28492,15307166:28493,15307178:28494,15304873:28495,15307184:28496,15307189:28497,15307191:28498,15307197:28499,15307162:28500,15307196:28501,15307198:28502,15307393:28503,15307199:28504,15308418:28505,15308423:28506,15308426:28507,15308436:28508,15308438:28509,15308440:28510,15308441:28511,15308448:28512,15308456:28513,15308455:28514,15308461:28515,15308476:28516,15308475:28517,15308473:28518,15308478:28519,15308682:28520,15122358:28521,15308675:28522,15308685:28523,15308684:28524,15308693:28525,15308692:28526,15308694:28527,15308700:28528,15308705:28529,15308709:28530,15308706:28531,15308961:28532,15308968:28533,15308974:28534,15308975:28535,15309186:28536,15309196:28537,15309199:28538,15309195:28539,15309239:28540,15309212:28541,15309214:28542,15309213:28705,15309215:28706,15309222:28707,15309234:28708,15309228:28709,15309453:28710,15309464:28711,15309461:28712,15309463:28713,15309482:28714,15309479:28715,15309489:28716,15309490:28717,15309488:28718,15309492:28719,15309494:28720,15309496:28721,15309497:28722,15309710:28723,15309707:28724,15309705:28725,15309709:28726,15246733:28727,15309724:28728,15309965:28729,15309717:28730,15309753:28731,15309956:28732,15309958:28733,15309960:28734,15309971:28735,15309966:28736,15309969:28737,15309967:28738,15309974:28739,15309977:28740,15309988:28741,15309994:28742,1531e4:28743,15310009:28744,15310013:28745,15310014:28746,15310212:28747,15310214:28748,15310216:28749,15310210:28750,15310217:28751,15310236:28752,15310240:28753,15310244:28754,15310246:28755,15310248:28756,15043474:28757,15310251:28758,15310257:28759,15310265:28760,15310469:28761,15310268:28762,15310465:28763,15310266:28764,15310470:28765,15310475:28766,15310479:28767,15310480:28768,15310492:28769,15310504:28770,15310502:28771,15310499:28772,15310515:28773,15310516:28774,15310723:28775,15310726:28776,15310728:28777,15310731:28778,15310748:28779,15310765:28780,15318415:28781,15310770:28782,15182751:28783,15310774:28784,15310773:28785,15310991:28786,15310988:28787,15311032:28788,15311012:28789,15311009:28790,15311031:28791,15311037:28792,15311238:28793,15311247:28794,15311243:28795,15311275:28796,15311279:28797,15311280:28798,15311281:28961,15311284:28962,15311283:28963,15311530:28964,15311535:28965,15311537:28966,15311542:28967,15311748:28968,15311747:28969,15311750:28970,15311785:28971,15311787:28972,15312003:28973,15312009:28974,15312018:28975,15312020:28976,15312024:28977,15312033:28978,15312029:28979,15312030:28980,15312036:28981,15312032:28982,15312044:28983,15312046:28984,15312061:28985,15312062:28986,15312258:28987,15312265:28988,15312261:28989,15312272:28990,15312267:28991,15312273:28992,15312274:28993,15312268:28994,15312277:28995,15312535:28996,15312536:28997,15312549:28998,15312557:28999,15312558:29e3,15312572:29001,15312799:29002,15312795:29003,15312797:29004,15312792:29005,15312785:29006,15312813:29007,15312814:29008,15312817:29009,15312818:29010,15312827:29011,15312824:29012,15313025:29013,15313039:29014,15313029:29015,15312802:29016,15313049:29017,15313067:29018,15313079:29019,15313285:29020,15313282:29021,15313280:29022,15313283:29023,15313086:29024,15313301:29025,15313293:29026,15313307:29027,15313303:29028,15313311:29029,15313314:29030,15313317:29031,15313316:29032,15313321:29033,15313323:29034,15313322:29035,15313581:29036,15313584:29037,15313596:29038,15313792:29039,15313807:29040,15313809:29041,15313811:29042,15313812:29043,15313822:29044,15313823:29045,15313826:29046,15313827:29047,15313830:29048,15313839:29049,15313835:29050,15313838:29051,15313844:29052,15313841:29053,15313847:29054,15313851:29217,15314054:29218,15314072:29219,15314074:29220,15314079:29221,15314082:29222,15314083:29223,15314085:29224,15314087:29225,15314088:29226,15314089:29227,15314090:29228,15314094:29229,15314095:29230,15314098:29231,15314308:29232,15314307:29233,15314319:29234,15314317:29235,15314318:29236,15314321:29237,15314328:29238,15314356:29239,15314579:29240,15314563:29241,15314577:29242,15314582:29243,15314583:29244,15314591:29245,15314592:29246,15314600:29247,15314612:29248,15314816:29249,15314826:29250,15314617:29251,15314822:29252,15314831:29253,15314833:29254,15314834:29255,15314851:29256,15314850:29257,15314852:29258,15314836:29259,15314849:29260,15315130:29261,15314866:29262,15314865:29263,15314864:29264,15315093:29265,15315092:29266,15315081:29267,15315091:29268,15315084:29269,15315078:29270,15315080:29271,15315090:29272,15315082:29273,15315076:29274,15315118:29275,15315099:29276,15315109:29277,15315108:29278,15315105:29279,15315120:29280,15315335:29281,15315122:29282,15315334:29283,15315134:29284,15315354:29285,15315360:29286,15315367:29287,15315382:29288,15315384:29289,15315879:29290,15315884:29291,15315888:29292,15316105:29293,15316104:29294,15315883:29295,15316099:29296,15316102:29297,15316138:29298,15316134:29299,15316655:29300,15316131:29301,15316127:29302,15316356:29303,15316117:29304,15316114:29305,15316353:29306,15316159:29307,15316158:29308,15316358:29309,15316360:29310,15316381:29473,15316382:29474,15316388:29475,15316369:29476,15316368:29477,15316377:29478,15316402:29479,15316617:29480,15316615:29481,15316651:29482,15316399:29483,15316410:29484,15316634:29485,15316644:29486,15316649:29487,15316658:29488,15316868:29489,15316865:29490,15316667:29491,15316664:29492,15316666:29493,15316870:29494,15316879:29495,15316866:29496,15316889:29497,15316883:29498,15316920:29499,15316902:29500,15316909:29501,15316911:29502,15316925:29503,15317146:29504,15317147:29505,15317150:29506,15317429:29507,15317433:29508,15317437:29509,15317633:29510,15317640:29511,15317643:29512,15317644:29513,15317650:29514,15317653:29515,15317649:29516,15317661:29517,15317669:29518,15317673:29519,15317688:29520,15317674:29521,15317677:29522,15310241:29523,15317900:29524,15317902:29525,15317903:29526,15317904:29527,15317908:29528,15317916:29529,15317918:29530,15317917:29531,15317920:29532,15317925:29533,15317928:29534,15317935:29535,15317940:29536,15317942:29537,15317943:29538,15317945:29539,15317947:29540,15317948:29541,15317949:29542,15318151:29543,15318152:29544,15178423:29545,15318165:29546,15318177:29547,15318188:29548,15318206:29549,15318410:29550,15318418:29551,15318420:29552,15318435:29553,15318431:29554,15318432:29555,15318433:29556,15318438:29557,15318439:29558,15318444:29559,15318442:29560,15318455:29561,15318450:29562,15318454:29563,15318677:29564,15318684:29565,15318688:29566,15048879:29729,15116167:29730,15303065:29731,15176100:29732,15042460:29733,15173273:29734,15186570:31009,15246492:31010,15306120:31011,15305352:31012,15242140:31013,14991241:31014,15172283:31015,15112369:31016,15115144:31017,15305657:31018,15113147:31019,15056261:31020,14989480:31021,14990241:31022,14990268:31023,14990464:31024,14990467:31025,14990521:31026,14990742:31027,14990994:31028,14990986:31029,14991002:31030,14990996:31031,14991245:31032,15040896:31033,15040674:31034,14991295:31035,15040670:31036,15040902:31037,15040944:31038,15040898:31039,15041172:31040,15041460:31041,15041432:31042,15041930:31043,15041956:31044,15042205:31045,15042238:31046,15042476:31047,15042709:31048,15043228:31049,15043238:31050,15043456:31051,15043483:31052,15043712:31053,15043719:31054,15043748:31055,15044018:31056,15044243:31057,15044274:31058,15044509:31059,15706254:31060,15045276:31061,15045258:31062,15045289:31063,15045567:31064,15046278:31065,15048089:31066,15048101:31067,15048364:31068,15048584:31069,15048583:31070,15706255:31071,15706256:31072,15049374:31073,15049394:31074,15049867:31075,15050131:31076,15050139:31077,15050141:31078,15050147:31079,15050404:31080,15050426:31081,15052182:31082,15052672:31083,15176879:31084,15052696:31085,15052716:31086,15052958:31087,15053478:31088,15053498:31089,15053749:31090,15053991:31091,15054227:31092,15706257:31093,15054210:31094,15054253:31095,15054520:31096,15054521:31097,15054736:31098,15056033:31099,15056052:31100,15056295:31101,15056567:31102,15056798:31265,15106461:31266,15106693:31267,15106698:31268,15106974:31269,15106965:31270,15107232:31271,15106994:31272,15107217:31273,15107255:31274,15107248:31275,15107736:31276,15108243:31277,15108774:31278,15110069:31279,15110560:31280,15110813:31281,15111054:31282,15111566:31283,15112320:31284,15112341:31285,15112379:31286,15112329:31287,15112366:31288,15112350:31289,15112356:31290,15112613:31291,15112599:31292,15112601:31293,15706258:31294,15112627:31295,15112857:31296,15112864:31297,15112882:31298,15112895:31299,15113146:31300,15113358:31301,15705257:31302,15113638:31303,15113915:31304,15114642:31305,15114112:31306,15114369:31307,15114628:31308,15115151:31309,15706259:31310,15115688:31311,15706260:31312,15115928:31313,15116194:31314,15116464:31315,15116715:31316,15116678:31317,15116723:31318,15116734:31319,15117218:31320,15117220:31321,15118230:31322,15118527:31323,15118748:31324,15118982:31325,15118767:31326,15119258:31327,15119492:31328,15120007:31329,15119791:31330,15120022:31331,15120044:31332,15120271:31333,15120312:31334,15120306:31335,15120316:31336,15120569:31337,15120796:31338,15120551:31339,15120572:31340,15121087:31341,15122056:31342,15122101:31343,15122357:31344,15171717:31345,15171719:31346,15171752:31347,15172229:31348,15172267:31349,15172751:31350,15172740:31351,15173020:31352,15172998:31353,15172999:31354,15706261:31355,15173505:31356,15173566:31357,15174321:31358,15174334:31521,15174820:31522,15706262:31523,15175095:31524,15175357:31525,15175561:31526,15175574:31527,15175587:31528,15175570:31529,15175815:31530,15175605:31531,15175846:31532,15175850:31533,15175849:31534,15175854:31535,15176098:31536,15176329:31537,15176351:31538,15176833:31539,15177135:31540,15178370:31541,15178396:31542,15178398:31543,15178395:31544,15178406:31545,15706263:31546,15179142:31547,15043247:31548,15179937:31549,15180174:31550,15180196:31551,15180218:31552,15180976:31553,15706264:31554,15706265:31555,15706266:31556,15181460:31557,15706267:31558,15181467:31559,15182737:31560,15182759:31561,15706268:31562,15182763:31563,15183518:31564,15706269:31565,15185288:31566,15185308:31567,15185591:31568,15185568:31569,15185814:31570,15186322:31571,15187335:31572,15187617:31573,15706270:31574,15240321:31575,15240610:31576,15240639:31577,15241095:31578,15241142:31579,15241608:31580,15241908:31581,15242643:31582,15242649:31583,15242667:31584,15706271:31585,15242928:31586,15706272:31587,15706273:31588,15245447:31589,15246261:31590,15247506:31591,15247543:31592,15247801:31593,15248039:31594,15248062:31595,15248287:31596,15706274:31597,15248310:31598,15248787:31599,15248831:31600,15250352:31601,15250356:31602,15250578:31603,15250870:31604,15706275:31605,15252367:31606,15706276:31607,15706277:31608,15303079:31609,15303582:31610,15706278:31611,15303829:31612,15303847:31613,15304602:31614,15304599:31777,15304606:31778,15304621:31779,15304622:31780,15304612:31781,15304613:31782,15304838:31783,15304848:31784,15304842:31785,15304890:31786,15305088:31787,15304892:31788,15305102:31789,15305113:31790,15305105:31791,15304889:31792,15305127:31793,15305383:31794,15305143:31795,15305144:31796,15305639:31797,15305623:31798,15305625:31799,15305616:31800,15706279:31801,15305621:31802,15305632:31803,15305619:31804,15305893:31805,15305889:31806,15305659:31807,15706280:31808,15305886:31809,15305663:31810,15305885:31811,15305858:31812,15306160:31813,15306135:31814,15306404:31815,15306630:31816,15306654:31817,15306680:31818,15306929:31819,15307141:31820,15307144:31821,15308434:31822,15706012:31823,15706281:31824,15309469:31825,15309487:31826,15310003:31827,15310011:31828,15310211:31829,15310221:31830,15310223:31831,15310225:31832,15310229:31833,15311255:31834,15311269:31835,15706282:31836,15706283:31837,15312039:31838,15706284:31839,15312542:31840,15313294:31841,15313817:31842,15313820:31843,15314357:31844,15314354:31845,15314575:31846,15314609:31847,15314619:31848,15315072:31849,15316400:31850,15316395:31851,15706285:31852,15317145:31853,15317905:31854,14845360:31857,14845361:31858,14845362:31859,14845363:31860,14845364:31861,14845365:31862,14845366:31863,14845367:31864,14845368:31865,14845369:31866,15712164:31868,15711367:31869,15711362:31870,14846117:8514,15712162:8780,14846098:74077},Bi={52120:8751,52103:8752,49848:8753,52121:8754,52125:8755,49839:8756,52123:8757,52122:8758,126:8759,52868:8760,52869:8761,49825:8770,49830:8771,49855:8772,49850:8811,49834:8812,49833:8813,49838:8814,14845090:8815,49828:8816,14845078:8817,52870:9825,52872:9826,52873:9827,52874:9828,52906:9829,52876:9831,52878:9833,52907:9834,52879:9836,52908:9841,52909:9842,52910:9843,52911:9844,53130:9845,52880:9846,53132:9847,53122:9848,53133:9849,53131:9850,52912:9851,53134:9852,53378:10050,53379:10051,53380:10052,53381:10053,53382:10054,53383:10055,53384:10056,53385:10057,53386:10058,53387:10059,53388:10060,53390:10061,53391:10062,53650:10098,53651:10099,53652:10100,53653:10101,53654:10102,53655:10103,53656:10104,53657:10105,53658:10106,53659:10107,53660:10108,53662:10109,53663:10110,50054:10529,50320:10530,50342:10532,50354:10534,50561:10536,50367:10537,50570:10539,50072:10540,50578:10541,50598:10543,50078:10544,50086:10561,50321:10562,50096:10563,50343:10564,50353:10565,50355:10566,50360:10567,50562:10568,50560:10569,50569:10570,50571:10571,50104:10572,50579:10573,50079:10574,50599:10575,50110:10576,50049:10785,50048:10786,50052:10787,50050:10788,50306:10789,51085:10790,50304:10791,50308:10792,50053:10793,50051:10794,50310:10795,50312:10796,50316:10797,50055:10798,50314:10799,50318:10800,50057:10801,50056:10802,50059:10803,50058:10804,50330:10805,50326:10806,50322:10807,50328:10808,50332:10810,50334:10811,50338:10812,50336:10813,50340:10814,50061:10815,50060:10816,50063:10817,50062:10818,51087:10819,50352:10820,50346:10821,50350:10822,50344:10823,50356:10824,50358:10825,50361:10826,50365:10827,50363:10828,50563:10829,50567:10830,50565:10831,50065:10832,50067:10833,50066:10834,50070:10835,50068:10836,51089:10837,50576:10838,50572:10839,50069:10840,50580:10841,50584:10842,50582:10843,50586:10844,50588:10845,50592:10846,50590:10847,50596:10848,50594:10849,50074:10850,50073:10851,50076:10852,50075:10853,50604:10854,51091:10855,50608:10856,50602:10857,50610:10858,50606:10859,50600:10860,51095:10861,51099:10862,51097:10863,51093:10864,50612:10865,50077:10866,50616:10867,50614:10868,50617:10869,50621:10870,50619:10871,50081:11041,50080:11042,50084:11043,50082:11044,50307:11045,51086:11046,50305:11047,50309:11048,50085:11049,50083:11050,50311:11051,50313:11052,50317:11053,50087:11054,50315:11055,50319:11056,50089:11057,50088:11058,50091:11059,50090:11060,50331:11061,50327:11062,50323:11063,50329:11064,51125:11065,50333:11066,50335:11067,50337:11069,50341:11070,50093:11071,50092:11072,50095:11073,50094:11074,51088:11075,50347:11077,50351:11078,50345:11079,50357:11080,50359:11081,50362:11082,50366:11083,50364:11084,50564:11085,50568:11086,50566:11087,50097:11088,50099:11089,50098:11090,50102:11091,50100:11092,51090:11093,50577:11094,50573:11095,50101:11096,50581:11097,50585:11098,50583:11099,50587:11100,50589:11101,50593:11102,50591:11103,50597:11104,50595:11105,50106:11106,50105:11107,50108:11108,50107:11109,50605:11110,51092:11111,50609:11112,50603:11113,50611:11114,50607:11115,50601:11116,51096:11117,51100:11118,51098:11119,51094:11120,50613:11121,50109:11122,50111:11123,50615:11124,50618:11125,50622:11126,50620:11127,14989442:12321,14989444:12322,14989445:12323,14989452:12324,14989458:12325,14989471:12326,14989475:12327,14989476:12328,14989480:12329,14989483:12330,14989486:12331,14989487:12332,14989488:12333,14989493:12334,14989696:12335,14989697:12336,14989700:12337,14989703:12338,14989713:12339,14989722:12340,14989724:12341,14989731:12342,14989736:12343,14989737:12344,14989748:12345,14989749:12346,14989753:12347,14989759:12348,14989965:12349,14989974:12350,14989975:12351,14989981:12352,14989999:12353,14990009:12354,14990211:12355,14990224:12356,14990234:12357,14990235:12358,14990240:12359,14990241:12360,14990242:12361,14990248:12362,14990255:12363,14990257:12364,14990259:12365,14990261:12366,14990269:12367,14990270:12368,14990271:12369,14990464:12370,14990466:12371,14990467:12372,14990472:12373,14990475:12374,14990476:12375,14990482:12376,14990485:12377,14990486:12378,14990487:12379,14990489:12380,14990510:12381,14990513:12382,14990752:12383,14990515:12384,14990517:12385,14990519:12386,14990521:12387,14990523:12388,14990526:12389,14990720:12390,14990722:12391,14990728:12392,14990729:12393,14990731:12394,14990732:12395,14990738:12396,14990740:12397,14990742:12398,14990744:12399,14990751:12400,14990755:12401,14990762:12402,14990764:12403,14990766:12404,14990769:12405,14990775:12406,14990776:12407,14990777:12408,14990778:12409,14990781:12410,14990782:12411,14990977:12412,14990978:12413,14990980:12414,14990981:12577,14990985:12578,14990986:12579,14990988:12580,14990990:12581,14990992:12582,14990994:12583,14990995:12584,14990996:12585,14990999:12586,14991001:12587,14991002:12588,14991006:12589,14991007:12590,14991026:12591,14991031:12592,14991033:12593,14991035:12594,14991036:12595,14991037:12596,14991038:12597,14991232:12598,14991233:12599,14991237:12600,14991238:12601,14991240:12602,14991241:12603,14991243:12604,14991244:12605,14991245:12606,14991247:12607,14991250:12608,14991260:12609,14991264:12610,14991266:12611,14991280:12612,14991282:12613,14991292:12614,14991293:12615,14991295:12616,15040640:12617,15040641:12618,15040644:12619,15040647:12620,15040650:12621,15040652:12622,15040654:12623,15040656:12624,15040659:12625,15040663:12626,15040664:12627,15040667:12628,15040668:12629,15040669:12630,15040670:12631,15040674:12632,15040679:12633,15040686:12634,15040688:12635,15040690:12636,15040691:12637,15040693:12638,15040896:12639,15040897:12640,15040898:12641,15040901:12642,15040902:12643,15040906:12644,15040908:12645,15040910:12646,15040913:12647,15040914:12648,15040915:12649,15040919:12650,15040921:12651,15040927:12652,15040928:12653,15040930:12654,15040931:12655,15040934:12656,15040935:12657,15040938:12658,15040941:12659,15040944:12660,15040945:12661,15040699:12662,15041153:12663,15041155:12664,15041156:12665,15041158:12666,15041162:12667,15041166:12668,15041167:12669,15041168:12670,15041170:12833,15041171:12834,15041172:12835,15041174:12836,15041179:12837,15041180:12838,15041182:12839,15041183:12840,15041184:12841,15041185:12842,15041186:12843,15041194:12844,15041199:12845,15041200:12846,15041209:12847,15041210:12848,15041213:12849,15041408:12850,15041411:12851,15041412:12852,15041415:12853,15041420:12854,15041422:12855,15041424:12856,15041427:12857,15041428:12858,15041432:12859,15041436:12860,15041437:12861,15041439:12862,15041442:12863,15041444:12864,15041446:12865,15041448:12866,15041449:12867,15041455:12868,15041457:12869,15041462:12870,15041466:12871,15041470:12872,15041667:12873,15041670:12874,15041671:12875,15041672:12876,15041675:12877,15041676:12878,15041677:12879,15041678:12880,15041458:12881,15041680:12882,15041687:12883,15041689:12884,15041691:12885,15041692:12886,15041693:12887,15041694:12888,15041699:12889,15041703:12890,15041704:12891,15041708:12892,15041709:12893,15041711:12894,15041713:12895,15041715:12896,15041716:12897,15041717:12898,15041720:12899,15041721:12900,15041922:12901,15041930:12902,15041935:12903,15041939:12904,15041941:12905,15041943:12906,15041944:12907,15041951:12908,15041956:12909,15041958:12910,15041982:12911,15042179:12912,15042180:12913,15042187:12914,15042190:12915,15042200:12916,15042205:12917,15042209:12918,15042211:12919,15042221:12920,15042232:12921,15042234:12922,15042236:12923,15042238:12924,15042239:12925,15042434:12926,15042440:13089,15042447:13090,15042449:13091,15042450:13092,15042451:13093,15042453:13094,15042456:13095,15042462:13096,15042466:13097,15042469:13098,15042478:13099,15042482:13100,15042483:13101,15042484:13102,15042487:13103,15042689:13104,15042690:13105,15042693:13106,15042706:13107,15042707:13108,15042709:13109,15042710:13110,15042712:13111,15042722:13112,15042728:13113,15042737:13114,15042738:13115,15042741:13116,15042748:13117,15042949:13118,15042953:13119,15042965:13120,15042967:13121,15042968:13122,15042970:13123,15042972:13124,15042975:13125,15042976:13126,15042977:13127,15042982:13128,15042990:13129,15042999:13130,15043e3:13131,15043001:13132,15043200:13133,15043202:13134,15043205:13135,15043210:13136,15043212:13137,15043219:13138,15043221:13139,15043222:13140,15043223:13141,15043224:13142,15043226:13143,15043228:13144,15043236:13145,15043237:13146,15043238:13147,15043239:13148,15043247:13149,15043248:13150,15043254:13151,15043255:13152,15043256:13153,15043258:13154,15043259:13155,15043261:13156,15043456:13157,15043460:13158,15043462:13159,15043464:13160,15043468:13161,15043471:13162,15043473:13163,15043476:13164,15043478:13165,15043483:13166,15043484:13167,15043489:13168,15043493:13169,15043496:13170,15043497:13171,15043498:13172,15043500:13173,15043504:13174,15043505:13175,15043508:13176,15043510:13177,15043511:13178,15043712:13179,15043715:13180,15043722:13181,15043723:13182,15043724:13345,15043729:13346,15043731:13347,15043736:13348,15043739:13349,15043740:13350,15043742:13351,15043743:13352,15043749:13353,15043751:13354,15043752:13355,15043753:13356,15043755:13357,15043756:13358,15043757:13359,15043760:13360,15043762:13361,15043765:13362,15043772:13363,15043773:13364,15043774:13365,15043970:13366,15043980:13367,15043979:13368,15043993:13369,15043995:13370,15044001:13371,15044003:13372,15044005:13373,15044012:13374,15044013:13375,15044018:13376,15044025:13377,15044030:13378,15044227:13379,15044231:13380,15044232:13381,15044238:13382,15044243:13383,15044244:13384,15044249:13385,15044253:13386,15044257:13387,15044260:13388,15044266:13389,15044267:13390,15044271:13391,15044274:13392,15044276:13393,15044277:13394,15044279:13395,15044280:13396,15044282:13397,15044285:13398,15044480:13399,15044485:13400,15044495:13401,15044498:13402,15044499:13403,15044501:13404,15044506:13405,15044509:13406,15044510:13407,15044512:13408,15044518:13409,15044519:13410,15044533:13411,15044738:13412,15044755:13413,15044762:13414,15044769:13415,15044775:13416,15044776:13417,15044778:13418,15044783:13419,15044785:13420,15044788:13421,15044789:13422,15044995:13423,15044996:13424,15044999:13425,15045005:13426,15045007:13427,15045022:13428,15045026:13429,15045028:13430,15045030:13431,15045031:13432,15045033:13433,15045035:13434,15045037:13435,15045038:13436,15045044:13437,15045055:13438,15045249:13601,15045251:13602,15045253:13603,15045256:13604,15045257:13605,15045261:13606,15045265:13607,15045269:13608,15045270:13609,15045276:13610,15045279:13611,15045281:13612,15045286:13613,15045287:13614,15045289:13615,15045290:13616,15045293:13617,15045294:13618,15045297:13619,15045303:13620,15045305:13621,15045306:13622,15045307:13623,15045311:13624,15045510:13625,15045514:13626,15045517:13627,15045518:13628,15045536:13629,15045546:13630,15045548:13631,15045551:13632,15045558:13633,15045564:13634,15045566:13635,15045567:13636,15045760:13637,15045761:13638,15045765:13639,15045768:13640,15045769:13641,15045772:13642,15045773:13643,15045774:13644,15045781:13645,15045802:13646,15045803:13647,15045810:13648,15045813:13649,15045814:13650,15045819:13651,15045820:13652,15045821:13653,15046017:13654,15046023:13655,15046025:13656,15046026:13657,15046029:13658,15046032:13659,15046033:13660,15046040:13661,15046042:13662,15046043:13663,15046046:13664,15046048:13665,15046049:13666,15046052:13667,15046054:13668,15046079:13669,15046273:13670,15046274:13671,15046278:13672,15046280:13673,15046286:13674,15046287:13675,15046289:13676,15046290:13677,15046291:13678,15046292:13679,15046295:13680,15046307:13681,15046308:13682,15046317:13683,15046322:13684,15046335:13685,15046529:13686,15046531:13687,15046534:13688,15046537:13689,15046539:13690,15046540:13691,15046542:13692,15046545:13693,15046546:13694,15046547:13857,15046551:13858,15046552:13859,15046555:13860,15046558:13861,15046562:13862,15046569:13863,15046582:13864,15046591:13865,15046789:13866,15046792:13867,15046794:13868,15046797:13869,15046798:13870,15046799:13871,15046800:13872,15046801:13873,15046802:13874,15046809:13875,15046828:13876,15046832:13877,15046835:13878,15046837:13879,15046839:13880,15046841:13881,15046843:13882,15046844:13883,15046845:13884,15046847:13885,15047040:13886,15047041:13887,15047043:13888,15047044:13889,15047046:13890,15047049:13891,15047051:13892,15047053:13893,15047055:13894,15047060:13895,15047070:13896,15047072:13897,15047073:13898,15047074:13899,15047075:13900,15047078:13901,15047081:13902,15047085:13903,15047087:13904,15047089:13905,15047090:13906,15047093:13907,15047300:13908,15047301:13909,15047304:13910,15047307:13911,15047308:13912,15047317:13913,15047321:13914,15047322:13915,15047325:13916,15047326:13917,15047327:13918,15047334:13919,15047335:13920,15047336:13921,15047337:13922,15047339:13923,15047340:13924,15047341:13925,15047345:13926,15047347:13927,15047351:13928,15047358:13929,15047557:13930,15047561:13931,15047562:13932,15047563:13933,15047567:13934,15047568:13935,15047564:13936,15047565:13937,15047577:13938,15047580:13939,15047581:13940,15047583:13941,15047585:13942,15047588:13943,15047589:13944,15047590:13945,15047591:13946,15047592:13947,15047601:13948,15047595:13949,15047597:13950,15047606:14113,15047607:14114,15047809:14115,15047810:14116,15047815:14117,15047818:14118,15047820:14119,15047825:14120,15047829:14121,15047834:14122,15047835:14123,15047837:14124,15047840:14125,15047842:14126,15047843:14127,15047844:14128,15047845:14129,15047849:14130,15047850:14131,15047852:14132,15047854:14133,15047855:14134,15047859:14135,15047860:14136,15047869:14137,15047870:14138,15047871:14139,15048069:14140,15048070:14141,15048076:14142,15048077:14143,15048082:14144,15048098:14145,15048101:14146,15048103:14147,15048104:14148,15048107:14149,15048109:14150,15048110:14151,15048111:14152,15048112:14153,15048113:14154,15048115:14155,15048116:14156,15048117:14157,15048119:14158,15048121:14159,15048122:14160,15048123:14161,15048124:14162,15048126:14163,15048321:14164,15048323:14165,15048332:14166,15048340:14167,15048343:14168,15048345:14169,15048346:14170,15048348:14171,15048349:14172,15048350:14173,15048351:14174,15048353:14175,15048341:14176,15048359:14177,15048360:14178,15048361:14179,15048364:14180,15048376:14181,15048381:14182,15048583:14183,15048584:14184,15048588:14185,15048591:14186,15048597:14187,15048605:14188,15048606:14189,15048612:14190,15048614:14191,15048615:14192,15048617:14193,15048621:14194,15048624:14195,15048629:14196,15048630:14197,15048632:14198,15048637:14199,15048638:14200,15048639:14201,15048835:14202,15048836:14203,15048840:14204,15048841:14205,15048609:14206,15048844:14369,15048845:14370,15048859:14371,15048862:14372,15048863:14373,15048864:14374,15048870:14375,15048871:14376,15048877:14377,15048882:14378,15048889:14379,15048895:14380,15049097:14381,15049100:14382,15049101:14383,15049103:14384,15049104:14385,15049109:14386,15049119:14387,15049121:14388,15049124:14389,15049127:14390,15049128:14391,15049144:14392,15049148:14393,15049151:14394,15049344:14395,15049345:14396,15049351:14397,15049352:14398,15049353:14399,15049354:14400,15049356:14401,15049357:14402,15049359:14403,15049360:14404,15049364:14405,15049366:14406,15049373:14407,15049376:14408,15049377:14409,15049378:14410,15049382:14411,15049385:14412,15049393:14413,15049394:14414,15049604:14415,15049404:14416,15049602:14417,15049608:14418,15049613:14419,15049614:14420,15049616:14421,15049618:14422,15049620:14423,15049622:14424,15049626:14425,15049629:14426,15049633:14427,15049634:14428,15049641:14429,15049651:14430,15049861:14431,15049862:14432,15049867:14433,15049868:14434,15049874:14435,15049875:14436,15049876:14437,15243649:14438,15049885:14439,15049889:14440,15049891:14441,15049892:14442,15049896:14443,15049903:14444,15049904:14445,15049907:14446,15049909:14447,15049910:14448,15049919:14449,15050115:14450,15050118:14451,15050130:14452,15050131:14453,15050137:14454,15050139:14455,15050141:14456,15050142:14457,15050143:14458,15050145:14459,15050147:14460,15050155:14461,15050157:14462,15050159:14625,15050162:14626,15050165:14627,15050166:14628,15050169:14629,15050171:14630,15050172:14631,15050379:14632,15050380:14633,15050382:14634,15050386:14635,15050389:14636,15050391:14637,15050399:14638,15050404:14639,15050407:14640,15050413:14641,15050414:14642,15050415:14643,15050416:14644,15050419:14645,15050423:14646,15050426:14647,15050428:14648,15050625:14649,15050627:14650,15050628:14651,15050632:14652,15050634:14653,15050637:14654,15050642:14655,15050653:14656,15050654:14657,15050655:14658,15050659:14659,15050660:14660,15050663:14661,15050670:14662,15050671:14663,15050673:14664,15050674:14665,15050676:14666,15050679:14667,15050880:14668,15050884:14669,15050892:14670,15050893:14671,15050894:14672,15050898:14673,15050899:14674,15050910:14675,15050915:14676,15050916:14677,15050919:14678,15050920:14679,15050922:14680,15050925:14681,15050928:14682,15051140:14683,15051141:14684,15051143:14685,15051144:14686,15051148:14687,15051152:14688,15051157:14689,15051166:14690,15051171:14691,15051173:14692,15051175:14693,15051181:14694,15051191:14695,15051194:14696,15051195:14697,15051198:14698,15051403:14699,15051408:14700,15051411:14701,15051414:14702,15051417:14703,15051420:14704,15051422:14705,15051423:14706,15051424:14707,15051426:14708,15051431:14709,15051436:14710,15051441:14711,15051442:14712,15051443:14713,15051445:14714,15051448:14715,15051450:14716,15051451:14717,15051455:14718,15051652:14881,15051654:14882,15051656:14883,15051663:14884,15051674:14885,15051676:14886,15051680:14887,15051685:14888,15051690:14889,15051694:14890,15051701:14891,15051702:14892,15051709:14893,15051904:14894,15051905:14895,15051912:14896,15051927:14897,15051956:14898,15051929:14899,15051931:14900,15051933:14901,15051937:14902,15051941:14903,15051949:14904,15051960:14905,15052161:14906,15052171:14907,15052172:14908,15052178:14909,15052182:14910,15052190:14911,15052200:14912,15052206:14913,15052207:14914,15052220:14915,15052221:14916,15052222:14917,15052223:14918,15052417:14919,15052420:14920,15052422:14921,15052426:14922,15052430:14923,15052432:14924,15052433:14925,15052435:14926,15052436:14927,15052438:14928,15052456:14929,15052457:14930,15052460:14931,15052461:14932,15052463:14933,15052465:14934,15052466:14935,15052471:14936,15052474:14937,15052476:14938,15052672:14939,15052673:14940,15052685:14941,15052687:14942,15052694:14943,15052695:14944,15052696:14945,15052697:14946,15052698:14947,15052704:14948,15052719:14949,15052721:14950,15052724:14951,15052733:14952,15052940:14953,15052951:14954,15052958:14955,15052959:14956,15052963:14957,15052966:14958,15052969:14959,15052971:14960,15052972:14961,15052974:14962,15052976:14963,15052978:14964,15052981:14965,15052982:14966,15053209:14967,15053210:14968,15053212:14969,15053218:14970,15053219:14971,15053223:14972,15053224:14973,15053225:14974,15053229:15137,15053232:15138,15053236:15139,15053237:15140,15053242:15141,15053243:15142,15053244:15143,15053245:15144,15053447:15145,15053448:15146,15053450:15147,15053455:15148,15053458:15149,15053469:15150,15053471:15151,15053472:15152,15053474:15153,15053475:15154,15053478:15155,15053482:15156,15053490:15157,15053492:15158,15053493:15159,15053498:15160,15053705:15161,15053707:15162,15053714:15163,15053725:15164,15053719:15165,15053742:15166,15053745:15167,15053746:15168,15053748:15169,15053953:15170,15053958:15171,15053965:15172,15053970:15173,15053995:15174,15053987:15175,15053988:15176,15053990:15177,15053991:15178,15054001:15179,15054004:15180,15054009:15181,15054013:15182,15054015:15183,15054210:15184,15054211:15185,15054214:15186,15054216:15187,15054229:15188,15054225:15189,15054233:15190,15054218:15191,15054239:15192,15054240:15193,15054241:15194,15054242:15195,15054244:15196,15054250:15197,15054253:15198,15054256:15199,15054265:15200,15054266:15201,15054270:15202,15054271:15203,15054465:15204,15054467:15205,15054472:15206,15054474:15207,15054482:15208,15054483:15209,15054484:15210,15054485:15211,15054489:15212,15054491:15213,15054495:15214,15054496:15215,15054503:15216,15054507:15217,15054512:15218,15054516:15219,15054520:15220,15054521:15221,15054723:15222,15054727:15223,15054731:15224,15054736:15225,15054734:15226,15054744:15227,15054745:15228,15054752:15229,15054756:15230,15054761:15393,15054776:15394,15054777:15395,15054976:15396,15054983:15397,15054989:15398,15054994:15399,15054996:15400,15054997:15401,15055e3:15402,15055007:15403,15055008:15404,15055022:15405,15055016:15406,15055026:15407,15055029:15408,15055038:15409,15055243:15410,15055248:15411,15055241:15412,15055249:15413,15055254:15414,15055256:15415,15055259:15416,15055260:15417,15055262:15418,15055272:15419,15055274:15420,15055275:15421,15055276:15422,15055277:15423,15055278:15424,15055280:15425,15055488:15426,15055499:15427,15055502:15428,15055522:15429,15055524:15430,15055525:15431,15055528:15432,15055530:15433,15055532:15434,15055537:15435,15055539:15436,15055549:15437,15055550:15438,15055551:15439,15055750:15440,15055756:15441,15055755:15442,15055758:15443,15055761:15444,15055762:15445,15055764:15446,15055765:15447,15055772:15448,15055774:15449,15055781:15450,15055787:15451,15056002:15452,15056006:15453,15056007:15454,15056008:15455,15056014:15456,15056025:15457,15056028:15458,15056029:15459,15056033:15460,15056034:15461,15056035:15462,15056036:15463,15056040:15464,15056043:15465,15056044:15466,15056046:15467,15056048:15468,15056052:15469,15056054:15470,15056059:15471,15056061:15472,15056063:15473,15056256:15474,15056260:15475,15056261:15476,15056263:15477,15056269:15478,15056272:15479,15056276:15480,15056280:15481,15056283:15482,15056288:15483,15056291:15484,15056292:15485,15056295:15486,15056303:15649,15056306:15650,15056308:15651,15056309:15652,15056312:15653,15056314:15654,15056317:15655,15056318:15656,15056521:15657,15056525:15658,15056527:15659,15056534:15660,15056540:15661,15056541:15662,15056546:15663,15056551:15664,15056555:15665,15056548:15666,15056556:15667,15056559:15668,15056560:15669,15056561:15670,15056568:15671,15056772:15672,15056775:15673,15056776:15674,15056777:15675,15056779:15676,15056784:15677,15056785:15678,15056786:15679,15056787:15680,15056788:15681,15056798:15682,15056801:15683,15056802:15684,15056808:15685,15056809:15686,15056810:15687,15056812:15688,15056813:15689,15056814:15690,15056815:15691,15056818:15692,15056819:15693,15056822:15694,15056826:15695,15056828:15696,15106183:15697,15106186:15698,15106189:15699,15106195:15700,15106196:15701,15106199:15702,15106200:15703,15106202:15704,15106207:15705,15106212:15706,15106221:15707,15106227:15708,15106229:15709,15106432:15710,15106439:15711,15106440:15712,15106441:15713,15106444:15714,15106449:15715,15106452:15716,15106454:15717,15106455:15718,15106461:15719,15106465:15720,15106471:15721,15106481:15722,15106494:15723,15106495:15724,15106690:15725,15106694:15726,15106696:15727,15106698:15728,15106702:15729,15106705:15730,15106707:15731,15106709:15732,15106712:15733,15106717:15734,15106718:15735,15106722:15736,15106724:15737,15106725:15738,15106728:15739,15106736:15740,15106737:15741,15106743:15742,15106747:15905,15106750:15906,15106946:15907,15106948:15908,15106952:15909,15106953:15910,15106954:15911,15106955:15912,15106958:15913,15106959:15914,15106964:15915,15106965:15916,15106969:15917,15106971:15918,15106973:15919,15106974:15920,15106978:15921,15106981:15922,15106994:15923,15106997:15924,15107e3:15925,15107004:15926,15107005:15927,15107202:15928,15107207:15929,15107210:15930,15107212:15931,15107216:15932,15107217:15933,15107218:15934,15107219:15935,15107220:15936,15107222:15937,15107223:15938,15107225:15939,15107228:15940,15107230:15941,15107234:15942,15107242:15943,15107243:15944,15107248:15945,15107249:15946,15107253:15947,15107254:15948,15107255:15949,15107257:15950,15107457:15951,15107461:15952,15107462:15953,15107465:15954,15107486:15955,15107488:15956,15107500:15957,15107506:15958,15107512:15959,15107515:15960,15107516:15961,15107519:15962,15107712:15963,15107713:15964,15107715:15965,15107716:15966,15107723:15967,15107725:15968,15107730:15969,15107731:15970,15107735:15971,15107736:15972,15107740:15973,15107741:15974,15107743:15975,15107744:15976,15107749:15977,15107752:15978,15107754:15979,15107757:15980,15107768:15981,15107769:15982,15107772:15983,15107968:15984,15107969:15985,15107970:15986,15107982:15987,15107983:15988,15107989:15989,15107996:15990,15107997:15991,15107998:15992,15107999:15993,15108001:15994,15108002:15995,15108007:15996,15108009:15997,15108005:15998,15108012:16161,15108013:16162,15108015:16163,15108225:16164,15108227:16165,15108228:16166,15108231:16167,15108243:16168,15108245:16169,15108252:16170,15108256:16171,15108258:16172,15108259:16173,15108263:16174,15108265:16175,15108267:16176,15108281:16177,15108285:16178,15108482:16179,15108483:16180,15108484:16181,15108486:16182,15108492:16183,15108496:16184,15108497:16185,15108498:16186,15108500:16187,15108502:16188,15108506:16189,15108508:16190,15108516:16191,15108525:16192,15108527:16193,15108531:16194,15108538:16195,15108541:16196,15108749:16197,15108750:16198,15108751:16199,15108752:16200,15108774:16201,15108776:16202,15108787:16203,15108790:16204,15108791:16205,15108794:16206,15108798:16207,15108799:16208,15108996:16209,15109006:16210,15109013:16211,15109014:16212,15109018:16213,15109034:16214,15109042:16215,15109044:16216,15109052:16217,15109053:16218,15109251:16219,15109252:16220,15109258:16221,15109259:16222,15109261:16223,15109264:16224,15109267:16225,15109270:16226,15109272:16227,15109289:16228,15109290:16229,15109293:16230,15109301:16231,15109302:16232,15109305:16233,15109308:16234,15109505:16235,15109506:16236,15109507:16237,15109508:16238,15109510:16239,15109514:16240,15109515:16241,15109518:16242,15109522:16243,15109523:16244,15109524:16245,15109528:16246,15109531:16247,15109541:16248,15109542:16249,15109548:16250,15109549:16251,15109553:16252,15109556:16253,15109557:16254,15109560:16417,15109564:16418,15109565:16419,15109567:16420,15109762:16421,15109764:16422,15109767:16423,15109770:16424,15109776:16425,15109780:16426,15109781:16427,15109785:16428,15109786:16429,15109790:16430,15109796:16431,15109798:16432,15109805:16433,15109806:16434,15109807:16435,15109821:16436,15110017:16437,15110021:16438,15110024:16439,15110030:16440,15110033:16441,15110035:16442,15110036:16443,15110037:16444,15110044:16445,15110048:16446,15110053:16447,15110058:16448,15110060:16449,15110066:16450,15110067:16451,15110069:16452,15110072:16453,15110073:16454,15110281:16455,15110282:16456,15110288:16457,15110290:16458,15110292:16459,15110296:16460,15110302:16461,15110304:16462,15110306:16463,15110308:16464,15110309:16465,15110313:16466,15110314:16467,15110319:16468,15110320:16469,15110325:16470,15110333:16471,15110335:16472,15110539:16473,15110543:16474,15110545:16475,15110546:16476,15110547:16477,15110548:16478,15110554:16479,15110555:16480,15110556:16481,15110557:16482,15110559:16483,15110560:16484,15110561:16485,15110563:16486,15110573:16487,15110579:16488,15110580:16489,15110587:16490,15110589:16491,15110789:16492,15110791:16493,15110799:16494,15110800:16495,15110801:16496,15110808:16497,15110809:16498,15110811:16499,15110813:16500,15110815:16501,15110817:16502,15110819:16503,15110822:16504,15110824:16505,15110828:16506,15110835:16507,15110845:16508,15110846:16509,15110847:16510,15111044:16673,15111049:16674,15111050:16675,15111051:16676,15111052:16677,15111054:16678,15111056:16679,15111057:16680,15111061:16681,15111063:16682,15111076:16683,15111077:16684,15111081:16685,15111082:16686,15111085:16687,15111088:16688,15111093:16689,15111095:16690,15111099:16691,15111103:16692,15111297:16693,15111300:16694,15111304:16695,15111305:16696,15111306:16697,15111311:16698,15111315:16699,15111316:16700,15111318:16701,15111321:16702,15111323:16703,15111326:16704,15111327:16705,15111330:16706,15111334:16707,15111337:16708,15111342:16709,15111345:16710,15111354:16711,15111356:16712,15111357:16713,15111555:16714,15111559:16715,15111561:16716,15111568:16717,15111570:16718,15111572:16719,15111583:16720,15111584:16721,15111591:16722,15111595:16723,15111610:16724,15111613:16725,15111809:16726,15111813:16727,15111818:16728,15111826:16729,15111829:16730,15111832:16731,15111837:16732,15111840:16733,15111843:16734,15111846:16735,15111854:16736,15111858:16737,15111859:16738,15111860:16739,15111871:16740,15112066:16741,15112072:16742,15112073:16743,15112078:16744,15112080:16745,15112084:16746,15112086:16747,15112088:16748,15112095:16749,15112112:16750,15112114:16751,15112116:16752,15112117:16753,15112121:16754,15112126:16755,15112127:16756,15112320:16757,15112324:16758,15112328:16759,15112329:16760,15112333:16761,15112337:16762,15112338:16763,15112341:16764,15112342:16765,15112349:16766,15112350:16929,15112353:16930,15112354:16931,15112355:16932,15112356:16933,15112358:16934,15112361:16935,15112362:16936,15112363:16937,15112364:16938,15112366:16939,15112368:16940,15112369:16941,15112371:16942,15112377:16943,15112375:16944,15112576:16945,15112581:16946,15112582:16947,15112586:16948,15112588:16949,15112593:16950,15112590:16951,15112599:16952,15112600:16953,15112601:16954,15112603:16955,15112604:16956,15112608:16957,15112609:16958,15113147:16959,15112618:16960,15112619:16961,15112620:16962,15112638:16963,15112627:16964,15112629:16965,15112639:16966,15112631:16967,15112632:16968,15112633:16969,15112635:16970,15112832:16971,15112636:16972,15112843:16973,15112844:16974,15112845:16975,15112848:16976,15112850:16977,15112857:16978,15112858:16979,15112859:16980,15112860:16981,15112863:16982,15112864:16983,15112868:16984,15112877:16985,15112881:16986,15112882:16987,15112885:16988,15112891:16989,15112895:16990,15113088:16991,15113090:16992,15113091:16993,15113096:16994,15113100:16995,15113102:16996,15113103:16997,15113108:16998,15113115:16999,15113119:17e3,15113128:17001,15113131:17002,15113132:17003,15113134:17004,15113146:17005,15113349:17006,15113351:17007,15113358:17008,15113363:17009,15113369:17010,15113372:17011,15113376:17012,15113378:17013,15113395:17014,15113406:17015,15113605:17016,15113607:17017,15113608:17018,15113612:17019,15113620:17020,15113621:17021,15113629:17022,15113638:17185,15113644:17186,15113646:17187,15113652:17188,15113654:17189,15113659:17190,15113857:17191,15113860:17192,15113870:17193,15113871:17194,15113873:17195,15113875:17196,15113878:17197,15113880:17198,15113881:17199,15113883:17200,15113904:17201,15113905:17202,15113906:17203,15113909:17204,15113915:17205,15113916:17206,15113917:17207,15114169:17208,15114112:17209,15114114:17210,15114115:17211,15114117:17212,15114120:17213,15114121:17214,15114130:17215,15114135:17216,15114137:17217,15114140:17218,15114145:17219,15114150:17220,15114160:17221,15114162:17222,15114166:17223,15114167:17224,15114642:17225,15114388:17226,15114393:17227,15114397:17228,15114399:17229,15114408:17230,15114407:17231,15114412:17232,15114413:17233,15114415:17234,15114416:17235,15114417:17236,15114419:17237,15114427:17238,15114431:17239,15114628:17240,15114629:17241,15114634:17242,15114636:17243,15114645:17244,15114647:17245,15114648:17246,15114651:17247,15114667:17248,15114670:17249,15114671:17250,15114672:17251,15114673:17252,15114674:17253,15114677:17254,15114681:17255,15114682:17256,15114683:17257,15114684:17258,15114882:17259,15114884:17260,15114886:17261,15114888:17262,15114902:17263,15114904:17264,15114906:17265,15114908:17266,15114913:17267,15114915:17268,15114917:17269,15114921:17270,15114922:17271,15114926:17272,15114930:17273,15114939:17274,15115141:17275,15115144:17276,15115148:17277,15115151:17278,15115152:17441,15115153:17442,15115155:17443,15115158:17444,15115161:17445,15115164:17446,15115165:17447,15115173:17448,15115176:17449,15115178:17450,15115179:17451,15115180:17452,15115181:17453,15115184:17454,15115185:17455,15115189:17456,15115190:17457,15115195:17458,15115196:17459,15115197:17460,15115398:17461,15115401:17462,15115402:17463,15115408:17464,15115409:17465,15115411:17466,15115414:17467,15115415:17468,15115441:17469,15115443:17470,15115445:17471,15115448:17472,15115451:17473,15115650:17474,15115653:17475,15115657:17476,15115662:17477,15115671:17478,15115675:17479,15115683:17480,15115684:17481,15115685:17482,15115686:17483,15115688:17484,15115689:17485,15115692:17486,15115696:17487,15115697:17488,15115698:17489,15115706:17490,15115707:17491,15115711:17492,15115904:17493,15115917:17494,15115922:17495,15115926:17496,15115928:17497,15115937:17498,15115941:17499,15115942:17500,15115944:17501,15115947:17502,15115949:17503,15115951:17504,15115959:17505,15115960:17506,15115962:17507,15115964:17508,15116165:17509,15116168:17510,15116177:17511,15116182:17512,15116183:17513,15116194:17514,15116197:17515,15116206:17516,15116207:17517,15116209:17518,15116211:17519,15116213:17520,15116222:17521,15116416:17522,15116417:17523,15116419:17524,15116431:17525,15116433:17526,15116437:17527,15116442:17528,15116445:17529,15116448:17530,15116452:17531,15116456:17532,15116464:17533,15116466:17534,15116468:17697,15116471:17698,15116475:17699,15116478:17700,15116479:17701,15116677:17702,15116678:17703,15116681:17704,15116682:17705,15116686:17706,15116688:17707,15116689:17708,15116690:17709,15116693:17710,15116694:17711,15116699:17712,15116708:17713,15116711:17714,15116714:17715,15116721:17716,15116723:17717,15116734:17718,15116929:17719,15116931:17720,15116934:17721,15116935:17722,15116937:17723,15116939:17724,15116945:17725,15116955:17726,15116957:17727,15116958:17728,15116959:17729,15116965:17730,15116971:17731,15116975:17732,15116976:17733,15116977:17734,15116980:17735,15116989:17736,15116990:17737,15116991:17738,15117190:17739,15117193:17740,15117192:17741,15117196:17742,15117200:17743,15117204:17744,15117205:17745,15117206:17746,15117212:17747,15117213:17748,15117220:17749,15117223:17750,15117228:17751,15117232:17752,15117233:17753,15117234:17754,15117244:17755,15117245:17756,15117442:17757,15117443:17758,15117446:17759,15117447:17760,15117449:17761,15117455:17762,15117456:17763,15117457:17764,15117463:17765,15117467:17766,15117470:17767,15117476:17768,15117480:17769,15117483:17770,15117484:17771,15117487:17772,15117493:17773,15117494:17774,15117499:17775,15117503:17776,15117702:17777,15117706:17778,15117709:17779,15117714:17780,15117718:17781,15117720:17782,15117725:17783,15117728:17784,15117735:17785,15117739:17786,15117742:17787,15117744:17788,15117749:17789,15117757:17790,15117758:17953,15117954:17954,15117957:17955,15117975:17956,15117979:17957,15117983:17958,15117984:17959,15117986:17960,15117987:17961,15117992:17962,15117993:17963,15117996:17964,15117997:17965,15117998:17966,15118e3:17967,15118008:17968,15118009:17969,15118013:17970,15118014:17971,15118211:17972,15118212:17973,15118217:17974,15118220:17975,15118230:17976,15118234:17977,15118241:17978,15118243:17979,15118246:17980,15118247:17981,15118254:17982,15118257:17983,15118263:17984,15118265:17985,15118271:17986,15118466:17987,15118468:17988,15118469:17989,15118473:17990,15118477:17991,15118478:17992,15118480:17993,15118482:17994,15118489:17995,15118495:17996,15118502:17997,15118503:17998,15118504:17999,15118508:18e3,15118510:18001,15118515:18002,15118517:18003,15118518:18004,15118522:18005,15118523:18006,15118527:18007,15118730:18008,15118731:18009,15118733:18010,15118735:18011,15118738:18012,15118740:18013,15118745:18014,15118747:18015,15118748:18016,15118763:18017,15118765:18018,15118767:18019,15118772:18020,15118774:18021,15118776:18022,15118777:18023,15118779:18024,15118981:18025,15118982:18026,15118983:18027,15118985:18028,15118996:18029,15118997:18030,15118999:18031,15119e3:18032,15119004:18033,15119007:18034,15119024:18035,15119026:18036,15119028:18037,15119234:18038,15119238:18039,15119245:18040,15119247:18041,15119248:18042,15119249:18043,15119250:18044,15119252:18045,15119254:18046,15119258:18209,15119260:18210,15119264:18211,15119271:18212,15119273:18213,15119275:18214,15119276:18215,15119278:18216,15119282:18217,15119284:18218,15119492:18219,15119495:18220,15119498:18221,15119502:18222,15119503:18223,15119505:18224,15119507:18225,15119514:18226,15119526:18227,15119527:18228,15119528:18229,15118759:18230,15119534:18231,15119535:18232,15119537:18233,15119545:18234,15119548:18235,15119551:18236,15119767:18237,15119774:18238,15119775:18239,15119777:18240,15119781:18241,15119783:18242,15119791:18243,15119792:18244,15119804:18245,15120002:18246,15120007:18247,15120017:18248,15120018:18249,15120020:18250,15120022:18251,15120023:18252,15120024:18253,15120042:18254,15120044:18255,15120052:18256,15120055:18257,15120057:18258,15120061:18259,15120063:18260,15120260:18261,15120264:18262,15120266:18263,15120270:18264,15120271:18265,15120278:18266,15120283:18267,15120285:18268,15120287:18269,15120288:18270,15120290:18271,15120293:18272,15120297:18273,15120303:18274,15120304:18275,15120308:18276,15120310:18277,15120316:18278,15120512:18279,15120516:18280,15120542:18281,15120546:18282,15120551:18283,15120562:18284,15120566:18285,15120569:18286,15120571:18287,15120572:18288,15120772:18289,15120773:18290,15120776:18291,15120777:18292,15120779:18293,15120783:18294,15120785:18295,15120786:18296,15120787:18297,15120788:18298,15120791:18299,15120796:18300,15120797:18301,15120798:18302,15120802:18465,15120803:18466,15120808:18467,15120819:18468,15120827:18469,15120829:18470,15121037:18471,15121043:18472,15121049:18473,15121056:18474,15121063:18475,15121069:18476,15121070:18477,15121073:18478,15121075:18479,15121083:18480,15121087:18481,15121280:18482,15121281:18483,15121283:18484,15121287:18485,15121288:18486,15121290:18487,15121293:18488,15121294:18489,15121295:18490,15121323:18491,15121325:18492,15121326:18493,15121337:18494,15121339:18495,15121341:18496,15121540:18497,15121544:18498,15121546:18499,15121548:18500,15121549:18501,15121558:18502,15121560:18503,15121562:18504,15121563:18505,15121574:18506,15121577:18507,15121578:18508,15121583:18509,15121584:18510,15121587:18511,15121590:18512,15121595:18513,15121596:18514,15121581:18515,15121807:18516,15121809:18517,15121810:18518,15121811:18519,15121815:18520,15121817:18521,15121818:18522,15121821:18523,15121822:18524,15121825:18525,15121826:18526,15121832:18527,15121836:18528,15121853:18529,15121854:18530,15122051:18531,15122055:18532,15122056:18533,15122059:18534,15122060:18535,15122061:18536,15122064:18537,15122066:18538,15122067:18539,15122068:18540,15122070:18541,15122074:18542,15122079:18543,15122080:18544,15122085:18545,15122086:18546,15122087:18547,15122088:18548,15122094:18549,15122095:18550,15122096:18551,15122101:18552,15122102:18553,15122108:18554,15122309:18555,15122311:18556,15122312:18557,15122314:18558,15122330:18721,15122334:18722,15122344:18723,15122345:18724,15122352:18725,15122357:18726,15122361:18727,15122364:18728,15122365:18729,15171712:18730,15171717:18731,15171718:18732,15171719:18733,15171725:18734,15171735:18735,15171744:18736,15171747:18737,15171759:18738,15171764:18739,15171767:18740,15171769:18741,15171772:18742,15171971:18743,15171972:18744,15171976:18745,15171977:18746,15171978:18747,15171979:18748,15171988:18749,15171989:18750,15171997:18751,15171998:18752,15171982:18753,15172004:18754,15172005:18755,15172012:18756,15172014:18757,15172021:18758,15172022:18759,15172030:18760,15172225:18761,15172229:18762,15172230:18763,15172244:18764,15172245:18765,15172246:18766,15172247:18767,15172248:18768,15172251:18769,15172260:18770,15172267:18771,15172272:18772,15172273:18773,15172276:18774,15172279:18775,15172490:18776,15172497:18777,15172499:18778,15172500:18779,15172501:18780,15172502:18781,15172504:18782,15172508:18783,15172516:18784,15172538:18785,15172739:18786,15172740:18787,15172741:18788,15172742:18789,15172743:18790,15172747:18791,15172748:18792,15172751:18793,15172766:18794,15172768:18795,15172779:18796,15172781:18797,15172783:18798,15172784:18799,15172785:18800,15172792:18801,15172993:18802,15172997:18803,15172998:18804,15172999:18805,15173002:18806,15173003:18807,15173008:18808,15173010:18809,15173015:18810,15173018:18811,15173020:18812,15173022:18813,15173024:18814,15173032:18977,15173049:18978,15173248:18979,15173253:18980,15173255:18981,15173260:18982,15173266:18983,15173274:18984,15173275:18985,15173280:18986,15173282:18987,15173295:18988,15173296:18989,15173298:18990,15173299:18991,15173306:18992,15173311:18993,15173504:18994,15173505:18995,15173508:18996,15173515:18997,15173516:18998,15173523:18999,15173526:19e3,15173529:19001,15173530:19002,15173532:19003,15173560:19004,15173566:19005,15173760:19006,15173767:19007,15173768:19008,15173769:19009,15173779:19010,15173783:19011,15173786:19012,15173789:19013,15173791:19014,15173796:19015,15173803:19016,15173807:19017,15173812:19018,15173816:19019,15173817:19020,15174017:19021,15174018:19022,15174019:19023,15174021:19024,15174030:19025,15174031:19026,15174032:19027,15174035:19028,15174037:19029,15174038:19030,15174042:19031,15174044:19032,15174046:19033,15174048:19034,15174051:19035,15174056:19036,15174059:19037,15174062:19038,15174063:19039,15174065:19040,15174071:19041,15174072:19042,15174075:19043,15174076:19044,15174079:19045,15174276:19046,15174281:19047,15174285:19048,15174286:19049,15174291:19050,15174299:19051,15174312:19052,15174317:19053,15174318:19054,15174321:19055,15174324:19056,15174334:19057,15174529:19058,15174535:19059,15174537:19060,15174540:19061,15174549:19062,15174550:19063,15174552:19064,15174559:19065,15174565:19066,15174579:19067,15174580:19068,15174586:19069,15174587:19070,15174590:19233,15174786:19234,15174788:19235,15174789:19236,15174791:19237,15174795:19238,15174797:19239,15174802:19240,15174803:19241,15174808:19242,15174809:19243,15174814:19244,15174818:19245,15174820:19246,15174823:19247,15174824:19248,15174828:19249,15174833:19250,15174834:19251,15174837:19252,15174842:19253,15174843:19254,15174845:19255,15175043:19256,15175053:19257,15175056:19258,15175058:19259,15175062:19260,15175064:19261,15175069:19262,15175070:19263,15175071:19264,15175072:19265,15175078:19266,15175079:19267,15175081:19268,15175083:19269,15175084:19270,15175086:19271,15175087:19272,15175089:19273,15175095:19274,15175097:19275,15175100:19276,15175296:19277,15175297:19278,15175299:19279,15175301:19280,15175302:19281,15175310:19282,15175312:19283,15175315:19284,15175317:19285,15175319:19286,15175320:19287,15175324:19288,15175326:19289,15175327:19290,15175328:19291,15175330:19292,15175333:19293,15175334:19294,15175338:19295,15175339:19296,15175341:19297,15175349:19298,15175351:19299,15175353:19300,15175356:19301,15175357:19302,15175359:19303,15175557:19304,15175558:19305,15175561:19306,15175563:19307,15175564:19308,15175567:19309,15175570:19310,15175571:19311,15175574:19312,15175577:19313,15175581:19314,15175585:19315,15175587:19316,15175590:19317,15175591:19318,15175593:19319,15175604:19320,15175605:19321,15175607:19322,15175609:19323,15175610:19324,15175611:19325,15175613:19326,15175615:19489,15175808:19490,15175809:19491,15175812:19492,15175815:19493,15175818:19494,15175825:19495,15175834:19496,15175835:19497,15175844:19498,15175846:19499,15175848:19500,15175849:19501,15175850:19502,15175851:19503,15175852:19504,15175853:19505,15175854:19506,15175855:19507,15175856:19508,15175857:19509,15175865:19510,15176064:19511,15176067:19512,15176068:19513,15176070:19514,15176071:19515,15176075:19516,15176077:19517,15176081:19518,15176082:19519,15176087:19520,15176093:19521,15176098:19522,15176102:19523,15176103:19524,15176104:19525,15176107:19526,15176109:19527,15176110:19528,15176113:19529,15176114:19530,15176320:19531,15176321:19532,15176325:19533,15176326:19534,15176327:19535,15176329:19536,15176335:19537,15176336:19538,15176337:19539,15176338:19540,15176344:19541,15176345:19542,15176346:19543,15176348:19544,15176351:19545,15176352:19546,15176353:19547,15176355:19548,15176358:19549,15176360:19550,15176361:19551,15176362:19552,15176363:19553,15176366:19554,15176367:19555,15176369:19556,15176370:19557,15176373:19558,15176377:19559,15176379:19560,15176383:19561,15176584:19562,15176585:19563,15176588:19564,15176592:19565,15176595:19566,15176600:19567,15176602:19568,15176603:19569,15176606:19570,15176607:19571,15176612:19572,15176616:19573,15176618:19574,15176619:19575,15176623:19576,15176628:19577,15176634:19578,15176635:19579,15176636:19580,15176639:19581,15176838:19582,15176850:19745,15176854:19746,15176855:19747,15176864:19748,15176865:19749,15176868:19750,15176871:19751,15176873:19752,15176874:19753,15176879:19754,15176886:19755,15176889:19756,15176893:19757,15176894:19758,15176895:19759,15177088:19760,15177091:19761,15177095:19762,15177096:19763,15177102:19764,15177104:19765,15177106:19766,15177111:19767,15177118:19768,15177119:19769,15177121:19770,15177135:19771,15177137:19772,15177145:19773,15177146:19774,15177147:19775,15177148:19776,15177149:19777,15177150:19778,15177345:19779,15177349:19780,15177360:19781,15177362:19782,15177363:19783,15177365:19784,15177369:19785,15177372:19786,15177378:19787,15177380:19788,15177396:19789,15177402:19790,15177407:19791,15177600:19792,15177601:19793,15177604:19794,15177606:19795,15177612:19796,15177614:19797,15177615:19798,15177623:19799,15177628:19800,15177631:19801,15177632:19802,15177633:19803,15177636:19804,15177639:19805,15177644:19806,15177646:19807,15177647:19808,15177649:19809,15177657:19810,15177856:19811,15177858:19812,15177859:19813,15177860:19814,15177863:19815,15177864:19816,15177866:19817,15177868:19818,15177871:19819,15177874:19820,15177875:19821,15177877:19822,15177878:19823,15177881:19824,15177883:19825,15177884:19826,15177885:19827,15177886:19828,15177891:19829,15177893:19830,15177894:19831,15177897:19832,15177901:19833,15177906:19834,15177907:19835,15177909:19836,15177912:19837,15177913:19838,15177914:20001,15177916:20002,15178122:20003,15178112:20004,15178113:20005,15178115:20006,15178116:20007,15178117:20008,15178121:20009,15178123:20010,15178133:20011,15178137:20012,15178143:20013,15178148:20014,15178149:20015,15178157:20016,15178158:20017,15178159:20018,15178161:20019,15178164:20020,15178369:20021,15178373:20022,15178380:20023,15178381:20024,15178389:20025,15178395:20026,15178396:20027,15178397:20028,15178399:20029,15178400:20030,15178402:20031,15178403:20032,15178404:20033,15178405:20034,15178406:20035,15178407:20036,15178408:20037,15178410:20038,15178413:20039,15178429:20040,15178625:20041,15178629:20042,15178633:20043,15178635:20044,15178636:20045,15178638:20046,15178644:20047,15178649:20048,15178656:20049,15178662:20050,15178664:20051,15178668:20052,15178672:20053,15178673:20054,15178678:20055,15178681:20056,15178684:20057,15178880:20058,15178886:20059,15178890:20060,15178894:20061,15178898:20062,15178900:20063,15178901:20064,15178903:20065,15178905:20066,15178906:20067,15178908:20068,15178914:20069,15178920:20070,15178925:20071,15178926:20072,15178927:20073,15178932:20074,15178933:20075,15178934:20076,15178937:20077,15178941:20078,15178942:20079,15179138:20080,15179141:20081,15179142:20082,15179146:20083,15179149:20084,15179150:20085,15179151:20086,15179154:20087,15179158:20088,15179159:20089,15179164:20090,15179166:20091,15179167:20092,15179168:20093,15179170:20094,15179172:20257,15179175:20258,15179178:20259,15179180:20260,15179184:20261,15179186:20262,15179187:20263,15179188:20264,15179194:20265,15179197:20266,15179392:20267,15179396:20268,15179404:20269,15179405:20270,15179412:20271,15179413:20272,15179414:20273,15179418:20274,15179423:20275,15179426:20276,15179431:20277,15179434:20278,15179438:20279,15179439:20280,15179441:20281,15179445:20282,15179454:20283,15179651:20284,15179657:20285,15179665:20286,15179666:20287,15179669:20288,15179673:20289,15179678:20290,15179679:20291,15179680:20292,15179684:20293,15179686:20294,15179690:20295,15179692:20296,15179696:20297,15179697:20298,15179700:20299,15179704:20300,15179707:20301,15179909:20302,15179910:20303,15179913:20304,15179917:20305,15179918:20306,15179921:20307,15179933:20308,15179937:20309,15179938:20310,15179939:20311,15179949:20312,15179950:20313,15179952:20314,15179957:20315,15179959:20316,15180163:20317,15180164:20318,15180167:20319,15180168:20320,15180172:20321,15180174:20322,15180178:20323,15180188:20324,15180190:20325,15180192:20326,15180193:20327,15180195:20328,15180196:20329,15180200:20330,15180202:20331,15180206:20332,15180218:20333,15180222:20334,15180426:20335,15180431:20336,15180436:20337,15180440:20338,15180449:20339,15180445:20340,15180446:20341,15180447:20342,15180452:20343,15180456:20344,15180460:20345,15180461:20346,15180464:20347,15180465:20348,15180466:20349,15180467:20350,15180475:20513,15180477:20514,15180479:20515,15180679:20516,15180680:20517,15180681:20518,15180684:20519,15180686:20520,15180690:20521,15180691:20522,15180693:20523,15180694:20524,15180708:20525,15180699:20526,15180703:20527,15180704:20528,15180705:20529,15180710:20530,15180714:20531,15180722:20532,15180723:20533,15180928:20534,15180726:20535,15180727:20536,15180730:20537,15180731:20538,15180735:20539,15180934:20540,15180940:20541,15180944:20542,15180954:20543,15180956:20544,15180958:20545,15180959:20546,15180960:20547,15180965:20548,15180967:20549,15180969:20550,15180973:20551,15180977:20552,15180980:20553,15180981:20554,15180987:20555,15180989:20556,15180991:20557,15181188:20558,15181189:20559,15181190:20560,15181194:20561,15181195:20562,15181199:20563,15181201:20564,15181204:20565,15181208:20566,15181211:20567,15181212:20568,15181223:20569,15181225:20570,15181227:20571,15181234:20572,15181241:20573,15181243:20574,15181244:20575,15181246:20576,15181451:20577,15181452:20578,15181457:20579,15181459:20580,15181460:20581,15181461:20582,15181462:20583,15181464:20584,15181467:20585,15181468:20586,15181473:20587,15181480:20588,15181481:20589,15181483:20590,15181487:20591,15181489:20592,15181492:20593,15181496:20594,15181499:20595,15181698:20596,15181700:20597,15181703:20598,15181704:20599,15181706:20600,15181711:20601,15181716:20602,15181718:20603,15181722:20604,15181725:20605,15181726:20606,15181728:20769,15181730:20770,15181733:20771,15181738:20772,15181739:20773,15181741:20774,15181745:20775,15181752:20776,15181756:20777,15181954:20778,15181955:20779,15181959:20780,15181961:20781,15181962:20782,15181964:20783,15181969:20784,15181973:20785,15181979:20786,15181982:20787,15181985:20788,15181991:20789,15181995:20790,15181997:20791,15181999:20792,15182e3:20793,15182004:20794,15182005:20795,15182008:20796,15182009:20797,15182010:20798,15182212:20799,15182213:20800,15182215:20801,15182216:20802,15182220:20803,15182229:20804,15182230:20805,15182233:20806,15182236:20807,15182237:20808,15182239:20809,15182240:20810,15182245:20811,15182247:20812,15182250:20813,15182253:20814,15182261:20815,15182264:20816,15182270:20817,15182464:20818,15182466:20819,15182469:20820,15182470:20821,15182474:20822,15182475:20823,15182480:20824,15182481:20825,15182484:20826,15182494:20827,15182496:20828,15182499:20829,15182508:20830,15182515:20831,15182517:20832,15182521:20833,15182523:20834,15182524:20835,15182726:20836,15182729:20837,15182732:20838,15182734:20839,15182737:20840,15182747:20841,15182760:20842,15182761:20843,15182763:20844,15182764:20845,15182769:20846,15182772:20847,15182779:20848,15182781:20849,15182782:20850,15182983:20851,15182996:20852,15183007:20853,15183011:20854,15183015:20855,15183017:20856,15183018:20857,15183019:20858,15183021:20859,15183022:20860,15183023:20861,15183024:20862,15183025:21025,15183028:21026,15183037:21027,15183039:21028,15183232:21029,15183233:21030,15183239:21031,15183246:21032,15183253:21033,15183264:21034,15183268:21035,15183270:21036,15183273:21037,15183274:21038,15183277:21039,15183279:21040,15183282:21041,15183283:21042,15183287:21043,15183492:21044,15183497:21045,15183502:21046,15183504:21047,15183505:21048,15183510:21049,15183515:21050,15183518:21051,15183520:21052,15183525:21053,15183532:21054,15183535:21055,15183536:21056,15183538:21057,15183541:21058,15183542:21059,15183546:21060,15183547:21061,15183548:21062,15183549:21063,15183746:21064,15183749:21065,15183752:21066,15183754:21067,15183764:21068,15183766:21069,15183767:21070,15183769:21071,15183770:21072,15183771:21073,15183784:21074,15183786:21075,15183794:21076,15183796:21077,15183797:21078,15183800:21079,15183801:21080,15183802:21081,15183804:21082,15183806:21083,15184001:21084,15184002:21085,15184003:21086,15184004:21087,15184006:21088,15184009:21089,15184011:21090,15184012:21091,15184014:21092,15184015:21093,15184025:21094,15184027:21095,15184032:21096,15184037:21097,15184038:21098,15184040:21099,15184044:21100,15184049:21101,15184051:21102,15184052:21103,15184054:21104,15184057:21105,15184058:21106,15184262:21107,15184266:21108,15184277:21109,15184273:21110,15184274:21111,15184275:21112,15184281:21113,15184282:21114,15184283:21115,15184284:21116,15184285:21117,15184286:21118,15184289:21281,15184291:21282,15184295:21283,15184297:21284,15184301:21285,15184302:21286,15184304:21287,15184306:21288,15184313:21289,15184316:21290,15184317:21291,15184518:21292,15184519:21293,15184527:21294,15184532:21295,15184542:21296,15184544:21297,15184550:21298,15184560:21299,15184566:21300,15184567:21301,15184570:21302,15184571:21303,15184572:21304,15184575:21305,15184772:21306,15184775:21307,15184776:21308,15184777:21309,15184781:21310,15184783:21311,15184787:21312,15184788:21313,15184789:21314,15184791:21315,15184793:21316,15184794:21317,15184797:21318,15184806:21319,15184809:21320,15184811:21321,15184821:21322,15185027:21323,15185031:21324,15185032:21325,15185033:21326,15185039:21327,15185041:21328,15185042:21329,15185043:21330,15185046:21331,15185053:21332,15185054:21333,15185059:21334,15185062:21335,15185066:21336,15185069:21337,15185073:21338,15185084:21339,15185085:21340,15185086:21341,15185280:21342,15185281:21343,15185287:21344,15185288:21345,15185293:21346,15185297:21347,15185299:21348,15185303:21349,15185305:21350,15185306:21351,15185308:21352,15185309:21353,15185317:21354,15185319:21355,15185322:21356,15185328:21357,15185336:21358,15185338:21359,15185339:21360,15185343:21361,15185537:21362,15185538:21363,15185539:21364,15185541:21365,15185542:21366,15185544:21367,15185547:21368,15185548:21369,15185549:21370,15185553:21371,15185558:21372,15185559:21373,15185565:21374,15185566:21537,15185574:21538,15185575:21539,15185578:21540,15185587:21541,15185590:21542,15185591:21543,15185593:21544,15185794:21545,15185795:21546,15185796:21547,15185797:21548,15185798:21549,15185804:21550,15185805:21551,15185806:21552,15185815:21553,15185817:21554,15186048:21555,15185826:21556,15185829:21557,15185830:21558,15185834:21559,15185835:21560,15185837:21561,15185841:21562,15185845:21563,15185846:21564,15185849:21565,15185850:21566,15186056:21567,15186064:21568,15186065:21569,15186069:21570,15186071:21571,15186076:21572,15186077:21573,15186080:21574,15186087:21575,15186088:21576,15186092:21577,15186093:21578,15186095:21579,15186099:21580,15186102:21581,15186111:21582,15186308:21583,15186309:21584,15186311:21585,15186318:21586,15186320:21587,15186322:21588,15186328:21589,15186335:21590,15186337:21591,15186338:21592,15186341:21593,15186347:21594,15186350:21595,15186351:21596,15186355:21597,15186360:21598,15186366:21599,15186561:21600,15186566:21601,15186567:21602,15186570:21603,15186573:21604,15186577:21605,15186581:21606,15186584:21607,15186586:21608,15186589:21609,15186590:21610,15187132:21611,15187131:21612,15187133:21613,15187134:21614,15187135:21615,15187331:21616,15187332:21617,15187335:21618,15187343:21619,15187346:21620,15187347:21621,15187355:21622,15187356:21623,15187357:21624,15187361:21625,15187363:21626,15187364:21627,15187365:21628,15187366:21629,15187373:21630,15187377:21793,15187389:21794,15187390:21795,15187391:21796,15187584:21797,15187595:21798,15187597:21799,15187599:21800,15187600:21801,15187601:21802,15187606:21803,15187607:21804,15187612:21805,15187617:21806,15187618:21807,15187622:21808,15187626:21809,15187629:21810,15187636:21811,15187644:21812,15187647:21813,15187840:21814,15187843:21815,15187848:21816,15187854:21817,15187855:21818,15187867:21819,15187871:21820,15187875:21821,15187877:21822,15187880:21823,15187884:21824,15187886:21825,15187887:21826,15187890:21827,15187898:21828,15187901:21829,15187902:21830,15187903:21831,15237255:21832,15237256:21833,15237258:21834,15237261:21835,15237262:21836,15237263:21837,15237265:21838,15237267:21839,15237268:21840,15237270:21841,15237277:21842,15237278:21843,15237279:21844,15237280:21845,15237284:21846,15237286:21847,15237292:21848,15237294:21849,15237296:21850,15237300:21851,15237301:21852,15237303:21853,15237305:21854,15237306:21855,15237308:21856,15237310:21857,15237504:21858,15237508:21859,15237536:21860,15237540:21861,15237542:21862,15237549:21863,15237553:21864,15237557:21865,15237761:21866,15237768:21867,15237774:21868,15237788:21869,15237790:21870,15237798:21871,15237799:21872,15237803:21873,15237816:21874,15237817:21875,15238024:21876,15238029:21877,15238031:21878,15238034:21879,15238036:21880,15238037:21881,15238039:21882,15238040:21883,15238048:21884,15238061:21885,15238062:21886,15238064:22049,15238066:22050,15238067:22051,15238070:22052,15238073:22053,15238074:22054,15238078:22055,15238275:22056,15238283:22057,15238294:22058,15238295:22059,15238296:22060,15238300:22061,15238302:22062,15238304:22063,15238308:22064,15238311:22065,15238316:22066,15238320:22067,15238325:22068,15238330:22069,15238332:22070,15238533:22071,15238535:22072,15238538:22073,15238540:22074,15238546:22075,15238551:22076,15238560:22077,15238561:22078,15238567:22079,15238568:22080,15238569:22081,15238573:22082,15238575:22083,15238583:22084,15238785:22085,15238800:22086,15238788:22087,15238789:22088,15238790:22089,15238795:22090,15238798:22091,15238806:22092,15238808:22093,15238811:22094,15238814:22095,15238818:22096,15238830:22097,15238834:22098,15238836:22099,15238843:22100,15239051:22101,15239043:22102,15239045:22103,15239050:22104,15239054:22105,15239055:22106,15239061:22107,15239063:22108,15239067:22109,15239069:22110,15239070:22111,15239073:22112,15239076:22113,15239083:22114,15239084:22115,15239088:22116,15239089:22117,15239090:22118,15239093:22119,15239094:22120,15239096:22121,15239097:22122,15239101:22123,15239103:22124,15239296:22125,15239299:22126,15239311:22127,15239315:22128,15239316:22129,15239321:22130,15239322:22131,15239325:22132,15239329:22133,15239330:22134,15239336:22135,15239346:22136,15239348:22137,15239354:22138,15239555:22139,15239556:22140,15239557:22141,15239558:22142,15239563:22305,15239566:22306,15239567:22307,15239569:22308,15239574:22309,15239580:22310,15239584:22311,15239587:22312,15239591:22313,15239597:22314,15239604:22315,15239611:22316,15239613:22317,15239615:22318,15239808:22319,15239809:22320,15239811:22321,15239812:22322,15239815:22323,15239817:22324,15239818:22325,15239822:22326,15239825:22327,15239828:22328,15239830:22329,15239832:22330,15239834:22331,15239835:22332,15239840:22333,15239841:22334,15239843:22335,15239844:22336,15239847:22337,15239848:22338,15239849:22339,15239850:22340,15239854:22341,15239856:22342,15239858:22343,15239860:22344,15239863:22345,15239866:22346,15239868:22347,15239870:22348,15239871:22349,15240070:22350,15240080:22351,15240085:22352,15240090:22353,15240096:22354,15240098:22355,15240100:22356,15240104:22357,15240106:22358,15240109:22359,15240111:22360,15240118:22361,15240119:22362,15240125:22363,15240126:22364,15240320:22365,15240321:22366,15240327:22367,15240328:22368,15240330:22369,15240331:22370,15240596:22371,15240347:22372,15240349:22373,15240350:22374,15240351:22375,15240353:22376,15240354:22377,15240364:22378,15240365:22379,15240366:22380,15240368:22381,15240371:22382,15240375:22383,15240378:22384,15240380:22385,15240381:22386,15240578:22387,15240579:22388,15240580:22389,15240583:22390,15240589:22391,15240590:22392,15240593:22393,15240597:22394,15240598:22395,15240599:22396,15240624:22397,15240632:22398,15240637:22561,15240639:22562,15240832:22563,15240834:22564,15240836:22565,15240838:22566,15240845:22567,15240850:22568,15240852:22569,15240853:22570,15240856:22571,15240857:22572,15240859:22573,15240860:22574,15240861:22575,15240870:22576,15240871:22577,15240873:22578,15240876:22579,15240894:22580,15240895:22581,15241088:22582,15241095:22583,15241097:22584,15241103:22585,15241104:22586,15241105:22587,15241108:22588,15241117:22589,15240595:22590,15241128:22591,15241130:22592,15241142:22593,15241144:22594,15241145:22595,15241148:22596,15241345:22597,15241350:22598,15241354:22599,15241359:22600,15241361:22601,15241365:22602,15241369:22603,15240877:22604,15241391:22605,15241401:22606,15241605:22607,15241607:22608,15241608:22609,15241610:22610,15241613:22611,15241615:22612,15241617:22613,15241618:22614,15241622:22615,15241624:22616,15241625:22617,15241626:22618,15241628:22619,15241632:22620,15241636:22621,15241637:22622,15241639:22623,15241642:22624,15241648:22625,15241651:22626,15241652:22627,15241654:22628,15241656:22629,15241660:22630,15241661:22631,15241857:22632,15241861:22633,15241874:22634,15241875:22635,15241877:22636,15241886:22637,15241894:22638,15241896:22639,15241897:22640,15241898:22641,15241903:22642,15241905:22643,15241908:22644,15241914:22645,15241917:22646,15241918:22647,15242112:22648,15242114:22649,15242119:22650,15242120:22651,15242124:22652,15242127:22653,15242131:22654,15242140:22817,15242151:22818,15242154:22819,15242159:22820,15242160:22821,15242161:22822,15242162:22823,15242167:22824,15242418:22825,15242170:22826,15242171:22827,15242173:22828,15242370:22829,15242371:22830,15242375:22831,15242380:22832,15242382:22833,15242384:22834,15242396:22835,15242398:22836,15242402:22837,15242403:22838,15242404:22839,15242405:22840,15242407:22841,15242410:22842,15242411:22843,15242415:22844,15242419:22845,15242420:22846,15242422:22847,15242431:22848,15242630:22849,15242639:22850,15242640:22851,15242641:22852,15242642:22853,15242643:22854,15242646:22855,15242649:22856,15242652:22857,15242653:22858,15242654:22859,15242655:22860,15242656:22861,15242657:22862,15242658:22863,15242660:22864,15242667:22865,15242671:22866,15242681:22867,15242682:22868,15242683:22869,15242685:22870,15242687:22871,15242881:22872,15242885:22873,15242886:22874,15242889:22875,15242891:22876,15242892:22877,15242895:22878,15242899:22879,15242904:22880,15242909:22881,15242911:22882,15242912:22883,15242914:22884,15242917:22885,15242919:22886,15242932:22887,15242934:22888,15242935:22889,15242936:22890,15242940:22891,15242941:22892,15242942:22893,15242943:22894,15243138:22895,15243143:22896,15243146:22897,15243147:22898,15243150:22899,15242925:22900,15243160:22901,15243162:22902,15243167:22903,15243168:22904,15243174:22905,15243176:22906,15243181:22907,15243187:22908,15243190:22909,15243196:22910,15243199:23073,15243392:23074,15243396:23075,15243397:23076,15243405:23077,15243406:23078,15243408:23079,15243409:23080,15243410:23081,15243416:23082,15243417:23083,15243419:23084,15243422:23085,15243425:23086,15243431:23087,15243433:23088,15243446:23089,15243448:23090,15243450:23091,15243452:23092,15243453:23093,15243648:23094,15243650:23095,15243654:23096,15243666:23097,15243667:23098,15243670:23099,15243671:23100,15243672:23101,15243673:23102,15243677:23103,15243680:23104,15243681:23105,15243682:23106,15243683:23107,15243684:23108,15243689:23109,15243692:23110,15243695:23111,15243701:23112,15243702:23113,15243703:23114,15243706:23115,15243917:23116,15243921:23117,15243926:23118,15243928:23119,15243930:23120,15243932:23121,15243937:23122,15243942:23123,15243943:23124,15243944:23125,15243949:23126,15243953:23127,15243955:23128,15243956:23129,15243957:23130,15243959:23131,15243960:23132,15243961:23133,15243967:23134,15244160:23135,15244161:23136,15244163:23137,15244165:23138,15244177:23139,15244178:23140,15244181:23141,15244183:23142,15244186:23143,15244188:23144,15244192:23145,15244195:23146,15244197:23147,15244199:23148,15243912:23149,15244218:23150,15244220:23151,15244221:23152,15244420:23153,15244421:23154,15244423:23155,15244427:23156,15244430:23157,15244431:23158,15244432:23159,15244435:23160,15244436:23161,15244441:23162,15244446:23163,15244447:23164,15244449:23165,15244451:23166,15244456:23329,15244462:23330,15244463:23331,15244465:23332,15244466:23333,15244473:23334,15244474:23335,15244476:23336,15244477:23337,15244478:23338,15244672:23339,15244675:23340,15244677:23341,15244685:23342,15244696:23343,15244701:23344,15244705:23345,15244708:23346,15244709:23347,15244719:23348,15244721:23349,15244722:23350,15244731:23351,15244931:23352,15244932:23353,15244933:23354,15244934:23355,15244935:23356,15244936:23357,15244937:23358,15244939:23359,15244940:23360,15244944:23361,15244947:23362,15244949:23363,15244951:23364,15244952:23365,15244953:23366,15244958:23367,15244960:23368,15244963:23369,15244967:23370,15244972:23371,15244973:23372,15244974:23373,15244977:23374,15244981:23375,15244990:23376,15244991:23377,15245185:23378,15245192:23379,15245193:23380,15245194:23381,15245198:23382,15245205:23383,15245206:23384,15245209:23385,15245210:23386,15245212:23387,15245215:23388,15245218:23389,15245219:23390,15245220:23391,15245226:23392,15245227:23393,15245229:23394,15245233:23395,15245235:23396,15245240:23397,15245242:23398,15245247:23399,15245441:23400,15245443:23401,15245446:23402,15245449:23403,15245450:23404,15245451:23405,15245456:23406,15245465:23407,15245458:23408,15245459:23409,15245460:23410,15245464:23411,15245466:23412,15245467:23413,15245468:23414,15245470:23415,15245471:23416,15245480:23417,15245485:23418,15245486:23419,15245488:23420,15245490:23421,15245493:23422,15245498:23585,15245500:23586,15245697:23587,15245699:23588,15245701:23589,15245704:23590,15245705:23591,15245706:23592,15245707:23593,15245710:23594,15245713:23595,15245717:23596,15245718:23597,15245720:23598,15245722:23599,15245724:23600,15245727:23601,15245728:23602,15245732:23603,15245737:23604,15245745:23605,15245753:23606,15245755:23607,15245952:23608,15245976:23609,15245978:23610,15245979:23611,15245980:23612,15245983:23613,15245984:23614,15245992:23615,15245994:23616,15246010:23617,15246013:23618,15246014:23619,15246208:23620,15246218:23621,15246219:23622,15246220:23623,15246221:23624,15246222:23625,15246225:23626,15246226:23627,15246227:23628,15246235:23629,15246238:23630,15246247:23631,15246255:23632,15246256:23633,15246257:23634,15246261:23635,15246263:23636,15246465:23637,15246470:23638,15246477:23639,15246478:23640,15246479:23641,15246485:23642,15246486:23643,15246488:23644,15246489:23645,15246490:23646,15246492:23647,15246496:23648,15246502:23649,15246503:23650,15246504:23651,15246512:23652,15246513:23653,15246514:23654,15246517:23655,15246521:23656,15246522:23657,15246526:23658,15246720:23659,15246722:23660,15246725:23661,15246726:23662,15246729:23663,15246735:23664,15246738:23665,15246743:23666,15246746:23667,15246747:23668,15246748:23669,15246753:23670,15246754:23671,15246755:23672,15246763:23673,15246766:23674,15246768:23675,15246771:23676,15246773:23677,15246778:23678,15246779:23841,15246780:23842,15246781:23843,15246985:23844,15246989:23845,15246992:23846,15246996:23847,15246997:23848,15247003:23849,15247004:23850,15247007:23851,15247008:23852,15247013:23853,15247024:23854,15247028:23855,15247029:23856,15247030:23857,15247031:23858,15247036:23859,15247252:23860,15247253:23861,15247254:23862,15247255:23863,15247256:23864,15247269:23865,15247273:23866,15247275:23867,15247277:23868,15247281:23869,15247283:23870,15247286:23871,15247289:23872,15247293:23873,15247295:23874,15247492:23875,15247493:23876,15247495:23877,15247503:23878,15247505:23879,15247506:23880,15247508:23881,15247509:23882,15247518:23883,15247520:23884,15247522:23885,15247524:23886,15247526:23887,15247531:23888,15247532:23889,15247535:23890,15247541:23891,15247543:23892,15247549:23893,15247550:23894,15247744:23895,15247747:23896,15247749:23897,15247751:23898,15247753:23899,15247757:23900,15247758:23901,15247763:23902,15247766:23903,15247767:23904,15247768:23905,15247772:23906,15247773:23907,15247777:23908,15247781:23909,15247783:23910,15247797:23911,15247798:23912,15247799:23913,15247801:23914,15247802:23915,15247803:23916,15247806:23917,15247807:23918,15248e3:23919,15248003:23920,15248006:23921,15248011:23922,15248015:23923,15248016:23924,15248018:23925,15248022:23926,15248023:23927,15248025:23928,15248031:23929,15248039:23930,15248041:23931,15248046:23932,15248047:23933,15248051:23934,15248054:24097,15248055:24098,15248059:24099,15248062:24100,15248259:24101,15248262:24102,15248264:24103,15248265:24104,15248266:24105,15248273:24106,15248275:24107,15248276:24108,15248277:24109,15248279:24110,15248285:24111,15248287:24112,15248300:24113,15248304:24114,15248308:24115,15248309:24116,15248310:24117,15248316:24118,15248319:24119,15248517:24120,15248518:24121,15248523:24122,15248529:24123,15248540:24124,15248542:24125,15248543:24126,15248522:24127,15248557:24128,15248560:24129,15248567:24130,15248572:24131,15248770:24132,15248771:24133,15248772:24134,15248773:24135,15248774:24136,15248776:24137,15248786:24138,15248787:24139,15248788:24140,15248793:24141,15248781:24142,15248798:24143,15248803:24144,15248813:24145,15248822:24146,15248824:24147,15248825:24148,15248828:24149,15248830:24150,15249025:24151,15249028:24152,15249029:24153,15249035:24154,15249037:24155,15249039:24156,15249044:24157,15249045:24158,15249052:24159,15249054:24160,15249055:24161,15249592:24162,15249593:24163,15249597:24164,15249598:24165,15249797:24166,15249799:24167,15249801:24168,15249803:24169,15249807:24170,15249809:24171,15249811:24172,15249812:24173,15249815:24174,15249816:24175,15249819:24176,15249821:24177,15249817:24178,15249827:24179,15249828:24180,15249830:24181,15249832:24182,15249833:24183,15249837:24184,15249843:24185,15249845:24186,15249846:24187,15249851:24188,15249854:24189,15250054:24190,15250055:24353,15250059:24354,15250064:24355,15250066:24356,15250067:24357,15250073:24358,15250075:24359,15250076:24360,15250084:24361,15250105:24362,15250106:24363,15250309:24364,15250310:24365,15250313:24366,15250315:24367,15250319:24368,15250326:24369,15250325:24370,15250329:24371,15250333:24372,15250337:24373,15250344:24374,15250348:24375,15250351:24376,15250352:24377,15250354:24378,15250357:24379,15250359:24380,15250360:24381,15250366:24382,15250367:24383,15250561:24384,15250563:24385,15250569:24386,15250578:24387,15250583:24388,15250587:24389,15250853:24390,15250857:24391,15250860:24392,15250862:24393,15250879:24394,15251074:24395,15251076:24396,15251080:24397,15251085:24398,15251088:24399,15251089:24400,15251093:24401,15251102:24402,15251103:24403,15251104:24404,15251110:24405,15251115:24406,15251116:24407,15251119:24408,15251122:24409,15251125:24410,15251127:24411,15251129:24412,15251131:24413,15251328:24414,15251333:24415,15251334:24416,15251335:24417,15251336:24418,15251338:24419,15251342:24420,15251345:24421,15251348:24422,15251349:24423,15251351:24424,15251353:24425,15251364:24426,15251365:24427,15251367:24428,15251372:24429,15251376:24430,15251132:24431,15251377:24432,15251378:24433,15251380:24434,15251389:24435,15251585:24436,15251588:24437,15251589:24438,15251590:24439,15251595:24440,15251601:24441,15251604:24442,15251606:24443,15251616:24444,15251617:24445,15251618:24446,15251619:24609,15251622:24610,15251623:24611,15251633:24612,15251635:24613,15251638:24614,15251639:24615,15251640:24616,15251641:24617,15251645:24618,15251840:24619,15251841:24620,15251851:24621,15251853:24622,15251854:24623,15251855:24624,15251860:24625,15251867:24626,15251868:24627,15251869:24628,15251870:24629,15251873:24630,15251874:24631,15251881:24632,15251884:24633,15251885:24634,15251887:24635,15251888:24636,15251889:24637,15251897:24638,15251898:24639,15251899:24640,15252098:24641,15252099:24642,15252105:24643,15252112:24644,15252114:24645,15252117:24646,15252122:24647,15252123:24648,15252125:24649,15252126:24650,15252130:24651,15252135:24652,15252137:24653,15252141:24654,15252142:24655,15252147:24656,15252149:24657,15252154:24658,15252155:24659,15252352:24660,15252353:24661,15252355:24662,15252356:24663,15252359:24664,15252367:24665,15252369:24666,15252372:24667,15252380:24668,15252392:24669,15252398:24670,15252400:24671,15252401:24672,15252407:24673,15252409:24674,15252410:24675,15252397:24676,15252608:24677,15252610:24678,15252615:24679,15252616:24680,15252623:24681,15252624:24682,15252630:24683,15252631:24684,15252632:24685,15252638:24686,15252640:24687,15252641:24688,15252643:24689,15252645:24690,15252647:24691,15252648:24692,15252652:24693,15252653:24694,15252654:24695,15252660:24696,15252661:24697,15252662:24698,15252663:24699,15252666:24700,15252864:24701,15252865:24702,15252867:24865,15252871:24866,15252879:24867,15252881:24868,15252882:24869,15252883:24870,15252884:24871,15252885:24872,15252888:24873,15252893:24874,15252894:24875,15252901:24876,15253149:24877,15253152:24878,15253153:24879,15253156:24880,15253157:24881,15253158:24882,15253173:24883,15253174:24884,15253176:24885,15253182:24886,15253376:24887,15253377:24888,15253382:24889,15253386:24890,15253387:24891,15253389:24892,15253392:24893,15253394:24894,15253395:24895,15253397:24896,15253408:24897,15253411:24898,15253412:24899,15253416:24900,15253422:24901,15253425:24902,15253429:24903,15253430:24904,15253435:24905,15253438:24906,15302786:24907,15302788:24908,15302792:24909,15302796:24910,15302808:24911,15302811:24912,15302824:24913,15302825:24914,15302831:24915,15302826:24916,15302828:24917,15302829:24918,15302835:24919,15302836:24920,15302839:24921,15302847:24922,15303043:24923,15303044:24924,15303052:24925,15303067:24926,15303069:24927,15303074:24928,15303078:24929,15303079:24930,15303084:24931,15303088:24932,15303092:24933,15303097:24934,15303301:24935,15303304:24936,15303307:24937,15303308:24938,15303310:24939,15303312:24940,15303317:24941,15303319:24942,15303320:24943,15303321:24944,15303323:24945,15303328:24946,15303329:24947,15303330:24948,15303333:24949,15303344:24950,15303346:24951,15303347:24952,15303348:24953,15303350:24954,15303357:24955,15303564:24956,15303358:24957,15303555:24958,15303556:25121,15303557:25122,15303559:25123,15303560:25124,15303573:25125,15303575:25126,15303576:25127,15303577:25128,15303580:25129,15303581:25130,15303583:25131,15303589:25132,15303570:25133,15303606:25134,15303595:25135,15303599:25136,15303600:25137,15303604:25138,15303614:25139,15303615:25140,15303808:25141,15303812:25142,15303813:25143,15303814:25144,15303816:25145,15303821:25146,15303824:25147,15303828:25148,15303830:25149,15303831:25150,15303832:25151,15303834:25152,15303836:25153,15303838:25154,15303840:25155,15303845:25156,15303842:25157,15303843:25158,15303847:25159,15303849:25160,15303854:25161,15303855:25162,15303857:25163,15303860:25164,15303862:25165,15303863:25166,15303865:25167,15303866:25168,15303868:25169,15303869:25170,15304067:25171,15304071:25172,15304072:25173,15304079:25174,15304083:25175,15304087:25176,15304089:25177,15304090:25178,15304091:25179,15304097:25180,15304100:25181,15304103:25182,15304109:25183,15304116:25184,15304121:25185,15304122:25186,15304123:25187,15304321:25188,15304323:25189,15304325:25190,15304326:25191,15304330:25192,15304334:25193,15304337:25194,15304339:25195,15304340:25196,15304341:25197,15304344:25198,15304350:25199,15304353:25200,15304358:25201,15304360:25202,15304364:25203,15304365:25204,15304366:25205,15304368:25206,15304369:25207,15304370:25208,15304371:25209,15304374:25210,15304379:25211,15304380:25212,15304381:25213,15304383:25214,15304578:25377,15304579:25378,15304581:25379,15304595:25380,15304596:25381,15304599:25382,15304601:25383,15304602:25384,15304606:25385,15304612:25386,15304613:25387,15304617:25388,15304618:25389,15304620:25390,15304621:25391,15304622:25392,15304623:25393,15304624:25394,15304625:25395,15304631:25396,15304633:25397,15304635:25398,15304637:25399,15304832:25400,15304833:25401,15304836:25402,15304837:25403,15304838:25404,15304839:25405,15304841:25406,15304842:25407,15304844:25408,15304848:25409,15304850:25410,15304851:25411,15304854:25412,15304856:25413,15304860:25414,15304861:25415,15304867:25416,15304868:25417,15304869:25418,15304870:25419,15304872:25420,15304878:25421,15304879:25422,15304880:25423,15304883:25424,15304885:25425,15304886:25426,15304888:25427,15304889:25428,15304890:25429,15304892:25430,15304894:25431,15305088:25432,15305090:25433,15305091:25434,15305094:25435,15305095:25436,15305098:25437,15305101:25438,15305102:25439,15305103:25440,15305105:25441,15305112:25442,15305113:25443,15305116:25444,15305117:25445,15305120:25446,15305121:25447,15305125:25448,15305127:25449,15305128:25450,15305129:25451,15305134:25452,15305135:25453,15305136:25454,15305141:25455,15305142:25456,15305143:25457,15305144:25458,15305145:25459,15305147:25460,15305148:25461,15305149:25462,15305151:25463,15305352:25464,15305353:25465,15305354:25466,15305357:25467,15305358:25468,15305362:25469,15305367:25470,15305369:25633,15305375:25634,15305376:25635,15305380:25636,15305381:25637,15305383:25638,15305384:25639,15305387:25640,15305391:25641,15305394:25642,15305398:25643,15305400:25644,15305402:25645,15305403:25646,15305404:25647,15305405:25648,15305407:25649,15305600:25650,15305601:25651,15305602:25652,15305603:25653,15305605:25654,15305606:25655,15305607:25656,15305608:25657,15305611:25658,15305612:25659,15305613:25660,15305614:25661,15305616:25662,15305619:25663,15305621:25664,15305623:25665,15305624:25666,15305625:25667,15305628:25668,15305629:25669,15305631:25670,15305632:25671,15305633:25672,15305635:25673,15305637:25674,15305639:25675,15305640:25676,15305644:25677,15305646:25678,15305648:25679,15305657:25680,15305659:25681,15305663:25682,15305856:25683,15305858:25684,15305864:25685,15305869:25686,15305873:25687,15305876:25688,15305877:25689,15305884:25690,15305885:25691,15305886:25692,15305887:25693,15305889:25694,15305892:25695,15305893:25696,15305895:25697,15305897:25698,15305898:25699,15305907:25700,15305908:25701,15305910:25702,15305911:25703,15306119:25704,15306120:25705,15306121:25706,15306128:25707,15306129:25708,15306130:25709,15306133:25710,15306135:25711,15306136:25712,15306138:25713,15306142:25714,15306148:25715,15306149:25716,15306151:25717,15306153:25718,15306154:25719,15306157:25720,15306159:25721,15306160:25722,15306161:25723,15306163:25724,15306164:25725,15306166:25726,15306170:25889,15306173:25890,15306175:25891,15306368:25892,15306369:25893,15306370:25894,15306376:25895,15306378:25896,15306379:25897,15306381:25898,15306383:25899,15306386:25900,15306389:25901,15306392:25902,15306395:25903,15306398:25904,15306401:25905,15306403:25906,15306404:25907,15306406:25908,15306408:25909,15306411:25910,15306420:25911,15306421:25912,15306422:25913,15306426:25914,15306409:25915,15306625:25916,15306628:25917,15306629:25918,15306630:25919,15306631:25920,15306633:25921,15306634:25922,15306635:25923,15306636:25924,15306637:25925,15306643:25926,15306649:25927,15306652:25928,15306654:25929,15306655:25930,15306658:25931,15306662:25932,15306663:25933,15306681:25934,15306679:25935,15306680:25936,15306682:25937,15306683:25938,15306685:25939,15306881:25940,15306882:25941,15306884:25942,15306888:25943,15306889:25944,15306893:25945,15306894:25946,15306895:25947,15306901:25948,15306902:25949,15306903:25950,15306911:25951,15306926:25952,15306927:25953,15306929:25954,15306930:25955,15306931:25956,15306932:25957,15306939:25958,15306943:25959,15306941:25960,15307139:25961,15307141:25962,15307144:25963,15307146:25964,15307148:25965,15307157:25966,15307161:25967,15307164:25968,15307167:25969,15307169:25970,15307171:25971,15307176:25972,15307179:25973,15307181:25974,15307182:25975,15307183:25976,15307185:25977,15307186:25978,15307396:25979,15307395:25980,15308216:25981,15308217:25982,15308222:26145,15308420:26146,15308424:26147,15308428:26148,15308429:26149,15308430:26150,15308445:26151,15308446:26152,15308447:26153,15308449:26154,15308454:26155,15308457:26156,15308459:26157,15308460:26158,15308468:26159,15308470:26160,15308474:26161,15308477:26162,15308479:26163,15308678:26164,15308680:26165,15308681:26166,15308683:26167,15308688:26168,15308689:26169,15308690:26170,15308691:26171,15308697:26172,15308698:26173,15308701:26174,15308702:26175,15308703:26176,15308704:26177,15308708:26178,15308710:26179,15308957:26180,15308958:26181,15308962:26182,15308964:26183,15308965:26184,15308966:26185,15308972:26186,15308977:26187,15308979:26188,15308983:26189,15308984:26190,15308985:26191,15308986:26192,15308988:26193,15308989:26194,15309185:26195,15309202:26196,15309204:26197,15309206:26198,15309207:26199,15309208:26200,15309217:26201,15309230:26202,15309236:26203,15309243:26204,15309244:26205,15309246:26206,15309247:26207,15309441:26208,15309442:26209,15309443:26210,15309444:26211,15309449:26212,15309457:26213,15309462:26214,15309466:26215,15309469:26216,15309471:26217,15309476:26218,15309477:26219,15309478:26220,15309481:26221,15309486:26222,15309487:26223,15309491:26224,15309498:26225,15309706:26226,15309714:26227,15054514:26228,15309720:26229,15309722:26230,15309725:26231,15309726:26232,15309727:26233,15309737:26234,15309743:26235,15309745:26236,15309754:26237,15309954:26238,15309955:26401,15309957:26402,15309961:26403,15309978:26404,15309979:26405,15309981:26406,15309985:26407,15309986:26408,15309987:26409,15309992:26410,15310001:26411,15310003:26412,15310209:26413,15310211:26414,15310218:26415,15310222:26416,15310223:26417,15310229:26418,15310231:26419,15310232:26420,15310234:26421,15310235:26422,15310243:26423,15310247:26424,15310250:26425,15310254:26426,15310259:26427,15310262:26428,15310263:26429,15310264:26430,15310267:26431,15310269:26432,15310271:26433,15310464:26434,15310473:26435,15310485:26436,15310486:26437,15310487:26438,15310489:26439,15310490:26440,15310494:26441,15310495:26442,15310498:26443,15310508:26444,15310510:26445,15310513:26446,15310514:26447,15310517:26448,15310518:26449,15310520:26450,15310521:26451,15310522:26452,15310524:26453,15310526:26454,15310527:26455,15310721:26456,15310724:26457,15310725:26458,15310727:26459,15310729:26460,15310730:26461,15310732:26462,15310733:26463,15310734:26464,15310736:26465,15310737:26466,15310740:26467,15310743:26468,15310744:26469,15310745:26470,15310749:26471,15310750:26472,15310752:26473,15310747:26474,15310753:26475,15310756:26476,15310767:26477,15310769:26478,15310772:26479,15310775:26480,15310776:26481,15310778:26482,15310983:26483,15310986:26484,15311001:26485,15310989:26486,15310990:26487,15310996:26488,15310998:26489,15311004:26490,15311006:26491,15311008:26492,15311011:26493,15311014:26494,15311019:26657,15311022:26658,15311023:26659,15311024:26660,15311026:26661,15311027:26662,15311029:26663,15311013:26664,15311038:26665,15311236:26666,15311239:26667,15311242:26668,15311249:26669,15311250:26670,15311251:26671,15311254:26672,15311255:26673,15311257:26674,15311258:26675,15311266:26676,15311267:26677,15311269:26678,15311270:26679,15311274:26680,15311276:26681,15311531:26682,15311533:26683,15311534:26684,15311536:26685,15311540:26686,15311543:26687,15311544:26688,15311546:26689,15311547:26690,15311551:26691,15311746:26692,15311749:26693,15311752:26694,15311756:26695,15311777:26696,15311779:26697,15311781:26698,15311782:26699,15311783:26700,15311786:26701,15311795:26702,15311798:26703,15312002:26704,15312007:26705,15312008:26706,15312017:26707,15312021:26708,15312022:26709,15312023:26710,15312026:26711,15312027:26712,15312028:26713,15312031:26714,15312034:26715,15312038:26716,15312039:26717,15312043:26718,15312049:26719,15312050:26720,15312051:26721,15312052:26722,15312053:26723,15312057:26724,15312058:26725,15312059:26726,15312060:26727,15312256:26728,15312257:26729,15312262:26730,15312263:26731,15312264:26732,15312269:26733,15312270:26734,15312276:26735,15312280:26736,15312281:26737,15312283:26738,15312284:26739,15312286:26740,15312287:26741,15312288:26742,15312539:26743,15312541:26744,15312543:26745,15312550:26746,15312560:26747,15312561:26748,15312562:26749,15312565:26750,15312569:26913,15312570:26914,15312573:26915,15312575:26916,15312771:26917,15312777:26918,15312787:26919,15312788:26920,15312793:26921,15312794:26922,15312796:26923,15312798:26924,15312807:26925,15312810:26926,15312811:26927,15312812:26928,15312816:26929,15312820:26930,15312821:26931,15312825:26932,15312829:26933,15312830:26934,15313026:26935,15313027:26936,15313028:26937,15313035:26938,15313036:26939,15313040:26940,15313041:26941,15313046:26942,15313054:26943,15313056:26944,15313058:26945,15313059:26946,15313060:26947,15313063:26948,15313069:26949,15313070:26950,15313075:26951,15313077:26952,15313078:26953,15313080:26954,15313287:26955,15313281:26956,15313284:26957,15313290:26958,15313291:26959,15313292:26960,15313294:26961,15313297:26962,15313300:26963,15313302:26964,15313309:26965,15313578:26966,15313580:26967,15313582:26968,15313583:26969,15313586:26970,15313588:26971,15313589:26972,15313590:26973,15313593:26974,15313595:26975,15313598:26976,15313599:26977,15313793:26978,15313795:26979,15313798:26980,15313800:26981,15313806:26982,15313808:26983,15313810:26984,15313813:26985,15313814:26986,15313815:26987,15313819:26988,15313820:26989,15313824:26990,15313828:26991,15313829:26992,15313831:26993,15313833:26994,15313836:26995,15313842:26996,15313843:26997,15313845:26998,15313849:26999,15313850:27e3,15313853:27001,15313855:27002,15314048:27003,15314049:27004,15314050:27005,15314051:27006,15314052:27169,15314053:27170,15314056:27171,15314057:27172,15314059:27173,15314060:27174,15314061:27175,15314062:27176,15314064:27177,15314066:27178,15314070:27179,15314073:27180,15314075:27181,15314076:27182,15314080:27183,15314086:27184,15314091:27185,15314093:27186,15314099:27187,15314100:27188,15314101:27189,15314103:27190,15314105:27191,15314106:27192,15314109:27193,15314312:27194,15314315:27195,15314316:27196,15314325:27197,15314326:27198,15314327:27199,15314331:27200,15314334:27201,15314337:27202,15314339:27203,15314341:27204,15314342:27205,15314344:27206,15314346:27207,15314347:27208,15314348:27209,15314349:27210,15314350:27211,15314355:27212,15314357:27213,15314359:27214,15314360:27215,15314361:27216,15314367:27217,15314560:27218,15314564:27219,15314565:27220,15314566:27221,15314567:27222,15314569:27223,15314570:27224,15314571:27225,15314573:27226,15314575:27227,15314576:27228,15314580:27229,15314586:27230,15314589:27231,15314590:27232,15314598:27233,15314599:27234,15314601:27235,15314604:27236,15314608:27237,15314609:27238,15314610:27239,15314615:27240,15314616:27241,15314619:27242,15314620:27243,15314622:27244,15314623:27245,15314817:27246,15314823:27247,15314824:27248,15314830:27249,15314832:27250,15314839:27251,15314840:27252,15314845:27253,15314847:27254,15314853:27255,15314855:27256,15314858:27257,15314859:27258,15314863:27259,15314867:27260,15314871:27261,15314872:27262,15314873:27425,15314874:27426,15314877:27427,15314879:27428,15315072:27429,15315074:27430,15315083:27431,15315087:27432,15315089:27433,15315094:27434,15315096:27435,15315097:27436,15315098:27437,15315100:27438,15315102:27439,15315106:27440,15315107:27441,15315110:27442,15315111:27443,15315112:27444,15315113:27445,15315114:27446,15315121:27447,15315125:27448,15315126:27449,15315127:27450,15315133:27451,15315329:27452,15315331:27453,15315332:27454,15315333:27455,15315337:27456,15315338:27457,15315342:27458,15315343:27459,15315344:27460,15315347:27461,15315348:27462,15315350:27463,15315352:27464,15315355:27465,15315357:27466,15315358:27467,15315359:27468,15315363:27469,15315369:27470,15315370:27471,15315356:27472,15315371:27473,15315368:27474,15315374:27475,15315376:27476,15315378:27477,15315381:27478,15315383:27479,15315387:27480,15315878:27481,15315890:27482,15315895:27483,15315897:27484,15316107:27485,15316098:27486,15316113:27487,15316119:27488,15316120:27489,15316124:27490,15316125:27491,15316126:27492,15316143:27493,15316144:27494,15316146:27495,15316147:27496,15316148:27497,15316154:27498,15316156:27499,15316357:27500,15316157:27501,15316354:27502,15316355:27503,15316359:27504,15316362:27505,15316371:27506,15316372:27507,15316383:27508,15316387:27509,15316386:27510,15316389:27511,15316393:27512,15316394:27513,15316395:27514,15316400:27515,15316406:27516,15316407:27517,15316411:27518,15316412:27681,15316414:27682,15316611:27683,15316612:27684,15316614:27685,15316618:27686,15316621:27687,15316622:27688,15316626:27689,15316627:27690,15316629:27691,15316630:27692,15316631:27693,15316632:27694,15316641:27695,15316650:27696,15316652:27697,15316654:27698,15316657:27699,15316661:27700,15316665:27701,15316668:27702,15316671:27703,15316867:27704,15316871:27705,15316873:27706,15316874:27707,15316884:27708,15316885:27709,15316886:27710,15316887:27711,15316890:27712,15316894:27713,15316895:27714,15316896:27715,15316901:27716,15316903:27717,15316905:27718,15316907:27719,15316910:27720,15316912:27721,15316915:27722,15316916:27723,15316926:27724,15317130:27725,15317122:27726,15317127:27727,15317134:27728,15317136:27729,15317137:27730,15317138:27731,15317141:27732,15317142:27733,15317145:27734,15317148:27735,15317149:27736,15317434:27737,15317435:27738,15317436:27739,15317632:27740,15317634:27741,15317635:27742,15317636:27743,15317637:27744,15317639:27745,15317646:27746,15317647:27747,15317654:27748,15317656:27749,15317659:27750,15317662:27751,15317668:27752,15317672:27753,15317676:27754,15317678:27755,15317679:27756,15317680:27757,15317683:27758,15317684:27759,15317685:27760,15317894:27761,15317896:27762,15317899:27763,15317909:27764,15317919:27765,15317924:27766,15317927:27767,15317932:27768,15317933:27769,15317934:27770,15317936:27771,15317937:27772,15317938:27773,15317941:27774,15317944:27937,15317951:27938,15318146:27939,15318147:27940,15318153:27941,15318159:27942,15318160:27943,15318161:27944,15318162:27945,15318164:27946,15318166:27947,15318167:27948,15318169:27949,15318170:27950,15318171:27951,15318175:27952,15318178:27953,15318182:27954,15318186:27955,15318187:27956,15318191:27957,15318193:27958,15318194:27959,15318196:27960,15318199:27961,15318201:27962,15318202:27963,15318204:27964,15318205:27965,15318207:27966,15318401:27967,15318403:27968,15318404:27969,15318405:27970,15318406:27971,15318407:27972,15318419:27973,15318421:27974,15318422:27975,15318423:27976,15318424:27977,15318426:27978,15318429:27979,15318430:27980,15318440:27981,15318441:27982,15318445:27983,15318446:27984,15318447:27985,15318448:27986,15318449:27987,15318451:27988,15318453:27989,15318458:27990,15318461:27991,15318671:27992,15318672:27993,15318673:27994,15318674:27995,15318676:27996,15318678:27997,15318679:27998,15318686:27999,15318689:28e3,15318690:28001,15318691:28002,15318693:28003,14909596:8513},oi=null,ai=oi,li=null,ci=li;ue.UTF8_TO_JIS_TABLE=si;ue.UTF8_TO_JISX0212_TABLE=Bi;ue.JIS_TO_UTF8_TABLE=ai;ue.JISX0212_TO_UTF8_TABLE=ci;var q8;function i8(){if(q8)return k0;q8=1;var E=n8(),x=ue;k0.FALLBACK_CHARACTER=63;var e=k0.HAS_TYPED=typeof Uint8Array<"u"&&typeof Uint16Array<"u",t=!1,n=!1;try{String.fromCharCode.apply(null,[97])==="a"&&(t=!0)}catch{}if(e)try{String.fromCharCode.apply(null,new Uint8Array([97]))==="a"&&(n=!0)}catch{}k0.CAN_CHARCODE_APPLY=t,k0.CAN_CHARCODE_APPLY_TYPED=n,k0.APPLY_BUFFER_SIZE=65533,k0.APPLY_BUFFER_SIZE_OK=null;var i=k0.EncodingNames={UTF32:{order:0},UTF32BE:{alias:["UCS4"]},UTF32LE:null,UTF16:{order:1},UTF16BE:{alias:["UCS2"]},UTF16LE:null,BINARY:{order:2},ASCII:{order:3,alias:["ISO646","CP367"]},JIS:{order:4,alias:["ISO2022JP"]},UTF8:{order:5},EUCJP:{order:6},SJIS:{order:7,alias:["CP932","MSKANJI","WINDOWS31J"]},UNICODE:{order:8}},r={};k0.EncodingAliases=r,k0.EncodingOrders=function(){for(var s=r,B=E.objectKeys(i),o=[],a,f,F,h,l=0,c=B.length;l<c;l++)if(a=B[l],s[a]=a,f=i[a],f!=null&&(f.order!=null&&(o[o.length]=a),f.alias))for(F=0,h=f.alias.length;F<h;F++)s[f.alias[F]]=a;return o.sort(function(u,C){return i[u].order-i[C].order}),o}();function A(){if(x.JIS_TO_UTF8_TABLE===null){x.JIS_TO_UTF8_TABLE={};for(var s=E.objectKeys(x.UTF8_TO_JIS_TABLE),B=0,o=s.length,a,f;B<o;B++)a=s[B],f=x.UTF8_TO_JIS_TABLE[a],f>95&&(x.JIS_TO_UTF8_TABLE[f]=a|0);for(x.JISX0212_TO_UTF8_TABLE={},s=E.objectKeys(x.UTF8_TO_JISX0212_TABLE),o=s.length,B=0;B<o;B++)a=s[B],f=x.UTF8_TO_JISX0212_TABLE[a],x.JISX0212_TO_UTF8_TABLE[f]=a|0}}return k0.init_JIS_TO_UTF8_TABLE=A,k0}var S0={};function fi(E){for(var x=0,e=E&&E.length,t;x<e;x++){if(t=E[x],t>255)return!1;if(t>=0&&t<=7||t===255)return!0}return!1}S0.isBINARY=fi;function ui(E){for(var x=0,e=E&&E.length,t;x<e;x++)if(t=E[x],t>255||t>=128&&t<=255||t===27)return!1;return!0}S0.isASCII=ui;function di(E){for(var x=0,e=E&&E.length,t,n,i;x<e;x++){if(t=E[x],t>255||t>=128&&t<=255)return!1;if(t===27){if(x+2>=e)return!1;if(n=E[x+1],i=E[x+2],n===36){if(i===40||i===64||i===66)return!0}else{if(n===38&&i===64)return!0;if(n===40&&(i===66||i===73||i===74))return!0}}}return!1}S0.isJIS=di;function Ci(E){for(var x=0,e=E&&E.length,t;x<e;x++)if(t=E[x],!(t<128)){if(t>255||t<142)return!1;if(t===142){if(x+1>=e||(t=E[++x],t<161||223<t))return!1}else if(t===143){if(x+2>=e||(t=E[++x],t<162||237<t)||(t=E[++x],t<161||254<t))return!1}else if(161<=t&&t<=254){if(x+1>=e||(t=E[++x],t<161||254<t))return!1}else return!1}return!0}S0.isEUCJP=Ci;function Fi(E){for(var x=0,e=E&&E.length,t;x<e&&E[x]>128;)if(E[x++]>255)return!1;for(;x<e;x++)if(t=E[x],!(t<=128||161<=t&&t<=223)&&(t===160||t>239||x+1>=e||(t=E[++x],t<64||t===127||t>252)))return!1;return!0}S0.isSJIS=Fi;function hi(E){for(var x=0,e=E&&E.length,t;x<e;x++){if(t=E[x],t>255)return!1;if(!(t===9||t===10||t===13||t>=32&&t<=126))if(t>=194&&t<=223){if(x+1>=e||E[x+1]<128||E[x+1]>191)return!1;x++}else if(t===224){if(x+2>=e||E[x+1]<160||E[x+1]>191||E[x+2]<128||E[x+2]>191)return!1;x+=2}else if(t>=225&&t<=236||t===238||t===239){if(x+2>=e||E[x+1]<128||E[x+1]>191||E[x+2]<128||E[x+2]>191)return!1;x+=2}else if(t===237){if(x+2>=e||E[x+1]<128||E[x+1]>159||E[x+2]<128||E[x+2]>191)return!1;x+=2}else if(t===240){if(x+3>=e||E[x+1]<144||E[x+1]>191||E[x+2]<128||E[x+2]>191||E[x+3]<128||E[x+3]>191)return!1;x+=3}else if(t>=241&&t<=243){if(x+3>=e||E[x+1]<128||E[x+1]>191||E[x+2]<128||E[x+2]>191||E[x+3]<128||E[x+3]>191)return!1;x+=3}else if(t===244){if(x+3>=e||E[x+1]<128||E[x+1]>143||E[x+2]<128||E[x+2]>191||E[x+3]<128||E[x+3]>191)return!1;x+=3}else return!1}return!0}S0.isUTF8=hi;function Di(E){var x=0,e=E&&E.length,t=null,n,i,r,A;if(e<2){if(E[0]>255)return!1}else{if(n=E[0],i=E[1],n===255&&i===254||n===254&&i===255)return!0;for(;x<e;x++)if(E[x]===0){t=x;break}else if(E[x]>255)return!1;if(t===null)return!1;if(r=E[t+1],r!==void 0&&r>0&&r<128||(A=E[t-1],A!==void 0&&A>0&&A<128))return!0}return!1}S0.isUTF16=Di;function pi(E){var x=0,e=E&&E.length,t=null,n,i;if(e<2){if(E[0]>255)return!1}else{if(n=E[0],i=E[1],n===254&&i===255)return!0;for(;x<e;x++)if(E[x]===0){t=x;break}else if(E[x]>255)return!1;if(t===null)return!1;if(t%2===0)return!0}return!1}S0.isUTF16BE=pi;function mi(E){var x=0,e=E&&E.length,t=null,n,i;if(e<2){if(E[0]>255)return!1}else{if(n=E[0],i=E[1],n===255&&i===254)return!0;for(;x<e;x++)if(E[x]===0){t=x;break}else if(E[x]>255)return!1;if(t===null)return!1;if(t%2!==0)return!0}return!1}S0.isUTF16LE=mi;function gi(E){var x=0,e=E&&E.length,t=null,n,i,r,A,s,B;if(e<4){for(;x<e;x++)if(E[x]>255)return!1}else{if(n=E[0],i=E[1],r=E[2],A=E[3],n===0&&i===0&&r===254&&A===255||n===255&&i===254&&r===0&&A===0)return!0;for(;x<e;x++)if(E[x]===0&&E[x+1]===0&&E[x+2]===0){t=x;break}else if(E[x]>255)return!1;if(t===null)return!1;if(s=E[t+3],s!==void 0&&s>0&&s<=127)return E[t+2]===0&&E[t+1]===0;if(B=E[t-1],B!==void 0&&B>0&&B<=127)return E[t+1]===0&&E[t+2]===0}return!1}S0.isUTF32=gi;function _i(E){for(var x=0,e=E&&E.length,t;x<e;x++)if(t=E[x],t<0||t>1114111)return!1;return!0}S0.isUNICODE=_i;var $={},b0=i8(),r8=n8(),A8=S0,Q0=ue;function vi(E){for(var x=[],e=0,t=0,n=E&&E.length,i,r;t<n;t++){for(;E[t]===27;)if(E[t+1]===36&&E[t+2]===66||E[t+1]===36&&E[t+2]===64?e=1:E[t+1]===40&&E[t+2]===73?e=2:E[t+1]===36&&E[t+2]===40&&E[t+3]===68?(e=3,t++):e=0,t+=3,E[t]===void 0)return x;e===1?(i=E[t],r=E[++t],i&1?(i>>=1,i<47?i+=113:i-=79,r>95?r+=32:r+=31):(i>>=1,i<=47?i+=112:i-=80,r+=126),x[x.length]=i&255,x[x.length]=r&255):e===2?x[x.length]=E[t]+128&255:e===3?x[x.length]=b0.FALLBACK_CHARACTER:x[x.length]=E[t]&255}return x}$.JISToSJIS=vi;function bi(E){for(var x=[],e=0,t=E&&E.length,n=0;n<t;n++){for(;E[n]===27;)if(E[n+1]===36&&E[n+2]===66||E[n+1]===36&&E[n+2]===64?e=1:E[n+1]===40&&E[n+2]===73?e=2:E[n+1]===36&&E[n+2]===40&&E[n+3]===68?(e=3,n++):e=0,n+=3,E[n]===void 0)return x;e===1?(x[x.length]=E[n]+128&255,x[x.length]=E[++n]+128&255):e===2?(x[x.length]=142,x[x.length]=E[n]+128&255):e===3?(x[x.length]=143,x[x.length]=E[n]+128&255,x[x.length]=E[++n]+128&255):x[x.length]=E[n]&255}return x}$.JISToEUCJP=bi;function wi(E){for(var x=[],e=0,t=E&&E.length,n=0,i,r,A=[27,40,66,27,36,66,27,40,73];n<t;n++)i=E[n],i>=161&&i<=223?(e!==2&&(e=2,x[x.length]=A[6],x[x.length]=A[7],x[x.length]=A[8]),x[x.length]=i-128&255):i>=128?(e!==1&&(e=1,x[x.length]=A[3],x[x.length]=A[4],x[x.length]=A[5]),i<<=1,r=E[++n],r<159?(i<319?i-=225:i-=97,r>126?r-=32:r-=31):(i<319?i-=224:i-=96,r-=126),x[x.length]=i&255,x[x.length]=r&255):(e!==0&&(e=0,x[x.length]=A[0],x[x.length]=A[1],x[x.length]=A[2]),x[x.length]=i&255);return e!==0&&(x[x.length]=A[0],x[x.length]=A[1],x[x.length]=A[2]),x}$.SJISToJIS=wi;function yi(E){for(var x=[],e=E&&E.length,t=0,n,i;t<e;t++)n=E[t],n>=161&&n<=223?(x[x.length]=142,x[x.length]=n):n>=129?(i=E[++t],n<<=1,i<159?(n<319?n-=97:n-=225,i>126?i+=96:i+=97):(n<319?n-=96:n-=224,i+=2),x[x.length]=n&255,x[x.length]=i&255):x[x.length]=n&255;return x}$.SJISToEUCJP=yi;function Ti(E){for(var x=[],e=0,t=E&&E.length,n=0,i,r=[27,40,66,27,36,66,27,40,73,27,36,40,68];n<t;n++)i=E[n],i===142?(e!==2&&(e=2,x[x.length]=r[6],x[x.length]=r[7],x[x.length]=r[8]),x[x.length]=E[++n]-128&255):i===143?(e!==3&&(e=3,x[x.length]=r[9],x[x.length]=r[10],x[x.length]=r[11],x[x.length]=r[12]),x[x.length]=E[++n]-128&255,x[x.length]=E[++n]-128&255):i>142?(e!==1&&(e=1,x[x.length]=r[3],x[x.length]=r[4],x[x.length]=r[5]),x[x.length]=i-128&255,x[x.length]=E[++n]-128&255):(e!==0&&(e=0,x[x.length]=r[0],x[x.length]=r[1],x[x.length]=r[2]),x[x.length]=i&255);return e!==0&&(x[x.length]=r[0],x[x.length]=r[1],x[x.length]=r[2]),x}$.EUCJPToJIS=Ti;function Si(E){for(var x=[],e=E&&E.length,t=0,n,i;t<e;t++)n=E[t],n===143?(x[x.length]=b0.FALLBACK_CHARACTER,t+=2):n>142?(i=E[++t],n&1?(n>>=1,n<111?n+=49:n+=113,i>223?i-=96:i-=97):(n>>=1,n<=111?n+=48:n+=112,i-=2),x[x.length]=n&255,x[x.length]=i&255):n===142?x[x.length]=E[++t]&255:x[x.length]=n&255;return x}$.EUCJPToSJIS=Si;function $e(E){b0.init_JIS_TO_UTF8_TABLE();for(var x=[],e=0,t=E&&E.length,n,i,r,A,s,B,o;e<t;e++)n=E[e],n>=161&&n<=223?(r=n-64,A=188|r>>6&3,s=128|r&63,x[x.length]=239,x[x.length]=A&255,x[x.length]=s&255):n>=128?(i=n<<1,r=E[++e],r<159?(i<319?i-=225:i-=97,r>126?r-=32:r-=31):(i<319?i-=224:i-=96,r-=126),i&=255,B=(i<<8)+r,o=Q0.JIS_TO_UTF8_TABLE[B],o===void 0?x[x.length]=b0.FALLBACK_CHARACTER:o<65535?(x[x.length]=o>>8&255,x[x.length]=o&255):(x[x.length]=o>>16&255,x[x.length]=o>>8&255,x[x.length]=o&255)):x[x.length]=E[e]&255;return x}$.SJISToUTF8=$e;function je(E){b0.init_JIS_TO_UTF8_TABLE();for(var x=[],e=0,t=E&&E.length,n,i,r,A,s,B,o,a;e<t;e++)n=E[e],n===142?(i=E[++e]-64,r=188|i>>6&3,A=128|i&63,x[x.length]=239,x[x.length]=r&255,x[x.length]=A&255):n===143?(s=E[++e]-128,B=E[++e]-128,o=(s<<8)+B,a=Q0.JISX0212_TO_UTF8_TABLE[o],a===void 0?x[x.length]=b0.FALLBACK_CHARACTER:a<65535?(x[x.length]=a>>8&255,x[x.length]=a&255):(x[x.length]=a>>16&255,x[x.length]=a>>8&255,x[x.length]=a&255)):n>=128?(o=(n-128<<8)+(E[++e]-128),a=Q0.JIS_TO_UTF8_TABLE[o],a===void 0?x[x.length]=b0.FALLBACK_CHARACTER:a<65535?(x[x.length]=a>>8&255,x[x.length]=a&255):(x[x.length]=a>>16&255,x[x.length]=a>>8&255,x[x.length]=a&255)):x[x.length]=E[e]&255;return x}$.EUCJPToUTF8=je;function We(E){b0.init_JIS_TO_UTF8_TABLE();for(var x=[],e=0,t=0,n=E&&E.length,i,r,A,s,B;t<n;t++){for(;E[t]===27;)if(E[t+1]===36&&E[t+2]===66||E[t+1]===36&&E[t+2]===64?e=1:E[t+1]===40&&E[t+2]===73?e=2:E[t+1]===36&&E[t+2]===40&&E[t+3]===68?(e=3,t++):e=0,t+=3,E[t]===void 0)return x;e===1?(s=(E[t]<<8)+E[++t],B=Q0.JIS_TO_UTF8_TABLE[s],B===void 0?x[x.length]=b0.FALLBACK_CHARACTER:B<65535?(x[x.length]=B>>8&255,x[x.length]=B&255):(x[x.length]=B>>16&255,x[x.length]=B>>8&255,x[x.length]=B&255)):e===2?(i=E[t]+64,r=188|i>>6&3,A=128|i&63,x[x.length]=239,x[x.length]=r&255,x[x.length]=A&255):e===3?(s=(E[t]<<8)+E[++t],B=Q0.JISX0212_TO_UTF8_TABLE[s],B===void 0?x[x.length]=b0.FALLBACK_CHARACTER:B<65535?(x[x.length]=B>>8&255,x[x.length]=B&255):(x[x.length]=B>>16&255,x[x.length]=B>>8&255,x[x.length]=B&255)):x[x.length]=E[t]&255}return x}$.JISToUTF8=We;function Ve(E,x){for(var e=[],t=0,n=E&&E.length,i,r,A,s,B,o,a=x&&x.fallback;t<n;t++)i=E[t],i>=128?(i<=223?(s=[i,E[t+1]],B=(i<<8)+E[++t]):i<=239?(s=[i,E[t+1],E[t+2]],B=(i<<16)+(E[++t]<<8)+(E[++t]&255)):(s=[i,E[t+1],E[t+2],E[t+3]],B=(i<<24)+(E[++t]<<16)+(E[++t]<<8)+(E[++t]&255)),o=Q0.UTF8_TO_JIS_TABLE[B],o==null?a?B8(e,s,a):e[e.length]=b0.FALLBACK_CHARACTER:o<255?e[e.length]=o+128:(o>65536&&(o-=65536),r=o>>8,A=o&255,r&1?(r>>=1,r<47?r+=113:r-=79,A>95?A+=32:A+=31):(r>>=1,r<=47?r+=112:r-=80,A+=126),e[e.length]=r&255,e[e.length]=A&255)):e[e.length]=E[t]&255;return e}$.UTF8ToSJIS=Ve;function He(E,x){for(var e=[],t=0,n=E&&E.length,i,r,A,s,B=x&&x.fallback;t<n;t++)i=E[t],i>=128?(i<=223?(r=[i,E[t+1]],A=(i<<8)+E[++t]):i<=239?(r=[i,E[t+1],E[t+2]],A=(i<<16)+(E[++t]<<8)+(E[++t]&255)):(r=[i,E[t+1],E[t+2],E[t+3]],A=(i<<24)+(E[++t]<<16)+(E[++t]<<8)+(E[++t]&255)),s=Q0.UTF8_TO_JIS_TABLE[A],s==null?(s=Q0.UTF8_TO_JISX0212_TABLE[A],s==null?B?B8(e,r,B):e[e.length]=b0.FALLBACK_CHARACTER:(e[e.length]=143,e[e.length]=(s>>8)-128&255,e[e.length]=(s&255)-128&255)):(s>65536&&(s-=65536),s<255?(e[e.length]=142,e[e.length]=s-128&255):(e[e.length]=(s>>8)-128&255,e[e.length]=(s&255)-128&255))):e[e.length]=E[t]&255;return e}$.UTF8ToEUCJP=He;function qe(E,x){for(var e=[],t=0,n=E&&E.length,i=0,r,A,s,B,o=x&&x.fallback,a=[27,40,66,27,36,66,27,40,73,27,36,40,68];i<n;i++)r=E[i],r<128?(t!==0&&(t=0,e[e.length]=a[0],e[e.length]=a[1],e[e.length]=a[2]),e[e.length]=r&255):(r<=223?(A=[r,E[i+1]],s=(r<<8)+E[++i]):r<=239?(A=[r,E[i+1],E[i+2]],s=(r<<16)+(E[++i]<<8)+(E[++i]&255)):(A=[r,E[i+1],E[i+2],E[i+3]],s=(r<<24)+(E[++i]<<16)+(E[++i]<<8)+(E[++i]&255)),B=Q0.UTF8_TO_JIS_TABLE[s],B==null?(B=Q0.UTF8_TO_JISX0212_TABLE[s],B==null?(t!==0&&(t=0,e[e.length]=a[0],e[e.length]=a[1],e[e.length]=a[2]),o?B8(e,A,o):e[e.length]=b0.FALLBACK_CHARACTER):(t!==3&&(t=3,e[e.length]=a[9],e[e.length]=a[10],e[e.length]=a[11],e[e.length]=a[12]),e[e.length]=B>>8&255,e[e.length]=B&255)):(B>65536&&(B-=65536),B<255?(t!==2&&(t=2,e[e.length]=a[6],e[e.length]=a[7],e[e.length]=a[8]),e[e.length]=B&255):(t!==1&&(t=1,e[e.length]=a[3],e[e.length]=a[4],e[e.length]=a[5]),e[e.length]=B>>8&255,e[e.length]=B&255)));return t!==0&&(e[e.length]=a[0],e[e.length]=a[1],e[e.length]=a[2]),e}$.UTF8ToJIS=qe;function Wx(E){for(var x=[],e=0,t=E&&E.length,n,i;e<t;e++)n=E[e],n>=55296&&n<=56319&&e+1<t&&(i=E[e+1],i>=56320&&i<=57343&&(n=(n-55296)*1024+i-56320+65536,e++)),n<128?x[x.length]=n:n<2048?(x[x.length]=192|n>>6&31,x[x.length]=128|n&63):n<65536?(x[x.length]=224|n>>12&15,x[x.length]=128|n>>6&63,x[x.length]=128|n&63):n<2097152&&(x[x.length]=240|n>>18&15,x[x.length]=128|n>>12&63,x[x.length]=128|n>>6&63,x[x.length]=128|n&63);return x}$.UNICODEToUTF8=Wx;function vx(E,x){for(var e=[],t=0,n=E&&E.length,i,r,A,s,B,o,a=x&&x.ignoreSurrogatePair;t<n;)r=E[t++],i=r>>4,i>=0&&i<=7?o=r:i===12||i===13?(A=E[t++],o=(r&31)<<6|A&63):i===14?(A=E[t++],s=E[t++],o=(r&15)<<12|(A&63)<<6|s&63):i===15&&(A=E[t++],s=E[t++],B=E[t++],o=(r&7)<<18|(A&63)<<12|(s&63)<<6|B&63),o<=65535||a?e[e.length]=o:(o-=65536,e[e.length]=(o>>10)+55296,e[e.length]=o%1024+56320);return e}$.UTF8ToUNICODE=vx;function q9(E,x){var e;if(x&&x.bom){var t=x.bom;r8.isString(t)||(t="BE");var n,i;t.charAt(0).toUpperCase()==="B"?(n=[254,255],i=bE(E)):(n=[255,254],i=s8(E)),e=[],e[0]=n[0],e[1]=n[1];for(var r=0,A=i.length;r<A;r++)e[e.length]=i[r]}else e=bE(E);return e}$.UNICODEToUTF16=q9;function bE(E){for(var x=[],e=0,t=E&&E.length,n;e<t;)n=E[e++],n<=255?(x[x.length]=0,x[x.length]=n):n<=65535&&(x[x.length]=n>>8&255,x[x.length]=n&255);return x}$.UNICODEToUTF16BE=bE;function s8(E){for(var x=[],e=0,t=E&&E.length,n;e<t;)n=E[e++],n<=255?(x[x.length]=n,x[x.length]=0):n<=65535&&(x[x.length]=n&255,x[x.length]=n>>8&255);return x}$.UNICODEToUTF16LE=s8;function K9(E){var x=[],e=0,t=E&&E.length,n,i;for(t>=2&&(E[0]===254&&E[1]===255||E[0]===255&&E[1]===254)&&(e=2);e<t;)n=E[e++],i=E[e++],n===0?x[x.length]=i:x[x.length]=(n&255)<<8|i&255;return x}$.UTF16BEToUNICODE=K9;function Y9(E){var x=[],e=0,t=E&&E.length,n,i;for(t>=2&&(E[0]===254&&E[1]===255||E[0]===255&&E[1]===254)&&(e=2);e<t;)n=E[e++],i=E[e++],i===0?x[x.length]=n:x[x.length]=(i&255)<<8|n&255;return x}$.UTF16LEToUNICODE=Y9;function J9(E){for(var x=[],e=0,t=E&&E.length,n=!1,i=!0,r,A;e<t;){if(r=E[e++],A=E[e++],i&&e===2){i=!1,r===254&&A===255?n=!1:r===255&&A===254?n=!0:(n=A8.isUTF16LE(E),e=0);continue}n?A===0?x[x.length]=r:x[x.length]=(A&255)<<8|r&255:r===0?x[x.length]=A:x[x.length]=(r&255)<<8|A&255}return x}$.UTF16ToUNICODE=J9;function ki(E){for(var x=[],e=0,t=E&&E.length,n=!1,i=!0,r,A;e<t;){if(r=E[e++],A=E[e++],i&&e===2){i=!1,r===254&&A===255?n=!1:r===255&&A===254?n=!0:(n=A8.isUTF16LE(E),e=0);continue}n?(x[x.length]=A,x[x.length]=r):(x[x.length]=r,x[x.length]=A)}return x}$.UTF16ToUTF16BE=ki;function Oi(E,x){var e=!1,t;if(x&&x.bom){var n=x.bom;r8.isString(n)||(n="BE"),n.charAt(0).toUpperCase()==="B"?t=[254,255]:(t=[255,254],e=!0)}var i=[],r=E&&E.length,A=0;r>=2&&(E[0]===254&&E[1]===255||E[0]===255&&E[1]===254)&&(A=2),t&&(i[0]=t[0],i[1]=t[1]);for(var s,B;A<r;)s=E[A++],B=E[A++],e?(i[i.length]=B,i[i.length]=s):(i[i.length]=s,i[i.length]=B);return i}$.UTF16BEToUTF16=Oi;function Ii(E){for(var x=[],e=0,t=E&&E.length,n=!1,i=!0,r,A;e<t;){if(r=E[e++],A=E[e++],i&&e===2){i=!1,r===254&&A===255?n=!1:r===255&&A===254?n=!0:(n=A8.isUTF16LE(E),e=0);continue}n?(x[x.length]=r,x[x.length]=A):(x[x.length]=A,x[x.length]=r)}return x}$.UTF16ToUTF16LE=Ii;function Li(E,x){var e=!1,t;if(x&&x.bom){var n=x.bom;r8.isString(n)||(n="BE"),n.charAt(0).toUpperCase()==="B"?t=[254,255]:(t=[255,254],e=!0)}var i=[],r=E&&E.length,A=0;r>=2&&(E[0]===254&&E[1]===255||E[0]===255&&E[1]===254)&&(A=2),t&&(i[0]=t[0],i[1]=t[1]);for(var s,B;A<r;)s=E[A++],B=E[A++],e?(i[i.length]=s,i[i.length]=B):(i[i.length]=B,i[i.length]=s);return i}$.UTF16LEToUTF16=Li;function G9(E){var x=[],e=0,t=E&&E.length,n,i;for(t>=2&&(E[0]===254&&E[1]===255||E[0]===255&&E[1]===254)&&(e=2);e<t;)n=E[e++],i=E[e++],x[x.length]=i,x[x.length]=n;return x}$.UTF16BEToUTF16LE=G9;function Ni(E){return G9(E)}$.UTF16LEToUTF16BE=Ni;function Ri(E,x){return qe(Wx(E),x)}$.UNICODEToJIS=Ri;function Mi(E){return vx(We(E))}$.JISToUNICODE=Mi;function Ui(E,x){return He(Wx(E),x)}$.UNICODEToEUCJP=Ui;function Pi(E){return vx(je(E))}$.EUCJPToUNICODE=Pi;function $i(E,x){return Ve(Wx(E),x)}$.UNICODEToSJIS=$i;function ji(E){return vx($e(E))}$.SJISToUNICODE=ji;function ME(E,x){return q9(vx(E),x)}$.UTF8ToUTF16=ME;function UE(E){return Wx(J9(E))}$.UTF16ToUTF8=UE;function PE(E){return bE(vx(E))}$.UTF8ToUTF16BE=PE;function $E(E){return Wx(K9(E))}$.UTF16BEToUTF8=$E;function jE(E){return s8(vx(E))}$.UTF8ToUTF16LE=jE;function WE(E){return Wx(Y9(E))}$.UTF16LEToUTF8=WE;function Wi(E,x){return ME(We(E),x)}$.JISToUTF16=Wi;function Vi(E,x){return qe(UE(E),x)}$.UTF16ToJIS=Vi;function Hi(E){return PE(We(E))}$.JISToUTF16BE=Hi;function qi(E,x){return qe($E(E),x)}$.UTF16BEToJIS=qi;function Ki(E){return jE(We(E))}$.JISToUTF16LE=Ki;function Yi(E,x){return qe(WE(E),x)}$.UTF16LEToJIS=Yi;function Ji(E,x){return ME(je(E),x)}$.EUCJPToUTF16=Ji;function Gi(E,x){return He(UE(E),x)}$.UTF16ToEUCJP=Gi;function Zi(E){return PE(je(E))}$.EUCJPToUTF16BE=Zi;function Xi(E,x){return He($E(E),x)}$.UTF16BEToEUCJP=Xi;function zi(E){return jE(je(E))}$.EUCJPToUTF16LE=zi;function Qi(E,x){return He(WE(E),x)}$.UTF16LEToEUCJP=Qi;function xr(E,x){return ME($e(E),x)}$.SJISToUTF16=xr;function er(E,x){return Ve(UE(E),x)}$.UTF16ToSJIS=er;function Er(E){return PE($e(E))}$.SJISToUTF16BE=Er;function tr(E,x){return Ve($E(E),x)}$.UTF16BEToSJIS=tr;function nr(E){return jE($e(E))}$.SJISToUTF16LE=nr;function ir(E,x){return Ve(WE(E),x)}$.UTF16LEToSJIS=ir;function B8(E,x,e){switch(e){case"html-entity":case"html-entity-hex":var t=vx(x,{ignoreSurrogatePair:!0})[0];if(t){E[E.length]=38,E[E.length]=35;var n=e.slice(-3)==="hex"?16:10;n===16&&(E[E.length]=120);for(var i=t.toString(n),r=0,A=i.length;r<A;r++)E[E.length]=i.charCodeAt(r);E[E.length]=59}}}var Ke={};Ke.HANKANA_TABLE={12289:65380,12290:65377,12300:65378,12301:65379,12443:65438,12444:65439,12449:65383,12450:65393,12451:65384,12452:65394,12453:65385,12454:65395,12455:65386,12456:65396,12457:65387,12458:65397,12459:65398,12461:65399,12463:65400,12465:65401,12467:65402,12469:65403,12471:65404,12473:65405,12475:65406,12477:65407,12479:65408,12481:65409,12483:65391,12484:65410,12486:65411,12488:65412,12490:65413,12491:65414,12492:65415,12493:65416,12494:65417,12495:65418,12498:65419,12501:65420,12504:65421,12507:65422,12510:65423,12511:65424,12512:65425,12513:65426,12514:65427,12515:65388,12516:65428,12517:65389,12518:65429,12519:65390,12520:65430,12521:65431,12522:65432,12523:65433,12524:65434,12525:65435,12527:65436,12530:65382,12531:65437,12539:65381,12540:65392};Ke.HANKANA_SONANTS={12532:65395,12535:65436,12538:65382};Ke.HANKANA_MARKS=[65438,65439];Ke.ZENKANA_TABLE=[12290,12300,12301,12289,12539,12530,12449,12451,12453,12455,12457,12515,12517,12519,12483,12540,12450,12452,12454,12456,12458,12459,12461,12463,12465,12467,12469,12471,12473,12475,12477,12479,12481,12484,12486,12488,12490,12491,12492,12493,12494,12495,12498,12501,12504,12507,12510,12511,12512,12513,12514,12516,12518,12520,12521,12522,12523,12524,12525,12527,12531,12443,12444];const rr="encoding-japanese",Ar="2.0.0",sr="Convert or detect character encoding in JavaScript",Br="src/index.js",or=["encoding.js","encoding.min.js","encoding.min.js.map","src/*"],ar={build:"npm run compile && npm run minify",compile:"browserify src/index.js -o encoding.js -s Encoding -p [ bannerify --file src/banner.js ] --no-bundle-external --bare",minify:`uglifyjs encoding.js -o encoding.min.js --source-map "url='encoding.min.js.map'" --comments -c -m -b ascii_only=true,beautify=false`,test:"./node_modules/.bin/eslint . && npm run build && mocha tests/test",watch:"watchify src/index.js -o encoding.js -s Encoding -p [ bannerify --file src/banner.js ] --no-bundle-external --bare --poll=300 -v"},lr={node:">=8.10.0"},cr={type:"git",url:"https://github.com/polygonplanet/encoding.js.git"},fr="polygonplanet <polygon.planet.aqua@gmail.com>",ur="MIT",dr={url:"https://github.com/polygonplanet/encoding.js/issues"},Cr="https://github.com/polygonplanet/encoding.js",Fr=["base64","charset","convert","detect","encoding","euc-jp","eucjp","iconv","iso-2022-jp","japanese","jis","shift_jis","sjis","unicode","urldecode","urlencode","utf-16","utf-32","utf-8"],hr={},Dr={bannerify:"^1.0.1",browserify:"^17.0.0",eslint:"^8.12.0",mocha:"^9.2.2","package-json-versionify":"^1.0.4","power-assert":"^1.6.1","uglify-js":"^3.15.3",uglifyify:"^5.0.2",watchify:"^4.0.0"},pr={transform:["package-json-versionify"]},mr={name:rr,version:Ar,description:sr,main:Br,files:or,scripts:ar,engines:lr,repository:cr,author:fr,license:ur,bugs:dr,homepage:Cr,keywords:Fr,dependencies:hr,devDependencies:Dr,browserify:pr};var gr=i8(),H=n8(),K8=S0,Y8=$,Yx=Ke,_r=mr.version,J8=Object.prototype.hasOwnProperty,hE={version:_r,orders:gr.EncodingOrders,detect:function(E,x){if(E==null||E.length===0)return!1;H.isObject(x)&&!H.isArray(x)&&(x=x.encoding),H.isString(E)&&(E=H.stringToBuffer(E)),x==null?x=hE.orders:H.isString(x)&&(x=x.toUpperCase(),x==="AUTO"?x=hE.orders:~x.indexOf(",")?x=x.split(/\s*,\s*/):x=[x]);for(var e=x.length,t,n,i,r=0;r<e;r++)if(t=x[r],n=H.canonicalizeEncodingName(t),!!n){if(i="is"+n,!J8.call(K8,i))throw new Error("Undefined encoding: "+t);if(K8[i](E))return n}return!1},convert:function(E,x,e){var t,n,i;H.isObject(x)?(i=x,e=i.from,x=i.to,i.type&&(n=i.type)):i={},H.isString(E)?(n=n||"string",E=H.stringToBuffer(E)):(E==null||E.length===0)&&(E=[]);var r;e!=null&&H.isString(e)&&e.toUpperCase()!=="AUTO"&&!~e.indexOf(",")?r=H.canonicalizeEncodingName(e):r=hE.detect(E);var A=H.canonicalizeEncodingName(x),s=r+"To"+A;switch(J8.call(Y8,s)?t=Y8[s](E,i):t=E,(""+n).toLowerCase()){case"string":return H.codeToString_fast(t);case"arraybuffer":return H.codeToBuffer(t);default:return H.bufferToCode(t)}},urlEncode:function(E){H.isString(E)&&(E=H.stringToBuffer(E));for(var x=H.stringToCode("0123456789ABCDEF"),e=[],t=0,n=E&&E.length,i;t<n;t++){if(i=E[t],i>255)return encodeURIComponent(H.codeToString_fast(E));i>=97&&i<=122||i>=65&&i<=90||i>=48&&i<=57||i===33||i>=39&&i<=42||i===45||i===46||i===95||i===126?e[e.length]=i:(e[e.length]=37,i<16?(e[e.length]=48,e[e.length]=x[i]):(e[e.length]=x[i>>4&15],e[e.length]=x[i&15]))}return H.codeToString_fast(e)},urlDecode:function(E){for(var x=[],e=0,t=E&&E.length,n;e<t;)n=E.charCodeAt(e++),n===37?x[x.length]=parseInt(E.charAt(e++)+E.charAt(e++),16):x[x.length]=n;return x},base64Encode:function(E){return H.isString(E)&&(E=H.stringToBuffer(E)),H.base64encode(E)},base64Decode:function(E){return H.base64decode(E)},codeToString:H.codeToString_fast,stringToCode:H.stringToCode,toHankakuCase:function(E){var x=!1;H.isString(E)&&(x=!0,E=H.stringToBuffer(E));for(var e=[],t=E&&E.length,n=0,i;n<t;)i=E[n++],i>=65281&&i<=65374&&(i-=65248),e[e.length]=i;return x?H.codeToString_fast(e):e},toZenkakuCase:function(E){var x=!1;H.isString(E)&&(x=!0,E=H.stringToBuffer(E));for(var e=[],t=E&&E.length,n=0,i;n<t;)i=E[n++],i>=33&&i<=126&&(i+=65248),e[e.length]=i;return x?H.codeToString_fast(e):e},toHiraganaCase:function(E){var x=!1;H.isString(E)&&(x=!0,E=H.stringToBuffer(E));for(var e=[],t=E&&E.length,n=0,i;n<t;)i=E[n++],i>=12449&&i<=12534?i-=96:i===12535?(e[e.length]=12431,i=12443):i===12538&&(e[e.length]=12434,i=12443),e[e.length]=i;return x?H.codeToString_fast(e):e},toKatakanaCase:function(E){var x=!1;H.isString(E)&&(x=!0,E=H.stringToBuffer(E));for(var e=[],t=E&&E.length,n=0,i;n<t;)i=E[n++],i>=12353&&i<=12438&&((i===12431||i===12434)&&n<t&&E[n]===12443?(i=i===12431?12535:12538,n++):i+=96),e[e.length]=i;return x?H.codeToString_fast(e):e},toHankanaCase:function(E){var x=!1;H.isString(E)&&(x=!0,E=H.stringToBuffer(E));for(var e=[],t=E&&E.length,n=0,i,r,A;n<t;){if(i=E[n++],i>=12289&&i<=12540&&(A=Yx.HANKANA_TABLE[i],A!==void 0)){e[e.length]=A;continue}i===12532||i===12535||i===12538?(e[e.length]=Yx.HANKANA_SONANTS[i],e[e.length]=65438):i>=12459&&i<=12489?(e[e.length]=Yx.HANKANA_TABLE[i-1],e[e.length]=65438):i>=12495&&i<=12509?(r=i%3,e[e.length]=Yx.HANKANA_TABLE[i-r],e[e.length]=Yx.HANKANA_MARKS[r-1]):e[e.length]=i}return x?H.codeToString_fast(e):e},toZenkanaCase:function(E){var x=!1;H.isString(E)&&(x=!0,E=H.stringToBuffer(E));var e=[],t=E&&E.length,n=0,i,r,A;for(n=0;n<t;n++)i=E[n],i>65376&&i<65440&&(r=Yx.ZENKANA_TABLE[i-65377],n+1<t&&(A=E[n+1],A===65438&&i===65395?(r=12532,n++):A===65438&&i===65436?(r=12535,n++):A===65438&&i===65382?(r=12538,n++):A===65438&&(i>65397&&i<65413||i>65417&&i<65423)?(r++,n++):A===65439&&i>65417&&i<65423&&(r+=2,n++)),i=r),e[e.length]=i;return x?H.codeToString_fast(e):e},toHankakuSpace:function(E){if(H.isString(E))return E.replace(/\u3000/g," ");for(var x=[],e=E&&E.length,t=0,n;t<e;)n=E[t++],n===12288&&(n=32),x[x.length]=n;return x},toZenkakuSpace:function(E){if(H.isString(E))return E.replace(/\u0020/g,"　");for(var x=[],e=E&&E.length,t=0,n;t<e;)n=E[t++],n===32&&(n=12288),x[x.length]=n;return x}},Z9=hE;/**
 * @classdesc MakiMabi Sequence File Parser
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2019,2023 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class de{static mmsInstTable=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,65,66,67,68,69,70,71,72,73,74,75,76,18];constructor(x,e={}){this.encoder=new TextEncoder("UTF-8"),this.source=Z9.convert(x,{to:"UNICODE",from:"AUTO",type:"string"}),this.input=Ai.parse(this.source)||{},this.tracks=[],this.plainTracks=[],this.numberOfTracks=1,this.timeDivision=e.timeDivision?parseInt(e.timeDivision):96}parse(){this.parseHeader(),this.parseTracks(),this.toPlainTrack()}parseHeader(){const x=this.input.infomation||{};this.title=x.title,this.author=x.auther,this.timeDivision=x.timeBase?parseInt(x.timeBase):96;const e=[];e.push(new Ae("SystemExclusive",0,0,[126,127,9,1])),e.push(new J("SequenceTrackName",0,0,[this.encoder.encode(this.title)])),e.push(new J("CopyrightNotice",0,0,[this.encoder.encode(this.author)])),e.push(new J("TimeSignature",0,0,[parseInt(x.rythmNum)||4,parseInt(x.rythmBase)||4,0,0])),e.push(new J("EndOfTrack",0,this.timeDivision)),this.tracks.push(e),delete this.input.infomation,delete this.input["mms-file"]}parseTracks(){let x=[];const e=[];let t=0;for(const n in this.input){if(!Object.prototype.hasOwnProperty.call(this.input,n))continue;const i=this.input[n],r=[i.ch0_mml,i.ch1_mml,i.ch2_mml],A=parseInt(i.panpot)+64;x.push(new J("InsturumentName",0,48,[this.encoder.encode(i.name)])),x.push(new l0("ProgramChange",0,96,t,de.mmsInstTable[i.instrument])),x.push(new l0("ControlChange",0,154,t,10,A)),r.forEach(s=>{const B=new px({timeDivision:this.timeDivision,channel:t,timeOffset:386,mml:s});x=x.concat(B.events),e.push(B.endTime)}),t++,x.concat(new J("EndOfTrack",0,Math.max(e))),this.tracks.push(x)}this.numberOfTracks=this.tracks.length}toPlainTrack(){const x=Object.fromEntries(Object.entries(l0.table).map(([t,n])=>[n,t])),e=Object.fromEntries(Object.entries(J.table).map(([t,n])=>[n,t]));for(let t=0;t<this.tracks.length;t++){let n=[],i=[];this.tracks[t].forEach(r=>{let A;r instanceof l0?r.subtype==="NoteOn"?A=[(r.parameter2===0?128:144)|r.channel,r.parameter1,r.parameter2]:A=[x[r.subtype]|r.channel,r.parameter1,r.parameter2]:r instanceof J?A=[255,e[r.subtype]].concat(r.data):r instanceof Ae&&(A=[240,5].concat(r.data)),i=i.concat(new Uint8Array(A))}),n=n.concat(i),this.plainTracks[t]=n}}}/**
 * @classdesc MabiIcco MML File Parser
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2019,2023 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class o8 extends de{static multipleKeys=["mml-track","name","program","songProgram","panpot"];constructor(x,e={}){super(x,e),this.input=this.source.split(/\r\n|\r|\n/)||[],this.tracks=[],this.plainTracks=[],this.numberOfTracks=1,this.timeDivision=e.timeDivision?parseInt(e.timeDivision):96}parse(){this.parseHeader(),this.parseTracks(),this.toPlainTrack()}parseHeader(){const x={};let e=-1;x.track=[];for(let r=0;r<this.input.length;r++){const A=this.input[r].trim();if(r===0&&A!=="[mml-score]")throw new Error("Not MabiIcco File.");const[s,B]=A.split("=");o8.multipleKeys.includes(s)?s==="mml-track"?(e++,x.track[e]={},x.track[e].mml=B):x.track[e][s]=s==="name"?B:B|0:x[s]=B}this.title=x.title,this.author=x.author;const t=x.tempo!==""?x.tempo.split("T"):[0,120];this.timeDivision=96,this.tempo=parseInt(t[1])||120;const n=x.time.split("/"),i=[];i.push(new Ae("SystemExclusive",0,0,[126,127,9,1])),i.push(new J("SequenceTrackName",0,0,[this.encoder.encode(this.title)])),i.push(new J("CopyrightNotice",0,0,[this.encoder.encode(this.author)])),i.push(new J("TimeSignature",0,0,[parseInt(n[0])||4,parseInt(n[1])||4,0,0])),i.push(new J("SetTempo",0,0,[Math.floor(6e7/this.tempo)])),i.push(new J("EndOfTrack",0,0)),this.tracks.push(i),this.input=x.track}parseTracks(){let x=[];const e=[];for(let t=0;t<this.input.length;t++){const n=this.input[t],i=n.mml.match(/^(?:MML@)(.*)/gm);if(!i)continue;const r=i[0].split(",");x.push(new J("InsturumentName",0,48,[this.encoder.encode(n.name)])),x.push(new l0("ProgramChange",0,96,t,n.program)),n.songProgram!==-1&&x.push(new l0("ProgramChange",0,112,15,n.songProgram)),x.push(new l0("ControlChange",0,154,t,10,n.panpot));for(let A=0;A<n.mml.length;A++){let s=t;if(A===3&&n.songProgram!==-1&&(s=15),r[A]===void 0)continue;const B=new px({timeDivision:this.timeDivision,channel:s,timeOffset:386,mml:r[A],igonoreTempo:s===1});x=x.concat(B.events),e.push(B.endTime)}x.concat(new J("EndOfTrack",0,Math.max(e))),this.tracks.push(x)}this.numberOfTracks=this.tracks.length}}/**
 * @classdesc MapleStory2 Mml Parser
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2019,2023 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class vr extends de{constructor(x,e={}){super(x,e);const n=new DOMParser().parseFromString(String.fromCharCode.apply("",new Uint16Array(x)),"text/xml");this.input=n.querySelectorAll("ms2 > *"),this.tracks=[],this.plainTracks=[],this.numberOfTracks=1,this.timeDivision=e.timeDivision||96}parse(){this.parseTracks(),this.toPlainTrack()}parseTracks(){let x=[];const e=[];this.input.forEach(t=>{const n=new px({timeDivision:this.timeDivision,channel:0,timeOffset:0,mml:t.textContent.trim(),ignoreTempo:!1});x=x.concat(n.events),e.push(n.endTime)}),x.concat(new J("EndOfTrack",0,Math.max(e))),this.tracks.push(x)}}/**
 * @classdesc Three Macro Language Editor (3MLE) mml file Parser
 *
 * @author    Logue <logue@hotmail.co.jp>
 * @copyright 2019,2023 Masashi Yoshikawa <https://logue.dev/> All rights reserved.
 * @license   MIT
 */class br extends de{constructor(x,e={}){super(x,e)}parse(){this.parseHeader(),this.parseTracks(),this.toPlainTrack()}parseHeader(){const x=this.input.Settings;this.title=x.Title,this.author=x.Source,this.timeDivision=x.TimeBase?parseInt(x.TimeBase):32;const e=[];e.push(new Ae("SystemExclusive",0,0,[126,127,9,1])),e.push(new J("SequenceTrackName",0,0,[this.encoder.encode(this.title)])),e.push(new J("CopyrightNotice",0,0,[this.encoder.encode(this.author)])),e.push(new J("TextEvent",0,0,[this.encoder.encode(x.Memo)])),e.push(new J("TimeSignature",0,0,[x.TimeSignatureNN?parseInt(x.TimeSignatureNN):4,x.TimeSignatureDD?parseInt(x.TimeSignatureDD):4,0,0])),e.push(new J("EndOfTrack",0,0)),this.tracks.push(e),delete this.input["3MLE EXTENSION"],delete this.input.Settings}parseTracks(){const x=this.input,e=[],t=[],n=[];for(const r in this.input)Object.prototype.hasOwnProperty.call(this.input,r)&&(r.match(/^Channel(\d+)$/i)&&(t[(RegExp.$1|0)-1]=Object.keys(x[r]).join("").replace(/\/\*([^*]|\*[^/])*\*\//g,"")),r.match(/^ChannelProperty(\d+)$/i)&&(n[(RegExp.$1|0)-1]={name:x[r].Name,instrument:parseInt(x[r].Patch),panpot:parseInt(x[r].Pan)}));const i=[];for(const r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]!==void 0?i[r]={mml:t[r],name:n[r].name||"",instrument:n[r].instrument||0,panpot:n[r].panpot||64}:i[r]={mml:t[r],name:"",instrument:0,panpot:64});for(const r in i){if(!Object.prototype.hasOwnProperty.call(i,r))continue;const A=r|0;let s=[];if(i[r].mml==="")return;s.push(new J("InsturumentName",0,48,[this.encoder.encode(i[r].name)])),s.push(new l0("ProgramChange",0,96,A,i[r].instrument)),s.push(new l0("ControlChange",0,154,A,10,i[r].panpot));const B=new px({timeDivision:this.timeDivision,channel:A,timeOffset:386,mml:i[r].mml});s=s.concat(B.events),e.push(B.endTime),s.concat(new J("EndOfTrack",0,Math.max(e))),this.tracks.push(s)}this.numberOfTracks=this.tracks.length}}/**
 * @classdesc Mld Parser Class
 * @author    imaya
 * @license   MIT
 */class wr{constructor(x,e={}){this.input=x,this.ip=e.index||0,this.timeDivision=e.timeDivision||48,this.header={},this.dataInformation={},this.tracks=[]}parse(){this.parseHeader(),this.parseDataInformation(),this.parseTracks()}parseHeader(){const x=this.input;let e=this.ip;const t=this.header={},n=String.fromCharCode(x[e++],x[e++],x[e++],x[e++]);if(n!=="melo")throw new Error("invalid MFi signature:"+n);t.fileLength=(x[e++]<<24|x[e++]<<16|x[e++]<<8|x[e++])>>>0,t.trackOffset=(x[e++]<<16|x[e++])+e,t.dataMajorType=x[e++],t.dataMinorType=x[e++],t.numberOfTracks=x[e++],this.ip=e}parseDataInformation(){const x=this.input;let e=this.ip;const t=this.dataInformation={copy:null,date:null,exst:null,note:null,prot:null,sorc:null,titl:null,trac:null,vers:null};let n,i;for(;e<this.header.trackOffset;)switch(n=String.fromCharCode(x[e++],x[e++],x[e++],x[e++]),i=x[e++]<<8|x[e++],n){case"titl":case"copy":case"vers":case"date":case"prot":t[n]=String.fromCharCode.apply(null,x.subarray(e,e+=i));break;case"sorc":t[n]=x[e++];break;case"note":t[n]=x[e++]<<8|x[e++];break;case"exst":break;default:t[n]=x.subarray(e,e+=i);break}this.ip=e}parseTracks(){const x=this.input;let e=this.ip,t,n,i,r,A,s;const B=this.tracks=[];let o,a,f;const F=()=>{const c=x[e++]<<8|x[e++],u=e+c,C=[];let d;if(x[e++]!==1)throw new Error("invalid EditInstrument const value:"+x[e-1]);for(;e<u;)d={},d.part=x[e++]>>4&3,d.modulator={ML:x[e]>>5,VIV:x[e]>>4&1,EG:x[e]>>3&1,SUS:x[e]>>2&1,RR:(x[e++]&3)<<2|x[e]>>6,DR:x[e]>>4&15,AR:(x[e++]&3)<<2|x[e]>>6,SL:x[e]>>4&15,TL:(x[e++]&3)<<4|x[e]>>4,WF:x[e]>>3&1,FB:x[e++]&7},d.carrier={ML:x[e]>>5,VIV:x[e]>>4&1,EG:x[e]>>3&1,SUS:x[e]>>2&1,RR:(x[e++]&3)<<2|x[e]>>6,DR:x[e]>>4&15,AR:(x[e++]&3)<<2|x[e]>>6,SL:x[e]>>4&15,TL:(x[e++]&3)<<4|x[e]>>4,WF:x[e]>>3&1,FB:x[e++]&7},d.octaveSelect=x[e++]&3,C.push(d);return C},h=()=>{if(x[e++]!==1)throw new Error("invalid Vibrato const value:"+x[e-1]);return{part:x[e++]>>5&3,switch:x[e++]>>6}},l=()=>{const c=x[e++]<<8|x[e++],u=e+c;if(x[e++]!==17)throw new Error("invalid DeviceSpecific const value:"+x[e-1]);return{data:x.subarray(e,e+=u-e)}};for(a=0,f=this.header.numberOfTracks;a<f;++a){if(t=String.fromCharCode(x[e++],x[e++],x[e++],x[e++]),t!=="trac")throw new Error("invalid track signature:"+t);for(n=x[e++]<<24|x[e++]<<16|x[e++]<<8|x[e++],i=e+n,o=B[a]=[];e<i;){if(s={key:null,length:null,octaveShift:null,subType:null,type:null,value:{},velocity:null,voice:null},s.deltaTime=x[e++],r=x[e++],r!==255)s.type="note",s.subType="Note",s.voice=r>>6,s.key=r&63,this.dataInformation.note===1&&(A=x[e++],s.velocity=A>>2,s.octaveShift=A&3);else switch(s.type="meta",r=x[e++],r>>4){case 11:switch(r&15){case 0:s.subType="MasterVolume",s.value=x[e++];break;case 10:s.subType="DrumScale",s.value={channel:x[e]>>3&7,drum:x[e++]&1};break;default:throw new Error("unknown message type:"+r.toString(16))}break;case 12:s.subType="SetTempo",s.value={timeBase:(r&7)===7?NaN:Math.pow(2,r&7)*(r&8?15:6),tempo:x[e++]};break;case 13:switch(r&15){case 0:s.subType="Point",s.value=x[e++];break;case 13:s.subType="Loop",s.value={id:x[e]>>6,count:x[e]>>2&15,point:x[e++]&3};break;case 14:s.subType="Nop",s.value=x[e++];break;case 15:s.subType="EndOfTrack",s.value=x[e++];break;default:throw new Error("unkwnon message type:"+r.toString(16))}break;case 14:switch(r&15){case 0:s.subType="InstrumentLowPart",s.value={part:x[e]>>6,instrument:x[e++]&63};break;case 1:s.subType="InstrumentHighPart",s.value={part:x[e]>>6,instrument:x[e++]&1};break;case 2:s.subType="Volume",s.value={part:x[e]>>6,volume:x[e++]&63};break;case 3:s.subType="Valance",s.value={part:x[e]>>6,valance:x[e++]&63};break;case 4:s.subType="PitchBend",s.value={part:x[e]>>6,value:x[e++]&63};break;case 5:s.subType="ChannelAssign",s.value={part:x[e]>>6,channel:x[e++]&63};break;case 6:s.subType="VolumeChange",s.value={part:x[e]>>6,volume:(x[e++]&63)<<26>>26};break;case 7:s.subType="PitchBendRange",s.value={part:x[e]>>6,value:x[e++]&63};break;case 9:s.subType="MasterCoarseTuning",s.value={part:x[e]>>6,value:x[e++]&63};break;case 10:s.subType="Modulation",s.value={part:x[e]>>6,depth:x[e++]&63};break;default:throw new Error("unkwnon message type:"+r.toString(16))}break;case 15:switch(r&15){case 0:s.subType="EditInstrument",s.value=F();break;case 1:s.subType="Vibrato",s.value=h();break;case 15:s.subType="DeviceSpecific",s.value=l();break;default:throw new Error("unkwnon message type:"+r.toString(16))}break;default:throw new Error("unkwnon message type:"+r.toString(16))}o.push(s)}e=i}this.ip=e}convertToMidiTracks(){const x={timeDivision:this.timeDivision,trac:[],tracks:[],plainTracks:[]},e=x.tracks,t=x.plainTracks,n=this.tracks;let i,r,A,s,B,o,a,f,F,h,l,c,u;const C=[];let d;for(h=0;h<16;++h)t[h]=[],C[h]=0;for(h=0,l=n.length;h<l;++h){for(i=n[h],s=[],B=o=c=0,u=i.length;c<u;++c)switch(r=i[c],B+=r.deltaTime,r.id=o,r.time=B,r.subType){case"Nop":break;case"Note":s[o++]=r,s[o]={id:o,type:"internal",subType:"NoteOff",time:B+r.length,key:r.key,voice:r.voice,velocity:r.velocity,octaveShift:r.octaveShift},o++;break;case"InstrumentHighPart":if(A=r,r=i[++c],r.subType!=="InstrumentLowPart")throw new Error("broken instrument");s[o]={id:o,type:"internal",subType:"ProgramChange",time:B,part:r.value.part,instrument:A.value.instrument<<6|r.value.instrument},o++;break;default:s[o++]=r;break}for(s.sort((m,g)=>m.time>g.time?1:m.time<g.time?-1:m.id>g.id?1:m.id<g.id?-1:0),e[h]=[],B=c=0,u=s.length;c<u;++c){switch(r=s[c],B=r.time,r.subType){case"Note":a=this.applyOctaveShift(r.key+45,r.octaveShift),d=h*4+r.voice,d===9&&(a-=10),t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(144|d,a,r.velocity*2));break;case"NoteOff":a=this.applyOctaveShift(r.key+45,r.octaveShift),d=h*4+r.voice,d===9&&(a-=10),t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(128|d,a,r.velocity*2));break;case"ProgramChange":d=h*4+r.part,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(192|d,r.instrument));break;case"SetTempo":f=288e7/(r.value.tempo*r.value.timeBase),d=0,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(255,81,3,f>>16&255,f>>8&255,f&255));break;case"Loop":f=r.value.count,F="LOOP_"+(r.value.point===0?"START":"END")+"=ID:"+r.value.id+",COUNT:"+(f===0?-1:f),d=0,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat([255,6,F.length],F.split("").map(m=>m.charCodeAt(0))));break;case"MasterVolume":f=r.value,d=0,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(240,7,127,127,4,1,f,f,247));break;case"Modulation":d=h*4+r.value.part,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(176|d,1,r.value.depth*2));break;case"Volume":d=h*4+r.value.part,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(176|d,7,r.value.volume*2));break;case"Valance":d=h*4+r.value.part,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(176|d,10,(r.value.valance-32)*2+64));break;case"PitchBend":d=h*4+r.value.part,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(224|d,r.value.value*2,r.value.value*2));break;case"PitchBendRange":d=h*4+r.value.part,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(176|d,100,0),[0,176|d,101,0],[0,176|d,6,r.value.value*2]);break;case"MasterCoarseTuning":d=h*4+r.value.part,t[d].push(this.deltaTimeToByteArray(B-C[d]).concat(176|d,100,0),[0,176|d,101,2],[0,176|d,6,r.value.value*2]);break;default:continue}C[d]=r.time}}return this.toSMF(t)}applyOctaveShift(x,e){const t=[0,12,-24,-12];if(t[e]!==void 0)return x+t[e];throw new Error("invalid OctaveShift value:"+e)}toSMF(x){let t,n,i=[77,84,104,100,0,0,0,6,0,1,0,16,0,48],r,A,s,B;function o(a){let f;const F=a.length,h=new Array(F);for(f=0;f<F;++f)h[f]=a.charCodeAt(f);return h}if(this.dataInformation.copy!==void 0){let a=o(this.dataInformation.copy);A=a.length,a=[0,255,2].concat(this.deltaTimeToByteArray(A),a),x[0].unshift(a)}for(r=0,A=x.length;r<A;++r){const a=x[r];for(n=[],s=0,B=a.length;s<B;++s)Array.prototype.push.apply(n,a[s]);B=n.length,t=[77,84,114,107,B>>24&255,B>>16&255,B>>8&255,B&255],i=i.concat(t,n)}return new Uint8Array(i)}deltaTimeToByteArray(x){const e=[];for(;x>=128;)e.unshift(x&127|(e.length===0?0:128)),x>>>=7;return e.unshift(x|(e.length===0?0:128)),e}}/**
 * @classdesc Riff Parser class
 * @author    imaya
 * @license   MIT
 */class yr{constructor(x,e={}){this.input=x,this.ip=e.index||0,this.length=e.length||x.length-this.ip,this.chunkList=[],this.offset=this.ip,this.padding=e.padding!==void 0?e.padding:!0,this.bigEndian=e.bigEndian!==void 0?e.bigEndian:!1}parse(){const x=this.length+this.offset;for(this.chunkList=[];this.ip<x;)this.parseChunk()}parseChunk(){const x=this.input;let e=this.ip,t;this.chunkList.push(new Tr(String.fromCharCode(x[e++],x[e++],x[e++],x[e++]),t=this.bigEndian?(x[e++]<<24|x[e++]<<16|x[e++]<<8|x[e++])>>>0:(x[e++]|x[e++]<<8|x[e++]<<16|x[e++]<<24)>>>0,e)),e+=t,this.padding&&(e-this.offset&1)===1&&e++,this.ip=e}getChunk(x){const e=this.chunkList[x];return e!==void 0?e:null}getNumberOfChunks(){return this.chunkList.length}}class Tr{constructor(x,e,t){this.type=x,this.size=e,this.offset=t}}/**
 * @classdesc Standard Midi File Parser class
 * @author    imaya, Logue
 * @license   MIT
 */class Sr{constructor(x,e={}){e.padding=!1,e.bigEndian=!0,this.input=x,this.ip=e.index||0,this.chunkIndex=0,this.riffParser_=new yr(x,e),this.formatType=0,this.numberOfTracks=0,this.timeDivision=480,this.tracks=[],this.plainTracks=[]}parse(){let x=0,e=0;for(this.riffParser_.parse(),this.parseHeaderChunk(),x=0,e=this.numberOfTracks;x<e;++x)this.parseTrackChunk()}parseHeaderChunk(){const x=this.riffParser_.getChunk(this.chunkIndex++),e=this.input;let t=x.offset;if(!x||x.type!=="MThd")throw new Error("invalid header signature");this.formatType=e[t++]<<8|e[t++],this.numberOfTracks=e[t++]<<8|e[t++],this.timeDivision=e[t++]<<8|e[t++]}parseTrackChunk(){const x=this.riffParser_.getChunk(this.chunkIndex++),e=this.input;let t=x.offset,n=0,i=0,r=0,A=0,s=-1,B=-1,o=0,a=0,f=0,F=0,h=0,l,c;const u=()=>{let m=0;o=0;do o=e[t++],m=m<<7|o&127;while(o&128);return m};if(!x||x.type!=="MTrk")throw new Error("invalid header signature");n=x.offset+x.size;const C=[],d=[];for(;t<n;){if(i=u(),a+=i,f=t,h=e[t++],r=h>>4&15,A=h&15,r<8?(r=s,A=B,h=s<<4|B,t--,f--):(s=r,B=A),r!==15)l=new l0(l0.table[r],i,a,A,e[t++],r===12?void 0:e[t++]);else if(A!==15){if(o=u(),A===0&&e[t+o-1]!==247)throw new Error("invalid SysEx event");l=new Ae(Ae.table[A],i,a,e.subarray(t,(t+=o)-1))}else switch(r=e[t++],o=u(),r){case 0:l=new J("SequenceNumber",i,a,[e[t++],e[t++]]);break;case 1:case 2:case 3:case 4:case 5:case 6:case 7:{const m=e.subarray(t,t+=o);l=new J(J.table[r],i,a,[Z9.convert(m,{to:"UTF-8",from:"AUTO",type:"arraybuffer"})]);break}case 47:l=new J("EndOfTrack",i,a,[]);break;case 81:l=new J("SetTempo",i,a,[e[t++]<<16|e[t++]<<8|e[t++]]);break;case 84:l=new J("SmpteOffset",i,a,[e[t++],e[t++],e[t++],e[t++],e[t++]]);break;case 88:l=new J("TimeSignature",i,a,[e[t++],e[t++],e[t++],e[t++]]);break;case 89:l=new J("KeySignature",i,a,[e[t++],e[t++]]);break;case 127:l=new J("SequencerSpecific",i,a,[e.subarray(t,t+=o)]);break;default:l=new J(J.table[r],i,a,[r,e.subarray(t,t+=o)])}F=t-f,c=e.subarray(f,f+F),c[0]=h,l instanceof l0&&l.subtype==="NoteOn"&&l.parameter2===0&&(l.subtype=l0.table[8],c=new Uint8Array([128|l.channel,l.parameter1,l.parameter2])),d.push(c),C.push(l)}this.tracks.push(C),this.plainTracks.push(d)}}/**
 * @classdesc Midi Player Class
 * @author    imaya
 * @license   MIT
 */class kr{constructor(x="#wml",e="*"){this.tempo=5e5,this.webMidiLink=null,this.resume=0,this.pause=!0,this.ready=!1,this.position=0,this.track=[],this.timer=0,this.sequence={},this.enableCC111Loop=!1,this.enableFalcomLoop=!1,this.enableMFiLoop=!1,this.enableLoop=!1,this.tempoRate=1,this.masterVolume=16383,this.textEvent="",this.sequenceName="",this.copyright="",this.lyrics="",this.webMidiLink=void 0,this.length=0,this.time=0,this.timeTotal=0,this.loaded=0,this.window=window,this.target=this.window.document.querySelector(x),this.targetOrigin=e,this.decoder=new TextDecoder("UTF-8")}setCC111Loop(x){this.enableCC111Loop=x}setFalcomLoop(x){this.enableFalcomLoop=x}setMFiLoop(x){this.enableMFiLoop=x}setLoop(x){this.enableLoop=x}stop(){let x;if(this.pause=!0,this.resume=window.performance.now(),this.webMidiLink)for(x=0;x<16;++x)this.webMidiLink.contentWindow.postMessage("midi,b"+x.toString(16)+",78,0",this.targetOrigin)}getWebMidiLink(){return this.webMidiLink}init(){this.stop(),this.initSequence(),this.pause=!0,this.track=null,this.resume=-1,this.text=null,this.sequence=null,this.sequenceName=null,this.copyright=null,this.lyrics=null,this.textEvent=null,this.length=0,this.position=0,this.time=0,this.timeTotal=0,this.window.clearTimeout(this.timer);const x=this;this.ready?this.sendInitMessage():this.window.addEventListener("message",e=>{if(e.target.origin!=="*"&&e.origin!==this.targetOrigin)throw Error(`Cross orgin ${e.origin} is refused.`);e.data==="link,ready"&&x.sendInitMessage()},!1)}initSequence(){this.tempo=5e5,this.position=0,this.sendInitMessage(),this.pause=!1}play(){const x=this;if(!this.webMidiLink)throw new Error("WebMidiLink not found");this.ready?this.track&&(this.length=this.track.length,this.track instanceof Array&&this.position>=this.length&&(this.position=0),this.playSequence()):this.window.addEventListener("message",e=>{if(e.target.origin!=="*"&&e.origin!==this.targetOrigin)throw Error(`Cross orgin ${e.origin} is refused.`);e.data==="link,ready"&&(x.ready=!0,x.webMidiLink.style.height=this.webMidiLink.contentWindow.document.body.scrollHeight+"px",x.playSequence())},!1)}onSequenceEnd(){this.pause=!0,this.webMidiLink.contentWindow.postMessage("endoftrack",this.targetOrigin)}sendInitMessage(){const x=this.webMidiLink.contentWindow;let e;for(e=0;e<16;++e)x.postMessage("midi,b"+e.toString(16)+",128,0",this.targetOrigin),x.postMessage("midi,b"+e.toString(16)+",07,64",this.targetOrigin),x.postMessage("midi,b"+e.toString(16)+",0a,40",this.targetOrigin),x.postMessage("midi,e"+e.toString(16)+",00,40",this.targetOrigin),x.postMessage("midi,b"+e.toString(16)+",64,00",this.targetOrigin),x.postMessage("midi,b"+e.toString(16)+",65,00",this.targetOrigin),x.postMessage("midi,b"+e.toString(16)+",06,02",this.targetOrigin),x.postMessage("midi,b"+e.toString(16)+",26,00",this.targetOrigin);this.sendGmReset()}setWebMidiLink(x="https://logue.dev/sf2synth.js/?soundfont=Yamaha XG Sound Set Ver.2.0.sf2"){const e=this,t=n=>{if(typeof n.data=="string"){const i=n.data.split(",");i[0]==="link"&&(i[1]==="ready"?(e.ready=!0,e.loaded=100,e.setMasterVolume(e.masterVolume)):i[1]==="progress"&&(e.loaded=Math.round(i[2]/i[3]*1e4)))}};if(typeof x=="string"){this.webMidiLink&&this.webMidiLink.parentNode.removeChild(this.webMidiLink),this.target.firstChild&&this.target.removeChild(this.target.firstChild);const n=document.createElement("iframe");n.src=x,n.crossOrigin="anonymous",n.allow="autoplay",n.className="wml",this.target.appendChild(n),this.window.addEventListener("message",t,!1);const i=()=>{n.style.height=this.webMidiLink.contentWindow.document.body.scrollHeight+"px"};this.window.addEventListener("load",i,!1);let r=0;this.window.addEventListener("resize",()=>{r>0&&clearTimeout(r),r=setTimeout(i,100)},!1),this.webMidiLink=n}else this.webMidiLink.addEventListener("message",t,!1)}setMasterVolume(x){this.masterVolume=x,this.webMidiLink&&this.webMidiLink.contentWindow.postMessage("midi,f0,7f,7f,04,01,"+[("0"+(x&127).toString(16)).substr(-2),("0"+(x>>7&127).toString(16)).substr(-2),"7f"].join(","),this.targetOrigin)}setTempoRate(x){this.tempoRate=x}playSequence(){const x=this,e=this.sequence.timeDivision,t=this.track,n=this.webMidiLink.contentWindow;let i=this.position||0;const r=[],A=()=>{const s=t[i].time,B=t.length;let o,a,f,F=window.performance.now();if(x.pause){x.resume=F-x.resume;return}do{switch(o=t[i].event,o.subtype){case"TextEvent":x.textEvent=this.decoder.decode(Uint8Array.from(o.data[0]));break;case"Lyrics":x.lyrics=this.decoder.decode(Uint8Array.from(o.data[0]));break;case"Maker":if(x.enableFalcomLoop)switch(o.data[0]){case"A":r[0]={pos:i};break;case"B":if(r[0]&&typeof r[0].pos=="number"){i=r[0].pos,x.timer=x.window.setTimeout(A,0),x.position=i;return}break}if(x.enableMFiLoop&&(a=o.data[0].match(/^LOOP_(START|END)=ID:(\d+),COUNT:(-?\d+)$/),a)){if(a[1]==="START")r[a[2]|0]=r[a[2]]||{pos:i,count:a[3]|0};else if(a[1]==="END"&&x.enableMFiLoop)if(f=r[a[2]|0],f.count!==0){f.count>0&&f.count--,i=f.pos,x.timer=x.window.setTimeout(A,0),x.position=i;return}else r[a[2]|0]=null}break;case"SetTempo":x.tempo=o.data[0];break}o.subtype==="ControlChange"&&o.parameter1===111&&(r[0]={pos:i}),n.postMessage(t[i++].webMidiLink,this.targetOrigin)}while(i<B&&t[i].time===s);if(i<B?(F=window.performance.now()-F,x.timer=x.window.setTimeout(A,x.tempo/(1e3*e)*(t[i].time-s-F)*(1/x.tempoRate))):(x.pause=!0,x.enableCC111Loop&&r[0]&&typeof r[0].pos=="number"?i=r[0].pos:x.enableLoop&&(x.initSequence(),x.playSequence())),x.position=i,x.time=s,this.timeTotal===s)return this.onSequenceEnd(),2};this.pause?(this.timer=x.window.setTimeout(A,this.resume),this.pause=!1,this.resume=-1):this.timer=x.window.setTimeout(A,this.tempo/1e3*e*this.track[0].time)}loadMidiFile(x){const e=new Sr(x);this.init(),e.parse(),this.mergeMidiTracks(e)}loadMldFile(x){const e=new wr(x);this.init(),e.parse(),this.mergeMidiTracks(e.convertToMidiTracks())}loadMs2MmlFile(x){const e=new vr(x);this.init(),e.parse(),this.mergeMidiTracks(e)}loadMakiMabiSequenceFile(x){const e=new de(x);this.init(),e.parse(),this.mergeMidiTracks(e)}load3MleFile(x){const e=new br(x);this.init(),e.parse(),this.mergeMidiTracks(e)}loadMabiIccoFile(x){const e=new o8(x);this.init(),e.parse(),this.mergeMidiTracks(e)}mergeMidiTracks(x){const e=this.track=[],t=x.tracks,n=new Array(t.length),i=x.plainTracks;let r,A,s,B,o;for(A=0,s=t.length;A<s;++A)n[A]=0;for(A=0,s=t.length;A<s;++A)for(r=t[A],B=0,o=r.length;B<o;++B)r[B]instanceof J&&r[B].data&&(A===0&&r[B].subtype==="SequenceTrackName"?this.sequenceName=this.decoder.decode(Uint8Array.from(r[B].data[0])):r[B].subtype==="CopyrightNotice"&&(this.copyright=this.decoder.decode(Uint8Array.from(r[B].data[0])))),e.push({track:A,eventId:B,time:r[B].time,event:r[B],webMidiLink:"midi,"+Array.prototype.map.call(i[A][B],a=>a.toString(16)).join(",")});e.sort((a,f)=>a.time>f.time?1:a.time<f.time?-1:a.track>f.track?1:a.track<f.track?-1:a.eventId>f.eventId?1:a.eventId<f.eventId?-1:0),this.timeTotal=e.slice(-1)[0].time,this.sequence=x}getSequenceName(){return this.sequenceName}getCopyright(){return this.copyright}getLyrics(){return this.lyrics}getTextEvent(){return this.textEvent}getPosition(){return this.position}setPosition(x){this.position=x}getLength(){return this.length}sendGmReset(x=!1){this.webMidiLink&&this.webMidiLink.contentWindow.postMessage(`midi,F0,7E,7F,09,${x?"03":"01"},F7'`,this.targetOrigin)}sendAllSoundOff(){this.webMidiLink&&this.webMidiLink.contentWindow.postMessage("midi,b0,78,0",this.targetOrigin)}sendRawMidiMessage(x){this.webMidiLink&&this.webMidiLink.contentWindow.postMessage("midi,"+x,this.targetOrigin)}getTempo(){return Math.floor(60/(this.tempo/1e6))}tick2time(x){const t=this.tempo/1e6/this.sequence.timeDivision,n=parseInt(x*t),i=n%3600,r=i%60;return Math.floor(n/3600)+":"+Math.floor(i/60).toString().padStart(2,"0")+":"+Math.ceil(r).toString().padStart(2,"0")}getTime(){return this.tick2time(this.time)}getTotalTime(){return this.tick2time(this.timeTotal)}}var C0="top",w0="bottom",y0="right",F0="left",VE="auto",Ce=[C0,w0,y0,F0],Ux="start",se="end",X9="clippingParents",a8="viewport",Qx="popper",z9="reference",Ut=Ce.reduce(function(E,x){return E.concat([x+"-"+Ux,x+"-"+se])},[]),l8=[].concat(Ce,[VE]).reduce(function(E,x){return E.concat([x,x+"-"+Ux,x+"-"+se])},[]),Q9="beforeRead",x5="read",e5="afterRead",E5="beforeMain",t5="main",n5="afterMain",i5="beforeWrite",r5="write",A5="afterWrite",s5=[Q9,x5,e5,E5,t5,n5,i5,r5,A5];function xx(E){return E?(E.nodeName||"").toLowerCase():null}function T0(E){if(E==null)return window;if(E.toString()!=="[object Window]"){var x=E.ownerDocument;return x&&x.defaultView||window}return E}function Px(E){var x=T0(E).Element;return E instanceof x||E instanceof Element}function N0(E){var x=T0(E).HTMLElement;return E instanceof x||E instanceof HTMLElement}function c8(E){if(typeof ShadowRoot>"u")return!1;var x=T0(E).ShadowRoot;return E instanceof x||E instanceof ShadowRoot}function Or(E){var x=E.state;Object.keys(x.elements).forEach(function(e){var t=x.styles[e]||{},n=x.attributes[e]||{},i=x.elements[e];!N0(i)||!xx(i)||(Object.assign(i.style,t),Object.keys(n).forEach(function(r){var A=n[r];A===!1?i.removeAttribute(r):i.setAttribute(r,A===!0?"":A)}))})}function Ir(E){var x=E.state,e={popper:{position:x.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(x.elements.popper.style,e.popper),x.styles=e,x.elements.arrow&&Object.assign(x.elements.arrow.style,e.arrow),function(){Object.keys(x.elements).forEach(function(t){var n=x.elements[t],i=x.attributes[t]||{},r=Object.keys(x.styles.hasOwnProperty(t)?x.styles[t]:e[t]),A=r.reduce(function(s,B){return s[B]="",s},{});!N0(n)||!xx(n)||(Object.assign(n.style,A),Object.keys(i).forEach(function(s){n.removeAttribute(s)}))})}}const f8={name:"applyStyles",enabled:!0,phase:"write",fn:Or,effect:Ir,requires:["computeStyles"]};function G0(E){return E.split("-")[0]}var Rx=Math.max,wE=Math.min,Be=Math.round;function Pt(){var E=navigator.userAgentData;return E!=null&&E.brands&&Array.isArray(E.brands)?E.brands.map(function(x){return x.brand+"/"+x.version}).join(" "):navigator.userAgent}function B5(){return!/^((?!chrome|android).)*safari/i.test(Pt())}function oe(E,x,e){x===void 0&&(x=!1),e===void 0&&(e=!1);var t=E.getBoundingClientRect(),n=1,i=1;x&&N0(E)&&(n=E.offsetWidth>0&&Be(t.width)/E.offsetWidth||1,i=E.offsetHeight>0&&Be(t.height)/E.offsetHeight||1);var r=Px(E)?T0(E):window,A=r.visualViewport,s=!B5()&&e,B=(t.left+(s&&A?A.offsetLeft:0))/n,o=(t.top+(s&&A?A.offsetTop:0))/i,a=t.width/n,f=t.height/i;return{width:a,height:f,top:o,right:B+a,bottom:o+f,left:B,x:B,y:o}}function u8(E){var x=oe(E),e=E.offsetWidth,t=E.offsetHeight;return Math.abs(x.width-e)<=1&&(e=x.width),Math.abs(x.height-t)<=1&&(t=x.height),{x:E.offsetLeft,y:E.offsetTop,width:e,height:t}}function o5(E,x){var e=x.getRootNode&&x.getRootNode();if(E.contains(x))return!0;if(e&&c8(e)){var t=x;do{if(t&&E.isSameNode(t))return!0;t=t.parentNode||t.host}while(t)}return!1}function sx(E){return T0(E).getComputedStyle(E)}function Lr(E){return["table","td","th"].indexOf(xx(E))>=0}function bx(E){return((Px(E)?E.ownerDocument:E.document)||window.document).documentElement}function HE(E){return xx(E)==="html"?E:E.assignedSlot||E.parentNode||(c8(E)?E.host:null)||bx(E)}function G8(E){return!N0(E)||sx(E).position==="fixed"?null:E.offsetParent}function Nr(E){var x=/firefox/i.test(Pt()),e=/Trident/i.test(Pt());if(e&&N0(E)){var t=sx(E);if(t.position==="fixed")return null}var n=HE(E);for(c8(n)&&(n=n.host);N0(n)&&["html","body"].indexOf(xx(n))<0;){var i=sx(n);if(i.transform!=="none"||i.perspective!=="none"||i.contain==="paint"||["transform","perspective"].indexOf(i.willChange)!==-1||x&&i.willChange==="filter"||x&&i.filter&&i.filter!=="none")return n;n=n.parentNode}return null}function Ye(E){for(var x=T0(E),e=G8(E);e&&Lr(e)&&sx(e).position==="static";)e=G8(e);return e&&(xx(e)==="html"||xx(e)==="body"&&sx(e).position==="static")?x:e||Nr(E)||x}function d8(E){return["top","bottom"].indexOf(E)>=0?"x":"y"}function Oe(E,x,e){return Rx(E,wE(x,e))}function Rr(E,x,e){var t=Oe(E,x,e);return t>e?e:t}function a5(){return{top:0,right:0,bottom:0,left:0}}function l5(E){return Object.assign({},a5(),E)}function c5(E,x){return x.reduce(function(e,t){return e[t]=E,e},{})}var Mr=function(x,e){return x=typeof x=="function"?x(Object.assign({},e.rects,{placement:e.placement})):x,l5(typeof x!="number"?x:c5(x,Ce))};function Ur(E){var x,e=E.state,t=E.name,n=E.options,i=e.elements.arrow,r=e.modifiersData.popperOffsets,A=G0(e.placement),s=d8(A),B=[F0,y0].indexOf(A)>=0,o=B?"height":"width";if(!(!i||!r)){var a=Mr(n.padding,e),f=u8(i),F=s==="y"?C0:F0,h=s==="y"?w0:y0,l=e.rects.reference[o]+e.rects.reference[s]-r[s]-e.rects.popper[o],c=r[s]-e.rects.reference[s],u=Ye(i),C=u?s==="y"?u.clientHeight||0:u.clientWidth||0:0,d=l/2-c/2,m=a[F],g=C-f[o]-a[h],_=C/2-f[o]/2+d,b=Oe(m,_,g),w=s;e.modifiersData[t]=(x={},x[w]=b,x.centerOffset=b-_,x)}}function Pr(E){var x=E.state,e=E.options,t=e.element,n=t===void 0?"[data-popper-arrow]":t;n!=null&&(typeof n=="string"&&(n=x.elements.popper.querySelector(n),!n)||o5(x.elements.popper,n)&&(x.elements.arrow=n))}const f5={name:"arrow",enabled:!0,phase:"main",fn:Ur,effect:Pr,requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function ae(E){return E.split("-")[1]}var $r={top:"auto",right:"auto",bottom:"auto",left:"auto"};function jr(E,x){var e=E.x,t=E.y,n=x.devicePixelRatio||1;return{x:Be(e*n)/n||0,y:Be(t*n)/n||0}}function Z8(E){var x,e=E.popper,t=E.popperRect,n=E.placement,i=E.variation,r=E.offsets,A=E.position,s=E.gpuAcceleration,B=E.adaptive,o=E.roundOffsets,a=E.isFixed,f=r.x,F=f===void 0?0:f,h=r.y,l=h===void 0?0:h,c=typeof o=="function"?o({x:F,y:l}):{x:F,y:l};F=c.x,l=c.y;var u=r.hasOwnProperty("x"),C=r.hasOwnProperty("y"),d=F0,m=C0,g=window;if(B){var _=Ye(e),b="clientHeight",w="clientWidth";if(_===T0(e)&&(_=bx(e),sx(_).position!=="static"&&A==="absolute"&&(b="scrollHeight",w="scrollWidth")),_=_,n===C0||(n===F0||n===y0)&&i===se){m=w0;var p=a&&_===g&&g.visualViewport?g.visualViewport.height:_[b];l-=p-t.height,l*=s?1:-1}if(n===F0||(n===C0||n===w0)&&i===se){d=y0;var D=a&&_===g&&g.visualViewport?g.visualViewport.width:_[w];F-=D-t.width,F*=s?1:-1}}var v=Object.assign({position:A},B&&$r),S=o===!0?jr({x:F,y:l},T0(e)):{x:F,y:l};if(F=S.x,l=S.y,s){var T;return Object.assign({},v,(T={},T[m]=C?"0":"",T[d]=u?"0":"",T.transform=(g.devicePixelRatio||1)<=1?"translate("+F+"px, "+l+"px)":"translate3d("+F+"px, "+l+"px, 0)",T))}return Object.assign({},v,(x={},x[m]=C?l+"px":"",x[d]=u?F+"px":"",x.transform="",x))}function Wr(E){var x=E.state,e=E.options,t=e.gpuAcceleration,n=t===void 0?!0:t,i=e.adaptive,r=i===void 0?!0:i,A=e.roundOffsets,s=A===void 0?!0:A,B={placement:G0(x.placement),variation:ae(x.placement),popper:x.elements.popper,popperRect:x.rects.popper,gpuAcceleration:n,isFixed:x.options.strategy==="fixed"};x.modifiersData.popperOffsets!=null&&(x.styles.popper=Object.assign({},x.styles.popper,Z8(Object.assign({},B,{offsets:x.modifiersData.popperOffsets,position:x.options.strategy,adaptive:r,roundOffsets:s})))),x.modifiersData.arrow!=null&&(x.styles.arrow=Object.assign({},x.styles.arrow,Z8(Object.assign({},B,{offsets:x.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:s})))),x.attributes.popper=Object.assign({},x.attributes.popper,{"data-popper-placement":x.placement})}const C8={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:Wr,data:{}};var eE={passive:!0};function Vr(E){var x=E.state,e=E.instance,t=E.options,n=t.scroll,i=n===void 0?!0:n,r=t.resize,A=r===void 0?!0:r,s=T0(x.elements.popper),B=[].concat(x.scrollParents.reference,x.scrollParents.popper);return i&&B.forEach(function(o){o.addEventListener("scroll",e.update,eE)}),A&&s.addEventListener("resize",e.update,eE),function(){i&&B.forEach(function(o){o.removeEventListener("scroll",e.update,eE)}),A&&s.removeEventListener("resize",e.update,eE)}}const F8={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:Vr,data:{}};var Hr={left:"right",right:"left",bottom:"top",top:"bottom"};function DE(E){return E.replace(/left|right|bottom|top/g,function(x){return Hr[x]})}var qr={start:"end",end:"start"};function X8(E){return E.replace(/start|end/g,function(x){return qr[x]})}function h8(E){var x=T0(E),e=x.pageXOffset,t=x.pageYOffset;return{scrollLeft:e,scrollTop:t}}function D8(E){return oe(bx(E)).left+h8(E).scrollLeft}function Kr(E,x){var e=T0(E),t=bx(E),n=e.visualViewport,i=t.clientWidth,r=t.clientHeight,A=0,s=0;if(n){i=n.width,r=n.height;var B=B5();(B||!B&&x==="fixed")&&(A=n.offsetLeft,s=n.offsetTop)}return{width:i,height:r,x:A+D8(E),y:s}}function Yr(E){var x,e=bx(E),t=h8(E),n=(x=E.ownerDocument)==null?void 0:x.body,i=Rx(e.scrollWidth,e.clientWidth,n?n.scrollWidth:0,n?n.clientWidth:0),r=Rx(e.scrollHeight,e.clientHeight,n?n.scrollHeight:0,n?n.clientHeight:0),A=-t.scrollLeft+D8(E),s=-t.scrollTop;return sx(n||e).direction==="rtl"&&(A+=Rx(e.clientWidth,n?n.clientWidth:0)-i),{width:i,height:r,x:A,y:s}}function p8(E){var x=sx(E),e=x.overflow,t=x.overflowX,n=x.overflowY;return/auto|scroll|overlay|hidden/.test(e+n+t)}function u5(E){return["html","body","#document"].indexOf(xx(E))>=0?E.ownerDocument.body:N0(E)&&p8(E)?E:u5(HE(E))}function Ie(E,x){var e;x===void 0&&(x=[]);var t=u5(E),n=t===((e=E.ownerDocument)==null?void 0:e.body),i=T0(t),r=n?[i].concat(i.visualViewport||[],p8(t)?t:[]):t,A=x.concat(r);return n?A:A.concat(Ie(HE(r)))}function $t(E){return Object.assign({},E,{left:E.x,top:E.y,right:E.x+E.width,bottom:E.y+E.height})}function Jr(E,x){var e=oe(E,!1,x==="fixed");return e.top=e.top+E.clientTop,e.left=e.left+E.clientLeft,e.bottom=e.top+E.clientHeight,e.right=e.left+E.clientWidth,e.width=E.clientWidth,e.height=E.clientHeight,e.x=e.left,e.y=e.top,e}function z8(E,x,e){return x===a8?$t(Kr(E,e)):Px(x)?Jr(x,e):$t(Yr(bx(E)))}function Gr(E){var x=Ie(HE(E)),e=["absolute","fixed"].indexOf(sx(E).position)>=0,t=e&&N0(E)?Ye(E):E;return Px(t)?x.filter(function(n){return Px(n)&&o5(n,t)&&xx(n)!=="body"}):[]}function Zr(E,x,e,t){var n=x==="clippingParents"?Gr(E):[].concat(x),i=[].concat(n,[e]),r=i[0],A=i.reduce(function(s,B){var o=z8(E,B,t);return s.top=Rx(o.top,s.top),s.right=wE(o.right,s.right),s.bottom=wE(o.bottom,s.bottom),s.left=Rx(o.left,s.left),s},z8(E,r,t));return A.width=A.right-A.left,A.height=A.bottom-A.top,A.x=A.left,A.y=A.top,A}function d5(E){var x=E.reference,e=E.element,t=E.placement,n=t?G0(t):null,i=t?ae(t):null,r=x.x+x.width/2-e.width/2,A=x.y+x.height/2-e.height/2,s;switch(n){case C0:s={x:r,y:x.y-e.height};break;case w0:s={x:r,y:x.y+x.height};break;case y0:s={x:x.x+x.width,y:A};break;case F0:s={x:x.x-e.width,y:A};break;default:s={x:x.x,y:x.y}}var B=n?d8(n):null;if(B!=null){var o=B==="y"?"height":"width";switch(i){case Ux:s[B]=s[B]-(x[o]/2-e[o]/2);break;case se:s[B]=s[B]+(x[o]/2-e[o]/2);break}}return s}function le(E,x){x===void 0&&(x={});var e=x,t=e.placement,n=t===void 0?E.placement:t,i=e.strategy,r=i===void 0?E.strategy:i,A=e.boundary,s=A===void 0?X9:A,B=e.rootBoundary,o=B===void 0?a8:B,a=e.elementContext,f=a===void 0?Qx:a,F=e.altBoundary,h=F===void 0?!1:F,l=e.padding,c=l===void 0?0:l,u=l5(typeof c!="number"?c:c5(c,Ce)),C=f===Qx?z9:Qx,d=E.rects.popper,m=E.elements[h?C:f],g=Zr(Px(m)?m:m.contextElement||bx(E.elements.popper),s,o,r),_=oe(E.elements.reference),b=d5({reference:_,element:d,strategy:"absolute",placement:n}),w=$t(Object.assign({},d,b)),p=f===Qx?w:_,D={top:g.top-p.top+u.top,bottom:p.bottom-g.bottom+u.bottom,left:g.left-p.left+u.left,right:p.right-g.right+u.right},v=E.modifiersData.offset;if(f===Qx&&v){var S=v[n];Object.keys(D).forEach(function(T){var M=[y0,w0].indexOf(T)>=0?1:-1,R=[C0,w0].indexOf(T)>=0?"y":"x";D[T]+=S[R]*M})}return D}function Xr(E,x){x===void 0&&(x={});var e=x,t=e.placement,n=e.boundary,i=e.rootBoundary,r=e.padding,A=e.flipVariations,s=e.allowedAutoPlacements,B=s===void 0?l8:s,o=ae(t),a=o?A?Ut:Ut.filter(function(h){return ae(h)===o}):Ce,f=a.filter(function(h){return B.indexOf(h)>=0});f.length===0&&(f=a);var F=f.reduce(function(h,l){return h[l]=le(E,{placement:l,boundary:n,rootBoundary:i,padding:r})[G0(l)],h},{});return Object.keys(F).sort(function(h,l){return F[h]-F[l]})}function zr(E){if(G0(E)===VE)return[];var x=DE(E);return[X8(E),x,X8(x)]}function Qr(E){var x=E.state,e=E.options,t=E.name;if(!x.modifiersData[t]._skip){for(var n=e.mainAxis,i=n===void 0?!0:n,r=e.altAxis,A=r===void 0?!0:r,s=e.fallbackPlacements,B=e.padding,o=e.boundary,a=e.rootBoundary,f=e.altBoundary,F=e.flipVariations,h=F===void 0?!0:F,l=e.allowedAutoPlacements,c=x.options.placement,u=G0(c),C=u===c,d=s||(C||!h?[DE(c)]:zr(c)),m=[c].concat(d).reduce(function(f0,x0){return f0.concat(G0(x0)===VE?Xr(x,{placement:x0,boundary:o,rootBoundary:a,padding:B,flipVariations:h,allowedAutoPlacements:l}):x0)},[]),g=x.rects.reference,_=x.rects.popper,b=new Map,w=!0,p=m[0],D=0;D<m.length;D++){var v=m[D],S=G0(v),T=ae(v)===Ux,M=[C0,w0].indexOf(S)>=0,R=M?"width":"height",N=le(x,{placement:v,boundary:o,rootBoundary:a,altBoundary:f,padding:B}),P=M?T?y0:F0:T?w0:C0;g[R]>_[R]&&(P=DE(P));var Y=DE(P),i0=[];if(i&&i0.push(N[S]<=0),A&&i0.push(N[P]<=0,N[Y]<=0),i0.every(function(f0){return f0})){p=v,w=!1;break}b.set(v,i0)}if(w)for(var W=h?3:1,r0=function(x0){var e0=m.find(function(ox){var h0=b.get(ox);if(h0)return h0.slice(0,x0).every(function(ax){return ax})});if(e0)return p=e0,"break"},q=W;q>0;q--){var G=r0(q);if(G==="break")break}x.placement!==p&&(x.modifiersData[t]._skip=!0,x.placement=p,x.reset=!0)}}const C5={name:"flip",enabled:!0,phase:"main",fn:Qr,requiresIfExists:["offset"],data:{_skip:!1}};function Q8(E,x,e){return e===void 0&&(e={x:0,y:0}),{top:E.top-x.height-e.y,right:E.right-x.width+e.x,bottom:E.bottom-x.height+e.y,left:E.left-x.width-e.x}}function xn(E){return[C0,y0,w0,F0].some(function(x){return E[x]>=0})}function xA(E){var x=E.state,e=E.name,t=x.rects.reference,n=x.rects.popper,i=x.modifiersData.preventOverflow,r=le(x,{elementContext:"reference"}),A=le(x,{altBoundary:!0}),s=Q8(r,t),B=Q8(A,n,i),o=xn(s),a=xn(B);x.modifiersData[e]={referenceClippingOffsets:s,popperEscapeOffsets:B,isReferenceHidden:o,hasPopperEscaped:a},x.attributes.popper=Object.assign({},x.attributes.popper,{"data-popper-reference-hidden":o,"data-popper-escaped":a})}const F5={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:xA};function eA(E,x,e){var t=G0(E),n=[F0,C0].indexOf(t)>=0?-1:1,i=typeof e=="function"?e(Object.assign({},x,{placement:E})):e,r=i[0],A=i[1];return r=r||0,A=(A||0)*n,[F0,y0].indexOf(t)>=0?{x:A,y:r}:{x:r,y:A}}function EA(E){var x=E.state,e=E.options,t=E.name,n=e.offset,i=n===void 0?[0,0]:n,r=l8.reduce(function(o,a){return o[a]=eA(a,x.rects,i),o},{}),A=r[x.placement],s=A.x,B=A.y;x.modifiersData.popperOffsets!=null&&(x.modifiersData.popperOffsets.x+=s,x.modifiersData.popperOffsets.y+=B),x.modifiersData[t]=r}const h5={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:EA};function tA(E){var x=E.state,e=E.name;x.modifiersData[e]=d5({reference:x.rects.reference,element:x.rects.popper,strategy:"absolute",placement:x.placement})}const m8={name:"popperOffsets",enabled:!0,phase:"read",fn:tA,data:{}};function nA(E){return E==="x"?"y":"x"}function iA(E){var x=E.state,e=E.options,t=E.name,n=e.mainAxis,i=n===void 0?!0:n,r=e.altAxis,A=r===void 0?!1:r,s=e.boundary,B=e.rootBoundary,o=e.altBoundary,a=e.padding,f=e.tether,F=f===void 0?!0:f,h=e.tetherOffset,l=h===void 0?0:h,c=le(x,{boundary:s,rootBoundary:B,padding:a,altBoundary:o}),u=G0(x.placement),C=ae(x.placement),d=!C,m=d8(u),g=nA(m),_=x.modifiersData.popperOffsets,b=x.rects.reference,w=x.rects.popper,p=typeof l=="function"?l(Object.assign({},x.rects,{placement:x.placement})):l,D=typeof p=="number"?{mainAxis:p,altAxis:p}:Object.assign({mainAxis:0,altAxis:0},p),v=x.modifiersData.offset?x.modifiersData.offset[x.placement]:null,S={x:0,y:0};if(_){if(i){var T,M=m==="y"?C0:F0,R=m==="y"?w0:y0,N=m==="y"?"height":"width",P=_[m],Y=P+c[M],i0=P-c[R],W=F?-w[N]/2:0,r0=C===Ux?b[N]:w[N],q=C===Ux?-w[N]:-b[N],G=x.elements.arrow,f0=F&&G?u8(G):{width:0,height:0},x0=x.modifiersData["arrow#persistent"]?x.modifiersData["arrow#persistent"].padding:a5(),e0=x0[M],ox=x0[R],h0=Oe(0,b[N],f0[N]),ax=d?b[N]/2-W-h0-e0-D.mainAxis:r0-h0-e0-D.mainAxis,Tx=d?-b[N]/2+W+h0+ox+D.mainAxis:q+h0+ox+D.mainAxis,Sx=x.elements.arrow&&Ye(x.elements.arrow),lx=Sx?m==="y"?Sx.clientTop||0:Sx.clientLeft||0:0,cx=(T=v?.[m])!=null?T:0,xt=P+ax-cx-lx,B0=P+Tx-cx,D0=Oe(F?wE(Y,xt):Y,P,F?Rx(i0,B0):i0);_[m]=D0,S[m]=D0-P}if(A){var De,et=m==="x"?C0:F0,Qe=m==="x"?w0:y0,ex=_[g],K0=g==="y"?"height":"width",pe=ex+c[et],me=ex-c[Qe],ge=[C0,F0].indexOf(u)!==-1,_e=(De=v?.[g])!=null?De:0,xE=ge?pe:ex-b[K0]-w[K0]-_e+D.altAxis,P0=ge?ex+b[K0]+w[K0]-_e-D.altAxis:me,Kx=F&&ge?Rr(xE,ex,P0):Oe(F?xE:pe,ex,F?P0:me);_[g]=Kx,S[g]=Kx-ex}x.modifiersData[t]=S}}const D5={name:"preventOverflow",enabled:!0,phase:"main",fn:iA,requiresIfExists:["offset"]};function rA(E){return{scrollLeft:E.scrollLeft,scrollTop:E.scrollTop}}function AA(E){return E===T0(E)||!N0(E)?h8(E):rA(E)}function sA(E){var x=E.getBoundingClientRect(),e=Be(x.width)/E.offsetWidth||1,t=Be(x.height)/E.offsetHeight||1;return e!==1||t!==1}function BA(E,x,e){e===void 0&&(e=!1);var t=N0(x),n=N0(x)&&sA(x),i=bx(x),r=oe(E,n,e),A={scrollLeft:0,scrollTop:0},s={x:0,y:0};return(t||!t&&!e)&&((xx(x)!=="body"||p8(i))&&(A=AA(x)),N0(x)?(s=oe(x,!0),s.x+=x.clientLeft,s.y+=x.clientTop):i&&(s.x=D8(i))),{x:r.left+A.scrollLeft-s.x,y:r.top+A.scrollTop-s.y,width:r.width,height:r.height}}function oA(E){var x=new Map,e=new Set,t=[];E.forEach(function(i){x.set(i.name,i)});function n(i){e.add(i.name);var r=[].concat(i.requires||[],i.requiresIfExists||[]);r.forEach(function(A){if(!e.has(A)){var s=x.get(A);s&&n(s)}}),t.push(i)}return E.forEach(function(i){e.has(i.name)||n(i)}),t}function aA(E){var x=oA(E);return s5.reduce(function(e,t){return e.concat(x.filter(function(n){return n.phase===t}))},[])}function lA(E){var x;return function(){return x||(x=new Promise(function(e){Promise.resolve().then(function(){x=void 0,e(E())})})),x}}function cA(E){var x=E.reduce(function(e,t){var n=e[t.name];return e[t.name]=n?Object.assign({},n,t,{options:Object.assign({},n.options,t.options),data:Object.assign({},n.data,t.data)}):t,e},{});return Object.keys(x).map(function(e){return x[e]})}var en={placement:"bottom",modifiers:[],strategy:"absolute"};function En(){for(var E=arguments.length,x=new Array(E),e=0;e<E;e++)x[e]=arguments[e];return!x.some(function(t){return!(t&&typeof t.getBoundingClientRect=="function")})}function qE(E){E===void 0&&(E={});var x=E,e=x.defaultModifiers,t=e===void 0?[]:e,n=x.defaultOptions,i=n===void 0?en:n;return function(A,s,B){B===void 0&&(B=i);var o={placement:"bottom",orderedModifiers:[],options:Object.assign({},en,i),modifiersData:{},elements:{reference:A,popper:s},attributes:{},styles:{}},a=[],f=!1,F={state:o,setOptions:function(u){var C=typeof u=="function"?u(o.options):u;l(),o.options=Object.assign({},i,o.options,C),o.scrollParents={reference:Px(A)?Ie(A):A.contextElement?Ie(A.contextElement):[],popper:Ie(s)};var d=aA(cA([].concat(t,o.options.modifiers)));return o.orderedModifiers=d.filter(function(m){return m.enabled}),h(),F.update()},forceUpdate:function(){if(!f){var u=o.elements,C=u.reference,d=u.popper;if(En(C,d)){o.rects={reference:BA(C,Ye(d),o.options.strategy==="fixed"),popper:u8(d)},o.reset=!1,o.placement=o.options.placement,o.orderedModifiers.forEach(function(D){return o.modifiersData[D.name]=Object.assign({},D.data)});for(var m=0;m<o.orderedModifiers.length;m++){if(o.reset===!0){o.reset=!1,m=-1;continue}var g=o.orderedModifiers[m],_=g.fn,b=g.options,w=b===void 0?{}:b,p=g.name;typeof _=="function"&&(o=_({state:o,options:w,name:p,instance:F})||o)}}}},update:lA(function(){return new Promise(function(c){F.forceUpdate(),c(o)})}),destroy:function(){l(),f=!0}};if(!En(A,s))return F;F.setOptions(B).then(function(c){!f&&B.onFirstUpdate&&B.onFirstUpdate(c)});function h(){o.orderedModifiers.forEach(function(c){var u=c.name,C=c.options,d=C===void 0?{}:C,m=c.effect;if(typeof m=="function"){var g=m({state:o,name:u,instance:F,options:d}),_=function(){};a.push(g||_)}})}function l(){a.forEach(function(c){return c()}),a=[]}return F}}var fA=qE(),uA=[F8,m8,C8,f8],dA=qE({defaultModifiers:uA}),CA=[F8,m8,C8,f8,h5,C5,D5,f5,F5],g8=qE({defaultModifiers:CA});const p5=Object.freeze(Object.defineProperty({__proto__:null,afterMain:n5,afterRead:e5,afterWrite:A5,applyStyles:f8,arrow:f5,auto:VE,basePlacements:Ce,beforeMain:E5,beforeRead:Q9,beforeWrite:i5,bottom:w0,clippingParents:X9,computeStyles:C8,createPopper:g8,createPopperBase:fA,createPopperLite:dA,detectOverflow:le,end:se,eventListeners:F8,flip:C5,hide:F5,left:F0,main:t5,modifierPhases:s5,offset:h5,placements:l8,popper:Qx,popperGenerator:qE,popperOffsets:m8,preventOverflow:D5,read:x5,reference:z9,right:y0,start:Ux,top:C0,variationPlacements:Ut,viewport:a8,write:r5},Symbol.toStringTag,{value:"Module"}));/*!
  * Bootstrap v5.3.2 (https://getbootstrap.com/)
  * Copyright 2011-2023 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */const fx=new Map,nt={set(E,x,e){fx.has(E)||fx.set(E,new Map);const t=fx.get(E);!t.has(x)&&t.size!==0||t.set(x,e)},get(E,x){return fx.has(E)&&fx.get(E).get(x)||null},remove(E,x){if(!fx.has(E))return;const e=fx.get(E);e.delete(x),e.size===0&&fx.delete(E)}},FA=1e6,hA=1e3,jt="transitionend",m5=E=>(E&&window.CSS&&window.CSS.escape&&(E=E.replace(/#([^\s"#']+)/g,(x,e)=>`#${CSS.escape(e)}`)),E),DA=E=>E==null?`${E}`:Object.prototype.toString.call(E).match(/\s([a-z]+)/i)[1].toLowerCase(),pA=E=>{do E+=Math.floor(Math.random()*FA);while(document.getElementById(E));return E},mA=E=>{if(!E)return 0;let{transitionDuration:x,transitionDelay:e}=window.getComputedStyle(E);const t=Number.parseFloat(x),n=Number.parseFloat(e);return!t&&!n?0:(x=x.split(",")[0],e=e.split(",")[0],(Number.parseFloat(x)+Number.parseFloat(e))*hA)},g5=E=>{E.dispatchEvent(new Event(jt))},nx=E=>!E||typeof E!="object"?!1:(typeof E.jquery<"u"&&(E=E[0]),typeof E.nodeType<"u"),mx=E=>nx(E)?E.jquery?E[0]:E:typeof E=="string"&&E.length>0?document.querySelector(m5(E)):null,Fe=E=>{if(!nx(E)||E.getClientRects().length===0)return!1;const x=getComputedStyle(E).getPropertyValue("visibility")==="visible",e=E.closest("details:not([open])");if(!e)return x;if(e!==E){const t=E.closest("summary");if(t&&t.parentNode!==e||t===null)return!1}return x},gx=E=>!E||E.nodeType!==Node.ELEMENT_NODE||E.classList.contains("disabled")?!0:typeof E.disabled<"u"?E.disabled:E.hasAttribute("disabled")&&E.getAttribute("disabled")!=="false",_5=E=>{if(!document.documentElement.attachShadow)return null;if(typeof E.getRootNode=="function"){const x=E.getRootNode();return x instanceof ShadowRoot?x:null}return E instanceof ShadowRoot?E:E.parentNode?_5(E.parentNode):null},yE=()=>{},Je=E=>{E.offsetHeight},v5=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,it=[],gA=E=>{document.readyState==="loading"?(it.length||document.addEventListener("DOMContentLoaded",()=>{for(const x of it)x()}),it.push(E)):E()},R0=()=>document.documentElement.dir==="rtl",U0=E=>{gA(()=>{const x=v5();if(x){const e=E.NAME,t=x.fn[e];x.fn[e]=E.jQueryInterface,x.fn[e].Constructor=E,x.fn[e].noConflict=()=>(x.fn[e]=t,E.jQueryInterface)}})},g0=(E,x=[],e=E)=>typeof E=="function"?E(...x):e,b5=(E,x,e=!0)=>{if(!e){g0(E);return}const t=5,n=mA(x)+t;let i=!1;const r=({target:A})=>{A===x&&(i=!0,x.removeEventListener(jt,r),g0(E))};x.addEventListener(jt,r),setTimeout(()=>{i||g5(x)},n)},_8=(E,x,e,t)=>{const n=E.length;let i=E.indexOf(x);return i===-1?!e&&t?E[n-1]:E[0]:(i+=e?1:-1,t&&(i=(i+n)%n),E[Math.max(0,Math.min(i,n-1))])},_A=/[^.]*(?=\..*)\.|.*/,vA=/\..*/,bA=/::\d+$/,rt={};let tn=1;const w5={mouseenter:"mouseover",mouseleave:"mouseout"},wA=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function y5(E,x){return x&&`${x}::${tn++}`||E.uidEvent||tn++}function T5(E){const x=y5(E);return E.uidEvent=x,rt[x]=rt[x]||{},rt[x]}function yA(E,x){return function e(t){return v8(t,{delegateTarget:E}),e.oneOff&&O.off(E,t.type,x),x.apply(E,[t])}}function TA(E,x,e){return function t(n){const i=E.querySelectorAll(x);for(let{target:r}=n;r&&r!==this;r=r.parentNode)for(const A of i)if(A===r)return v8(n,{delegateTarget:r}),t.oneOff&&O.off(E,n.type,x,e),e.apply(r,[n])}}function S5(E,x,e=null){return Object.values(E).find(t=>t.callable===x&&t.delegationSelector===e)}function k5(E,x,e){const t=typeof x=="string",n=t?e:x||e;let i=O5(E);return wA.has(i)||(i=E),[t,n,i]}function nn(E,x,e,t,n){if(typeof x!="string"||!E)return;let[i,r,A]=k5(x,e,t);x in w5&&(r=(h=>function(l){if(!l.relatedTarget||l.relatedTarget!==l.delegateTarget&&!l.delegateTarget.contains(l.relatedTarget))return h.call(this,l)})(r));const s=T5(E),B=s[A]||(s[A]={}),o=S5(B,r,i?e:null);if(o){o.oneOff=o.oneOff&&n;return}const a=y5(r,x.replace(_A,"")),f=i?TA(E,e,r):yA(E,r);f.delegationSelector=i?e:null,f.callable=r,f.oneOff=n,f.uidEvent=a,B[a]=f,E.addEventListener(A,f,i)}function Wt(E,x,e,t,n){const i=S5(x[e],t,n);i&&(E.removeEventListener(e,i,!!n),delete x[e][i.uidEvent])}function SA(E,x,e,t){const n=x[e]||{};for(const[i,r]of Object.entries(n))i.includes(t)&&Wt(E,x,e,r.callable,r.delegationSelector)}function O5(E){return E=E.replace(vA,""),w5[E]||E}const O={on(E,x,e,t){nn(E,x,e,t,!1)},one(E,x,e,t){nn(E,x,e,t,!0)},off(E,x,e,t){if(typeof x!="string"||!E)return;const[n,i,r]=k5(x,e,t),A=r!==x,s=T5(E),B=s[r]||{},o=x.startsWith(".");if(typeof i<"u"){if(!Object.keys(B).length)return;Wt(E,s,r,i,n?e:null);return}if(o)for(const a of Object.keys(s))SA(E,s,a,x.slice(1));for(const[a,f]of Object.entries(B)){const F=a.replace(bA,"");(!A||x.includes(F))&&Wt(E,s,r,f.callable,f.delegationSelector)}},trigger(E,x,e){if(typeof x!="string"||!E)return null;const t=v5(),n=O5(x),i=x!==n;let r=null,A=!0,s=!0,B=!1;i&&t&&(r=t.Event(x,e),t(E).trigger(r),A=!r.isPropagationStopped(),s=!r.isImmediatePropagationStopped(),B=r.isDefaultPrevented());const o=v8(new Event(x,{bubbles:A,cancelable:!0}),e);return B&&o.preventDefault(),s&&E.dispatchEvent(o),o.defaultPrevented&&r&&r.preventDefault(),o}};function v8(E,x={}){for(const[e,t]of Object.entries(x))try{E[e]=t}catch{Object.defineProperty(E,e,{configurable:!0,get(){return t}})}return E}function rn(E){if(E==="true")return!0;if(E==="false")return!1;if(E===Number(E).toString())return Number(E);if(E===""||E==="null")return null;if(typeof E!="string")return E;try{return JSON.parse(decodeURIComponent(E))}catch{return E}}function At(E){return E.replace(/[A-Z]/g,x=>`-${x.toLowerCase()}`)}const ix={setDataAttribute(E,x,e){E.setAttribute(`data-bs-${At(x)}`,e)},removeDataAttribute(E,x){E.removeAttribute(`data-bs-${At(x)}`)},getDataAttributes(E){if(!E)return{};const x={},e=Object.keys(E.dataset).filter(t=>t.startsWith("bs")&&!t.startsWith("bsConfig"));for(const t of e){let n=t.replace(/^bs/,"");n=n.charAt(0).toLowerCase()+n.slice(1,n.length),x[n]=rn(E.dataset[t])}return x},getDataAttribute(E,x){return rn(E.getAttribute(`data-bs-${At(x)}`))}};let Ge=class{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(x){return x=this._mergeConfigObj(x),x=this._configAfterMerge(x),this._typeCheckConfig(x),x}_configAfterMerge(x){return x}_mergeConfigObj(x,e){const t=nx(e)?ix.getDataAttribute(e,"config"):{};return{...this.constructor.Default,...typeof t=="object"?t:{},...nx(e)?ix.getDataAttributes(e):{},...typeof x=="object"?x:{}}}_typeCheckConfig(x,e=this.constructor.DefaultType){for(const[t,n]of Object.entries(e)){const i=x[t],r=nx(i)?"element":DA(i);if(!new RegExp(n).test(r))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${t}" provided type "${r}" but expected type "${n}".`)}}};const kA="5.3.2";class q0 extends Ge{constructor(x,e){super(),x=mx(x),x&&(this._element=x,this._config=this._getConfig(e),nt.set(this._element,this.constructor.DATA_KEY,this))}dispose(){nt.remove(this._element,this.constructor.DATA_KEY),O.off(this._element,this.constructor.EVENT_KEY);for(const x of Object.getOwnPropertyNames(this))this[x]=null}_queueCallback(x,e,t=!0){b5(x,e,t)}_getConfig(x){return x=this._mergeConfigObj(x,this._element),x=this._configAfterMerge(x),this._typeCheckConfig(x),x}static getInstance(x){return nt.get(mx(x),this.DATA_KEY)}static getOrCreateInstance(x,e={}){return this.getInstance(x)||new this(x,typeof e=="object"?e:null)}static get VERSION(){return kA}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}static eventName(x){return`${x}${this.EVENT_KEY}`}}const st=E=>{let x=E.getAttribute("data-bs-target");if(!x||x==="#"){let e=E.getAttribute("href");if(!e||!e.includes("#")&&!e.startsWith("."))return null;e.includes("#")&&!e.startsWith("#")&&(e=`#${e.split("#")[1]}`),x=e&&e!=="#"?m5(e.trim()):null}return x},j={find(E,x=document.documentElement){return[].concat(...Element.prototype.querySelectorAll.call(x,E))},findOne(E,x=document.documentElement){return Element.prototype.querySelector.call(x,E)},children(E,x){return[].concat(...E.children).filter(e=>e.matches(x))},parents(E,x){const e=[];let t=E.parentNode.closest(x);for(;t;)e.push(t),t=t.parentNode.closest(x);return e},prev(E,x){let e=E.previousElementSibling;for(;e;){if(e.matches(x))return[e];e=e.previousElementSibling}return[]},next(E,x){let e=E.nextElementSibling;for(;e;){if(e.matches(x))return[e];e=e.nextElementSibling}return[]},focusableChildren(E){const x=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map(e=>`${e}:not([tabindex^="-"])`).join(",");return this.find(x,E).filter(e=>!gx(e)&&Fe(e))},getSelectorFromElement(E){const x=st(E);return x&&j.findOne(x)?x:null},getElementFromSelector(E){const x=st(E);return x?j.findOne(x):null},getMultipleElementsFromSelector(E){const x=st(E);return x?j.find(x):[]}},KE=(E,x="hide")=>{const e=`click.dismiss${E.EVENT_KEY}`,t=E.NAME;O.on(document,e,`[data-bs-dismiss="${t}"]`,function(n){if(["A","AREA"].includes(this.tagName)&&n.preventDefault(),gx(this))return;const i=j.getElementFromSelector(this)||this.closest(`.${t}`);E.getOrCreateInstance(i)[x]()})},OA="alert",IA="bs.alert",I5=`.${IA}`,LA=`close${I5}`,NA=`closed${I5}`,RA="fade",MA="show";class YE extends q0{static get NAME(){return OA}close(){if(O.trigger(this._element,LA).defaultPrevented)return;this._element.classList.remove(MA);const e=this._element.classList.contains(RA);this._queueCallback(()=>this._destroyElement(),this._element,e)}_destroyElement(){this._element.remove(),O.trigger(this._element,NA),this.dispose()}static jQueryInterface(x){return this.each(function(){const e=YE.getOrCreateInstance(this);if(typeof x=="string"){if(e[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);e[x](this)}})}}KE(YE,"close");U0(YE);const UA="button",PA="bs.button",$A=`.${PA}`,jA=".data-api",WA="active",An='[data-bs-toggle="button"]',VA=`click${$A}${jA}`;class JE extends q0{static get NAME(){return UA}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle(WA))}static jQueryInterface(x){return this.each(function(){const e=JE.getOrCreateInstance(this);x==="toggle"&&e[x]()})}}O.on(document,VA,An,E=>{E.preventDefault();const x=E.target.closest(An);JE.getOrCreateInstance(x).toggle()});U0(JE);const HA="swipe",he=".bs.swipe",qA=`touchstart${he}`,KA=`touchmove${he}`,YA=`touchend${he}`,JA=`pointerdown${he}`,GA=`pointerup${he}`,ZA="touch",XA="pen",zA="pointer-event",QA=40,xs={endCallback:null,leftCallback:null,rightCallback:null},es={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class TE extends Ge{constructor(x,e){super(),this._element=x,!(!x||!TE.isSupported())&&(this._config=this._getConfig(e),this._deltaX=0,this._supportPointerEvents=!!window.PointerEvent,this._initEvents())}static get Default(){return xs}static get DefaultType(){return es}static get NAME(){return HA}dispose(){O.off(this._element,he)}_start(x){if(!this._supportPointerEvents){this._deltaX=x.touches[0].clientX;return}this._eventIsPointerPenTouch(x)&&(this._deltaX=x.clientX)}_end(x){this._eventIsPointerPenTouch(x)&&(this._deltaX=x.clientX-this._deltaX),this._handleSwipe(),g0(this._config.endCallback)}_move(x){this._deltaX=x.touches&&x.touches.length>1?0:x.touches[0].clientX-this._deltaX}_handleSwipe(){const x=Math.abs(this._deltaX);if(x<=QA)return;const e=x/this._deltaX;this._deltaX=0,e&&g0(e>0?this._config.rightCallback:this._config.leftCallback)}_initEvents(){this._supportPointerEvents?(O.on(this._element,JA,x=>this._start(x)),O.on(this._element,GA,x=>this._end(x)),this._element.classList.add(zA)):(O.on(this._element,qA,x=>this._start(x)),O.on(this._element,KA,x=>this._move(x)),O.on(this._element,YA,x=>this._end(x)))}_eventIsPointerPenTouch(x){return this._supportPointerEvents&&(x.pointerType===XA||x.pointerType===ZA)}static isSupported(){return"ontouchstart"in document.documentElement||navigator.maxTouchPoints>0}}const Es="carousel",ts="bs.carousel",wx=`.${ts}`,L5=".data-api",ns="ArrowLeft",is="ArrowRight",rs=500,ve="next",Jx="prev",xe="left",pE="right",As=`slide${wx}`,Bt=`slid${wx}`,ss=`keydown${wx}`,Bs=`mouseenter${wx}`,os=`mouseleave${wx}`,as=`dragstart${wx}`,ls=`load${wx}${L5}`,cs=`click${wx}${L5}`,N5="carousel",EE="active",fs="slide",us="carousel-item-end",ds="carousel-item-start",Cs="carousel-item-next",Fs="carousel-item-prev",R5=".active",M5=".carousel-item",hs=R5+M5,Ds=".carousel-item img",ps=".carousel-indicators",ms="[data-bs-slide], [data-bs-slide-to]",gs='[data-bs-ride="carousel"]',_s={[ns]:pE,[is]:xe},vs={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},bs={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class Ze extends q0{constructor(x,e){super(x,e),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=j.findOne(ps,this._element),this._addEventListeners(),this._config.ride===N5&&this.cycle()}static get Default(){return vs}static get DefaultType(){return bs}static get NAME(){return Es}next(){this._slide(ve)}nextWhenVisible(){!document.hidden&&Fe(this._element)&&this.next()}prev(){this._slide(Jx)}pause(){this._isSliding&&g5(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval(()=>this.nextWhenVisible(),this._config.interval)}_maybeEnableCycle(){if(this._config.ride){if(this._isSliding){O.one(this._element,Bt,()=>this.cycle());return}this.cycle()}}to(x){const e=this._getItems();if(x>e.length-1||x<0)return;if(this._isSliding){O.one(this._element,Bt,()=>this.to(x));return}const t=this._getItemIndex(this._getActive());if(t===x)return;const n=x>t?ve:Jx;this._slide(n,e[x])}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(x){return x.defaultInterval=x.interval,x}_addEventListeners(){this._config.keyboard&&O.on(this._element,ss,x=>this._keydown(x)),this._config.pause==="hover"&&(O.on(this._element,Bs,()=>this.pause()),O.on(this._element,os,()=>this._maybeEnableCycle())),this._config.touch&&TE.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const t of j.find(Ds,this._element))O.on(t,as,n=>n.preventDefault());const e={leftCallback:()=>this._slide(this._directionToOrder(xe)),rightCallback:()=>this._slide(this._directionToOrder(pE)),endCallback:()=>{this._config.pause==="hover"&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout(()=>this._maybeEnableCycle(),rs+this._config.interval))}};this._swipeHelper=new TE(this._element,e)}_keydown(x){if(/input|textarea/i.test(x.target.tagName))return;const e=_s[x.key];e&&(x.preventDefault(),this._slide(this._directionToOrder(e)))}_getItemIndex(x){return this._getItems().indexOf(x)}_setActiveIndicatorElement(x){if(!this._indicatorsElement)return;const e=j.findOne(R5,this._indicatorsElement);e.classList.remove(EE),e.removeAttribute("aria-current");const t=j.findOne(`[data-bs-slide-to="${x}"]`,this._indicatorsElement);t&&(t.classList.add(EE),t.setAttribute("aria-current","true"))}_updateInterval(){const x=this._activeElement||this._getActive();if(!x)return;const e=Number.parseInt(x.getAttribute("data-bs-interval"),10);this._config.interval=e||this._config.defaultInterval}_slide(x,e=null){if(this._isSliding)return;const t=this._getActive(),n=x===ve,i=e||_8(this._getItems(),t,n,this._config.wrap);if(i===t)return;const r=this._getItemIndex(i),A=F=>O.trigger(this._element,F,{relatedTarget:i,direction:this._orderToDirection(x),from:this._getItemIndex(t),to:r});if(A(As).defaultPrevented||!t||!i)return;const B=!!this._interval;this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(r),this._activeElement=i;const o=n?ds:us,a=n?Cs:Fs;i.classList.add(a),Je(i),t.classList.add(o),i.classList.add(o);const f=()=>{i.classList.remove(o,a),i.classList.add(EE),t.classList.remove(EE,a,o),this._isSliding=!1,A(Bt)};this._queueCallback(f,t,this._isAnimated()),B&&this.cycle()}_isAnimated(){return this._element.classList.contains(fs)}_getActive(){return j.findOne(hs,this._element)}_getItems(){return j.find(M5,this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(x){return R0()?x===xe?Jx:ve:x===xe?ve:Jx}_orderToDirection(x){return R0()?x===Jx?xe:pE:x===Jx?pE:xe}static jQueryInterface(x){return this.each(function(){const e=Ze.getOrCreateInstance(this,x);if(typeof x=="number"){e.to(x);return}if(typeof x=="string"){if(e[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);e[x]()}})}}O.on(document,cs,ms,function(E){const x=j.getElementFromSelector(this);if(!x||!x.classList.contains(N5))return;E.preventDefault();const e=Ze.getOrCreateInstance(x),t=this.getAttribute("data-bs-slide-to");if(t){e.to(t),e._maybeEnableCycle();return}if(ix.getDataAttribute(this,"slide")==="next"){e.next(),e._maybeEnableCycle();return}e.prev(),e._maybeEnableCycle()});O.on(window,ls,()=>{const E=j.find(gs);for(const x of E)Ze.getOrCreateInstance(x)});U0(Ze);const ws="collapse",ys="bs.collapse",Xe=`.${ys}`,Ts=".data-api",Ss=`show${Xe}`,ks=`shown${Xe}`,Os=`hide${Xe}`,Is=`hidden${Xe}`,Ls=`click${Xe}${Ts}`,ot="show",te="collapse",tE="collapsing",Ns="collapsed",Rs=`:scope .${te} .${te}`,Ms="collapse-horizontal",Us="width",Ps="height",$s=".collapse.show, .collapse.collapsing",Vt='[data-bs-toggle="collapse"]',js={parent:null,toggle:!0},Ws={parent:"(null|element)",toggle:"boolean"};class Ne extends q0{constructor(x,e){super(x,e),this._isTransitioning=!1,this._triggerArray=[];const t=j.find(Vt);for(const n of t){const i=j.getSelectorFromElement(n),r=j.find(i).filter(A=>A===this._element);i!==null&&r.length&&this._triggerArray.push(n)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return js}static get DefaultType(){return Ws}static get NAME(){return ws}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let x=[];if(this._config.parent&&(x=this._getFirstLevelChildren($s).filter(A=>A!==this._element).map(A=>Ne.getOrCreateInstance(A,{toggle:!1}))),x.length&&x[0]._isTransitioning||O.trigger(this._element,Ss).defaultPrevented)return;for(const A of x)A.hide();const t=this._getDimension();this._element.classList.remove(te),this._element.classList.add(tE),this._element.style[t]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const n=()=>{this._isTransitioning=!1,this._element.classList.remove(tE),this._element.classList.add(te,ot),this._element.style[t]="",O.trigger(this._element,ks)},r=`scroll${t[0].toUpperCase()+t.slice(1)}`;this._queueCallback(n,this._element,!0),this._element.style[t]=`${this._element[r]}px`}hide(){if(this._isTransitioning||!this._isShown()||O.trigger(this._element,Os).defaultPrevented)return;const e=this._getDimension();this._element.style[e]=`${this._element.getBoundingClientRect()[e]}px`,Je(this._element),this._element.classList.add(tE),this._element.classList.remove(te,ot);for(const n of this._triggerArray){const i=j.getElementFromSelector(n);i&&!this._isShown(i)&&this._addAriaAndCollapsedClass([n],!1)}this._isTransitioning=!0;const t=()=>{this._isTransitioning=!1,this._element.classList.remove(tE),this._element.classList.add(te),O.trigger(this._element,Is)};this._element.style[e]="",this._queueCallback(t,this._element,!0)}_isShown(x=this._element){return x.classList.contains(ot)}_configAfterMerge(x){return x.toggle=!!x.toggle,x.parent=mx(x.parent),x}_getDimension(){return this._element.classList.contains(Ms)?Us:Ps}_initializeChildren(){if(!this._config.parent)return;const x=this._getFirstLevelChildren(Vt);for(const e of x){const t=j.getElementFromSelector(e);t&&this._addAriaAndCollapsedClass([e],this._isShown(t))}}_getFirstLevelChildren(x){const e=j.find(Rs,this._config.parent);return j.find(x,this._config.parent).filter(t=>!e.includes(t))}_addAriaAndCollapsedClass(x,e){if(x.length)for(const t of x)t.classList.toggle(Ns,!e),t.setAttribute("aria-expanded",e)}static jQueryInterface(x){const e={};return typeof x=="string"&&/show|hide/.test(x)&&(e.toggle=!1),this.each(function(){const t=Ne.getOrCreateInstance(this,e);if(typeof x=="string"){if(typeof t[x]>"u")throw new TypeError(`No method named "${x}"`);t[x]()}})}}O.on(document,Ls,Vt,function(E){(E.target.tagName==="A"||E.delegateTarget&&E.delegateTarget.tagName==="A")&&E.preventDefault();for(const x of j.getMultipleElementsFromSelector(this))Ne.getOrCreateInstance(x,{toggle:!1}).toggle()});U0(Ne);const sn="dropdown",Vs="bs.dropdown",Vx=`.${Vs}`,b8=".data-api",Hs="Escape",Bn="Tab",qs="ArrowUp",on="ArrowDown",Ks=2,Ys=`hide${Vx}`,Js=`hidden${Vx}`,Gs=`show${Vx}`,Zs=`shown${Vx}`,U5=`click${Vx}${b8}`,P5=`keydown${Vx}${b8}`,Xs=`keyup${Vx}${b8}`,ee="show",zs="dropup",Qs="dropend",xB="dropstart",eB="dropup-center",EB="dropdown-center",Lx='[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',tB=`${Lx}.${ee}`,mE=".dropdown-menu",nB=".navbar",iB=".navbar-nav",rB=".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",AB=R0()?"top-end":"top-start",sB=R0()?"top-start":"top-end",BB=R0()?"bottom-end":"bottom-start",oB=R0()?"bottom-start":"bottom-end",aB=R0()?"left-start":"right-start",lB=R0()?"right-start":"left-start",cB="top",fB="bottom",uB={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},dB={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class Z0 extends q0{constructor(x,e){super(x,e),this._popper=null,this._parent=this._element.parentNode,this._menu=j.next(this._element,mE)[0]||j.prev(this._element,mE)[0]||j.findOne(mE,this._parent),this._inNavbar=this._detectNavbar()}static get Default(){return uB}static get DefaultType(){return dB}static get NAME(){return sn}toggle(){return this._isShown()?this.hide():this.show()}show(){if(gx(this._element)||this._isShown())return;const x={relatedTarget:this._element};if(!O.trigger(this._element,Gs,x).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(iB))for(const t of[].concat(...document.body.children))O.on(t,"mouseover",yE);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(ee),this._element.classList.add(ee),O.trigger(this._element,Zs,x)}}hide(){if(gx(this._element)||!this._isShown())return;const x={relatedTarget:this._element};this._completeHide(x)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(x){if(!O.trigger(this._element,Ys,x).defaultPrevented){if("ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))O.off(t,"mouseover",yE);this._popper&&this._popper.destroy(),this._menu.classList.remove(ee),this._element.classList.remove(ee),this._element.setAttribute("aria-expanded","false"),ix.removeDataAttribute(this._menu,"popper"),O.trigger(this._element,Js,x)}}_getConfig(x){if(x=super._getConfig(x),typeof x.reference=="object"&&!nx(x.reference)&&typeof x.reference.getBoundingClientRect!="function")throw new TypeError(`${sn.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return x}_createPopper(){if(typeof p5>"u")throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let x=this._element;this._config.reference==="parent"?x=this._parent:nx(this._config.reference)?x=mx(this._config.reference):typeof this._config.reference=="object"&&(x=this._config.reference);const e=this._getPopperConfig();this._popper=g8(x,this._menu,e)}_isShown(){return this._menu.classList.contains(ee)}_getPlacement(){const x=this._parent;if(x.classList.contains(Qs))return aB;if(x.classList.contains(xB))return lB;if(x.classList.contains(eB))return cB;if(x.classList.contains(EB))return fB;const e=getComputedStyle(this._menu).getPropertyValue("--bs-position").trim()==="end";return x.classList.contains(zs)?e?sB:AB:e?oB:BB}_detectNavbar(){return this._element.closest(nB)!==null}_getOffset(){const{offset:x}=this._config;return typeof x=="string"?x.split(",").map(e=>Number.parseInt(e,10)):typeof x=="function"?e=>x(e,this._element):x}_getPopperConfig(){const x={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||this._config.display==="static")&&(ix.setDataAttribute(this._menu,"popper","static"),x.modifiers=[{name:"applyStyles",enabled:!1}]),{...x,...g0(this._config.popperConfig,[x])}}_selectMenuItem({key:x,target:e}){const t=j.find(rB,this._menu).filter(n=>Fe(n));t.length&&_8(t,e,x===on,!t.includes(e)).focus()}static jQueryInterface(x){return this.each(function(){const e=Z0.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof e[x]>"u")throw new TypeError(`No method named "${x}"`);e[x]()}})}static clearMenus(x){if(x.button===Ks||x.type==="keyup"&&x.key!==Bn)return;const e=j.find(tB);for(const t of e){const n=Z0.getInstance(t);if(!n||n._config.autoClose===!1)continue;const i=x.composedPath(),r=i.includes(n._menu);if(i.includes(n._element)||n._config.autoClose==="inside"&&!r||n._config.autoClose==="outside"&&r||n._menu.contains(x.target)&&(x.type==="keyup"&&x.key===Bn||/input|select|option|textarea|form/i.test(x.target.tagName)))continue;const A={relatedTarget:n._element};x.type==="click"&&(A.clickEvent=x),n._completeHide(A)}}static dataApiKeydownHandler(x){const e=/input|textarea/i.test(x.target.tagName),t=x.key===Hs,n=[qs,on].includes(x.key);if(!n&&!t||e&&!t)return;x.preventDefault();const i=this.matches(Lx)?this:j.prev(this,Lx)[0]||j.next(this,Lx)[0]||j.findOne(Lx,x.delegateTarget.parentNode),r=Z0.getOrCreateInstance(i);if(n){x.stopPropagation(),r.show(),r._selectMenuItem(x);return}r._isShown()&&(x.stopPropagation(),r.hide(),i.focus())}}O.on(document,P5,Lx,Z0.dataApiKeydownHandler);O.on(document,P5,mE,Z0.dataApiKeydownHandler);O.on(document,U5,Z0.clearMenus);O.on(document,Xs,Z0.clearMenus);O.on(document,U5,Lx,function(E){E.preventDefault(),Z0.getOrCreateInstance(this).toggle()});U0(Z0);const $5="backdrop",CB="fade",an="show",ln=`mousedown.bs.${$5}`,FB={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},hB={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class j5 extends Ge{constructor(x){super(),this._config=this._getConfig(x),this._isAppended=!1,this._element=null}static get Default(){return FB}static get DefaultType(){return hB}static get NAME(){return $5}show(x){if(!this._config.isVisible){g0(x);return}this._append();const e=this._getElement();this._config.isAnimated&&Je(e),e.classList.add(an),this._emulateAnimation(()=>{g0(x)})}hide(x){if(!this._config.isVisible){g0(x);return}this._getElement().classList.remove(an),this._emulateAnimation(()=>{this.dispose(),g0(x)})}dispose(){this._isAppended&&(O.off(this._element,ln),this._element.remove(),this._isAppended=!1)}_getElement(){if(!this._element){const x=document.createElement("div");x.className=this._config.className,this._config.isAnimated&&x.classList.add(CB),this._element=x}return this._element}_configAfterMerge(x){return x.rootElement=mx(x.rootElement),x}_append(){if(this._isAppended)return;const x=this._getElement();this._config.rootElement.append(x),O.on(x,ln,()=>{g0(this._config.clickCallback)}),this._isAppended=!0}_emulateAnimation(x){b5(x,this._getElement(),this._config.isAnimated)}}const DB="focustrap",pB="bs.focustrap",SE=`.${pB}`,mB=`focusin${SE}`,gB=`keydown.tab${SE}`,_B="Tab",vB="forward",cn="backward",bB={autofocus:!0,trapElement:null},wB={autofocus:"boolean",trapElement:"element"};class W5 extends Ge{constructor(x){super(),this._config=this._getConfig(x),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return bB}static get DefaultType(){return wB}static get NAME(){return DB}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),O.off(document,SE),O.on(document,mB,x=>this._handleFocusin(x)),O.on(document,gB,x=>this._handleKeydown(x)),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,O.off(document,SE))}_handleFocusin(x){const{trapElement:e}=this._config;if(x.target===document||x.target===e||e.contains(x.target))return;const t=j.focusableChildren(e);t.length===0?e.focus():this._lastTabNavDirection===cn?t[t.length-1].focus():t[0].focus()}_handleKeydown(x){x.key===_B&&(this._lastTabNavDirection=x.shiftKey?cn:vB)}}const fn=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",un=".sticky-top",nE="padding-right",dn="margin-right";class Ht{constructor(){this._element=document.body}getWidth(){const x=document.documentElement.clientWidth;return Math.abs(window.innerWidth-x)}hide(){const x=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,nE,e=>e+x),this._setElementAttributes(fn,nE,e=>e+x),this._setElementAttributes(un,dn,e=>e-x)}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,nE),this._resetElementAttributes(fn,nE),this._resetElementAttributes(un,dn)}isOverflowing(){return this.getWidth()>0}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(x,e,t){const n=this.getWidth(),i=r=>{if(r!==this._element&&window.innerWidth>r.clientWidth+n)return;this._saveInitialAttribute(r,e);const A=window.getComputedStyle(r).getPropertyValue(e);r.style.setProperty(e,`${t(Number.parseFloat(A))}px`)};this._applyManipulationCallback(x,i)}_saveInitialAttribute(x,e){const t=x.style.getPropertyValue(e);t&&ix.setDataAttribute(x,e,t)}_resetElementAttributes(x,e){const t=n=>{const i=ix.getDataAttribute(n,e);if(i===null){n.style.removeProperty(e);return}ix.removeDataAttribute(n,e),n.style.setProperty(e,i)};this._applyManipulationCallback(x,t)}_applyManipulationCallback(x,e){if(nx(x)){e(x);return}for(const t of j.find(x,this._element))e(t)}}const yB="modal",TB="bs.modal",M0=`.${TB}`,SB=".data-api",kB="Escape",OB=`hide${M0}`,IB=`hidePrevented${M0}`,V5=`hidden${M0}`,H5=`show${M0}`,LB=`shown${M0}`,NB=`resize${M0}`,RB=`click.dismiss${M0}`,MB=`mousedown.dismiss${M0}`,UB=`keydown.dismiss${M0}`,PB=`click${M0}${SB}`,Cn="modal-open",$B="fade",Fn="show",at="modal-static",jB=".modal.show",WB=".modal-dialog",VB=".modal-body",HB='[data-bs-toggle="modal"]',qB={backdrop:!0,focus:!0,keyboard:!0},KB={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class ce extends q0{constructor(x,e){super(x,e),this._dialog=j.findOne(WB,this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new Ht,this._addEventListeners()}static get Default(){return qB}static get DefaultType(){return KB}static get NAME(){return yB}toggle(x){return this._isShown?this.hide():this.show(x)}show(x){this._isShown||this._isTransitioning||O.trigger(this._element,H5,{relatedTarget:x}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(Cn),this._adjustDialog(),this._backdrop.show(()=>this._showElement(x)))}hide(){!this._isShown||this._isTransitioning||O.trigger(this._element,OB).defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove(Fn),this._queueCallback(()=>this._hideModal(),this._element,this._isAnimated()))}dispose(){O.off(window,M0),O.off(this._dialog,M0),this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new j5({isVisible:!!this._config.backdrop,isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new W5({trapElement:this._element})}_showElement(x){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;const e=j.findOne(VB,this._dialog);e&&(e.scrollTop=0),Je(this._element),this._element.classList.add(Fn);const t=()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,O.trigger(this._element,LB,{relatedTarget:x})};this._queueCallback(t,this._dialog,this._isAnimated())}_addEventListeners(){O.on(this._element,UB,x=>{if(x.key===kB){if(this._config.keyboard){this.hide();return}this._triggerBackdropTransition()}}),O.on(window,NB,()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()}),O.on(this._element,MB,x=>{O.one(this._element,RB,e=>{if(!(this._element!==x.target||this._element!==e.target)){if(this._config.backdrop==="static"){this._triggerBackdropTransition();return}this._config.backdrop&&this.hide()}})})}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide(()=>{document.body.classList.remove(Cn),this._resetAdjustments(),this._scrollBar.reset(),O.trigger(this._element,V5)})}_isAnimated(){return this._element.classList.contains($B)}_triggerBackdropTransition(){if(O.trigger(this._element,IB).defaultPrevented)return;const e=this._element.scrollHeight>document.documentElement.clientHeight,t=this._element.style.overflowY;t==="hidden"||this._element.classList.contains(at)||(e||(this._element.style.overflowY="hidden"),this._element.classList.add(at),this._queueCallback(()=>{this._element.classList.remove(at),this._queueCallback(()=>{this._element.style.overflowY=t},this._dialog)},this._dialog),this._element.focus())}_adjustDialog(){const x=this._element.scrollHeight>document.documentElement.clientHeight,e=this._scrollBar.getWidth(),t=e>0;if(t&&!x){const n=R0()?"paddingLeft":"paddingRight";this._element.style[n]=`${e}px`}if(!t&&x){const n=R0()?"paddingRight":"paddingLeft";this._element.style[n]=`${e}px`}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(x,e){return this.each(function(){const t=ce.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof t[x]>"u")throw new TypeError(`No method named "${x}"`);t[x](e)}})}}O.on(document,PB,HB,function(E){const x=j.getElementFromSelector(this);["A","AREA"].includes(this.tagName)&&E.preventDefault(),O.one(x,H5,n=>{n.defaultPrevented||O.one(x,V5,()=>{Fe(this)&&this.focus()})});const e=j.findOne(jB);e&&ce.getInstance(e).hide(),ce.getOrCreateInstance(x).toggle(this)});KE(ce);U0(ce);const YB="offcanvas",JB="bs.offcanvas",Bx=`.${JB}`,q5=".data-api",GB=`load${Bx}${q5}`,ZB="Escape",hn="show",Dn="showing",pn="hiding",XB="offcanvas-backdrop",K5=".offcanvas.show",zB=`show${Bx}`,QB=`shown${Bx}`,x3=`hide${Bx}`,mn=`hidePrevented${Bx}`,Y5=`hidden${Bx}`,e3=`resize${Bx}`,E3=`click${Bx}${q5}`,t3=`keydown.dismiss${Bx}`,n3='[data-bs-toggle="offcanvas"]',i3={backdrop:!0,keyboard:!0,scroll:!1},r3={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class _x extends q0{constructor(x,e){super(x,e),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return i3}static get DefaultType(){return r3}static get NAME(){return YB}toggle(x){return this._isShown?this.hide():this.show(x)}show(x){if(this._isShown||O.trigger(this._element,zB,{relatedTarget:x}).defaultPrevented)return;this._isShown=!0,this._backdrop.show(),this._config.scroll||new Ht().hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(Dn);const t=()=>{(!this._config.scroll||this._config.backdrop)&&this._focustrap.activate(),this._element.classList.add(hn),this._element.classList.remove(Dn),O.trigger(this._element,QB,{relatedTarget:x})};this._queueCallback(t,this._element,!0)}hide(){if(!this._isShown||O.trigger(this._element,x3).defaultPrevented)return;this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add(pn),this._backdrop.hide();const e=()=>{this._element.classList.remove(hn,pn),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||new Ht().reset(),O.trigger(this._element,Y5)};this._queueCallback(e,this._element,!0)}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){const x=()=>{if(this._config.backdrop==="static"){O.trigger(this._element,mn);return}this.hide()},e=!!this._config.backdrop;return new j5({className:XB,isVisible:e,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:e?x:null})}_initializeFocusTrap(){return new W5({trapElement:this._element})}_addEventListeners(){O.on(this._element,t3,x=>{if(x.key===ZB){if(this._config.keyboard){this.hide();return}O.trigger(this._element,mn)}})}static jQueryInterface(x){return this.each(function(){const e=_x.getOrCreateInstance(this,x);if(typeof x=="string"){if(e[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);e[x](this)}})}}O.on(document,E3,n3,function(E){const x=j.getElementFromSelector(this);if(["A","AREA"].includes(this.tagName)&&E.preventDefault(),gx(this))return;O.one(x,Y5,()=>{Fe(this)&&this.focus()});const e=j.findOne(K5);e&&e!==x&&_x.getInstance(e).hide(),_x.getOrCreateInstance(x).toggle(this)});O.on(window,GB,()=>{for(const E of j.find(K5))_x.getOrCreateInstance(E).show()});O.on(window,e3,()=>{for(const E of j.find("[aria-modal][class*=show][class*=offcanvas-]"))getComputedStyle(E).position!=="fixed"&&_x.getOrCreateInstance(E).hide()});KE(_x);U0(_x);const A3=/^aria-[\w-]*$/i,J5={"*":["class","dir","id","lang","role",A3],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},s3=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),B3=/^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i,o3=(E,x)=>{const e=E.nodeName.toLowerCase();return x.includes(e)?s3.has(e)?!!B3.test(E.nodeValue):!0:x.filter(t=>t instanceof RegExp).some(t=>t.test(e))};function a3(E,x,e){if(!E.length)return E;if(e&&typeof e=="function")return e(E);const n=new window.DOMParser().parseFromString(E,"text/html"),i=[].concat(...n.body.querySelectorAll("*"));for(const r of i){const A=r.nodeName.toLowerCase();if(!Object.keys(x).includes(A)){r.remove();continue}const s=[].concat(...r.attributes),B=[].concat(x["*"]||[],x[A]||[]);for(const o of s)o3(o,B)||r.removeAttribute(o.nodeName)}return n.body.innerHTML}const l3="TemplateFactory",c3={allowList:J5,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},f3={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},u3={entry:"(string|element|function|null)",selector:"(string|element)"};class d3 extends Ge{constructor(x){super(),this._config=this._getConfig(x)}static get Default(){return c3}static get DefaultType(){return f3}static get NAME(){return l3}getContent(){return Object.values(this._config.content).map(x=>this._resolvePossibleFunction(x)).filter(Boolean)}hasContent(){return this.getContent().length>0}changeContent(x){return this._checkContent(x),this._config.content={...this._config.content,...x},this}toHtml(){const x=document.createElement("div");x.innerHTML=this._maybeSanitize(this._config.template);for(const[n,i]of Object.entries(this._config.content))this._setContent(x,i,n);const e=x.children[0],t=this._resolvePossibleFunction(this._config.extraClass);return t&&e.classList.add(...t.split(" ")),e}_typeCheckConfig(x){super._typeCheckConfig(x),this._checkContent(x.content)}_checkContent(x){for(const[e,t]of Object.entries(x))super._typeCheckConfig({selector:e,entry:t},u3)}_setContent(x,e,t){const n=j.findOne(t,x);if(n){if(e=this._resolvePossibleFunction(e),!e){n.remove();return}if(nx(e)){this._putElementInTemplate(mx(e),n);return}if(this._config.html){n.innerHTML=this._maybeSanitize(e);return}n.textContent=e}}_maybeSanitize(x){return this._config.sanitize?a3(x,this._config.allowList,this._config.sanitizeFn):x}_resolvePossibleFunction(x){return g0(x,[this])}_putElementInTemplate(x,e){if(this._config.html){e.innerHTML="",e.append(x);return}e.textContent=x.textContent}}const C3="tooltip",F3=new Set(["sanitize","allowList","sanitizeFn"]),lt="fade",h3="modal",iE="show",D3=".tooltip-inner",gn=`.${h3}`,_n="hide.bs.modal",be="hover",ct="focus",p3="click",m3="manual",g3="hide",_3="hidden",v3="show",b3="shown",w3="inserted",y3="click",T3="focusin",S3="focusout",k3="mouseenter",O3="mouseleave",I3={AUTO:"auto",TOP:"top",RIGHT:R0()?"left":"right",BOTTOM:"bottom",LEFT:R0()?"right":"left"},L3={allowList:J5,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,6],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:"",trigger:"hover focus"},N3={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class Hx extends q0{constructor(x,e){if(typeof p5>"u")throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");super(x,e),this._isEnabled=!0,this._timeout=0,this._isHovered=null,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners(),this._config.selector||this._fixTitle()}static get Default(){return L3}static get DefaultType(){return N3}static get NAME(){return C3}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(){if(this._isEnabled){if(this._activeTrigger.click=!this._activeTrigger.click,this._isShown()){this._leave();return}this._enter()}}dispose(){clearTimeout(this._timeout),O.off(this._element.closest(gn),_n,this._hideModalHandler),this._element.getAttribute("data-bs-original-title")&&this._element.setAttribute("title",this._element.getAttribute("data-bs-original-title")),this._disposePopper(),super.dispose()}show(){if(this._element.style.display==="none")throw new Error("Please use show on visible elements");if(!(this._isWithContent()&&this._isEnabled))return;const x=O.trigger(this._element,this.constructor.eventName(v3)),t=(_5(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(x.defaultPrevented||!t)return;this._disposePopper();const n=this._getTipElement();this._element.setAttribute("aria-describedby",n.getAttribute("id"));const{container:i}=this._config;if(this._element.ownerDocument.documentElement.contains(this.tip)||(i.append(n),O.trigger(this._element,this.constructor.eventName(w3))),this._popper=this._createPopper(n),n.classList.add(iE),"ontouchstart"in document.documentElement)for(const A of[].concat(...document.body.children))O.on(A,"mouseover",yE);const r=()=>{O.trigger(this._element,this.constructor.eventName(b3)),this._isHovered===!1&&this._leave(),this._isHovered=!1};this._queueCallback(r,this.tip,this._isAnimated())}hide(){if(!this._isShown()||O.trigger(this._element,this.constructor.eventName(g3)).defaultPrevented)return;if(this._getTipElement().classList.remove(iE),"ontouchstart"in document.documentElement)for(const n of[].concat(...document.body.children))O.off(n,"mouseover",yE);this._activeTrigger[p3]=!1,this._activeTrigger[ct]=!1,this._activeTrigger[be]=!1,this._isHovered=null;const t=()=>{this._isWithActiveTrigger()||(this._isHovered||this._disposePopper(),this._element.removeAttribute("aria-describedby"),O.trigger(this._element,this.constructor.eventName(_3)))};this._queueCallback(t,this.tip,this._isAnimated())}update(){this._popper&&this._popper.update()}_isWithContent(){return!!this._getTitle()}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(x){const e=this._getTemplateFactory(x).toHtml();if(!e)return null;e.classList.remove(lt,iE),e.classList.add(`bs-${this.constructor.NAME}-auto`);const t=pA(this.constructor.NAME).toString();return e.setAttribute("id",t),this._isAnimated()&&e.classList.add(lt),e}setContent(x){this._newContent=x,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(x){return this._templateFactory?this._templateFactory.changeContent(x):this._templateFactory=new d3({...this._config,content:x,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{[D3]:this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._element.getAttribute("data-bs-original-title")}_initializeOnDelegatedTarget(x){return this.constructor.getOrCreateInstance(x.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains(lt)}_isShown(){return this.tip&&this.tip.classList.contains(iE)}_createPopper(x){const e=g0(this._config.placement,[this,x,this._element]),t=I3[e.toUpperCase()];return g8(this._element,x,this._getPopperConfig(t))}_getOffset(){const{offset:x}=this._config;return typeof x=="string"?x.split(",").map(e=>Number.parseInt(e,10)):typeof x=="function"?e=>x(e,this._element):x}_resolvePossibleFunction(x){return g0(x,[this._element])}_getPopperConfig(x){const e={placement:x,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:t=>{this._getTipElement().setAttribute("data-popper-placement",t.state.placement)}}]};return{...e,...g0(this._config.popperConfig,[e])}}_setListeners(){const x=this._config.trigger.split(" ");for(const e of x)if(e==="click")O.on(this._element,this.constructor.eventName(y3),this._config.selector,t=>{this._initializeOnDelegatedTarget(t).toggle()});else if(e!==m3){const t=e===be?this.constructor.eventName(k3):this.constructor.eventName(T3),n=e===be?this.constructor.eventName(O3):this.constructor.eventName(S3);O.on(this._element,t,this._config.selector,i=>{const r=this._initializeOnDelegatedTarget(i);r._activeTrigger[i.type==="focusin"?ct:be]=!0,r._enter()}),O.on(this._element,n,this._config.selector,i=>{const r=this._initializeOnDelegatedTarget(i);r._activeTrigger[i.type==="focusout"?ct:be]=r._element.contains(i.relatedTarget),r._leave()})}this._hideModalHandler=()=>{this._element&&this.hide()},O.on(this._element.closest(gn),_n,this._hideModalHandler)}_fixTitle(){const x=this._element.getAttribute("title");x&&(!this._element.getAttribute("aria-label")&&!this._element.textContent.trim()&&this._element.setAttribute("aria-label",x),this._element.setAttribute("data-bs-original-title",x),this._element.removeAttribute("title"))}_enter(){if(this._isShown()||this._isHovered){this._isHovered=!0;return}this._isHovered=!0,this._setTimeout(()=>{this._isHovered&&this.show()},this._config.delay.show)}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout(()=>{this._isHovered||this.hide()},this._config.delay.hide))}_setTimeout(x,e){clearTimeout(this._timeout),this._timeout=setTimeout(x,e)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(x){const e=ix.getDataAttributes(this._element);for(const t of Object.keys(e))F3.has(t)&&delete e[t];return x={...e,...typeof x=="object"&&x?x:{}},x=this._mergeConfigObj(x),x=this._configAfterMerge(x),this._typeCheckConfig(x),x}_configAfterMerge(x){return x.container=x.container===!1?document.body:mx(x.container),typeof x.delay=="number"&&(x.delay={show:x.delay,hide:x.delay}),typeof x.title=="number"&&(x.title=x.title.toString()),typeof x.content=="number"&&(x.content=x.content.toString()),x}_getDelegateConfig(){const x={};for(const[e,t]of Object.entries(this._config))this.constructor.Default[e]!==t&&(x[e]=t);return x.selector=!1,x.trigger="manual",x}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null),this.tip&&(this.tip.remove(),this.tip=null)}static jQueryInterface(x){return this.each(function(){const e=Hx.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof e[x]>"u")throw new TypeError(`No method named "${x}"`);e[x]()}})}}U0(Hx);const R3="popover",M3=".popover-header",U3=".popover-body",P3={...Hx.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},$3={...Hx.DefaultType,content:"(null|string|element|function)"};class w8 extends Hx{static get Default(){return P3}static get DefaultType(){return $3}static get NAME(){return R3}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{[M3]:this._getTitle(),[U3]:this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(x){return this.each(function(){const e=w8.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof e[x]>"u")throw new TypeError(`No method named "${x}"`);e[x]()}})}}U0(w8);const j3="scrollspy",W3="bs.scrollspy",y8=`.${W3}`,V3=".data-api",H3=`activate${y8}`,vn=`click${y8}`,q3=`load${y8}${V3}`,K3="dropdown-item",Gx="active",Y3='[data-bs-spy="scroll"]',ft="[href]",J3=".nav, .list-group",bn=".nav-link",G3=".nav-item",Z3=".list-group-item",X3=`${bn}, ${G3} > ${bn}, ${Z3}`,z3=".dropdown",Q3=".dropdown-toggle",x4={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},e4={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class GE extends q0{constructor(x,e){super(x,e),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement=getComputedStyle(this._element).overflowY==="visible"?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return x4}static get DefaultType(){return e4}static get NAME(){return j3}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const x of this._observableSections.values())this._observer.observe(x)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(x){return x.target=mx(x.target)||document.body,x.rootMargin=x.offset?`${x.offset}px 0px -30%`:x.rootMargin,typeof x.threshold=="string"&&(x.threshold=x.threshold.split(",").map(e=>Number.parseFloat(e))),x}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(O.off(this._config.target,vn),O.on(this._config.target,vn,ft,x=>{const e=this._observableSections.get(x.target.hash);if(e){x.preventDefault();const t=this._rootElement||window,n=e.offsetTop-this._element.offsetTop;if(t.scrollTo){t.scrollTo({top:n,behavior:"smooth"});return}t.scrollTop=n}}))}_getNewObserver(){const x={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver(e=>this._observerCallback(e),x)}_observerCallback(x){const e=r=>this._targetLinks.get(`#${r.target.id}`),t=r=>{this._previousScrollData.visibleEntryTop=r.target.offsetTop,this._process(e(r))},n=(this._rootElement||document.documentElement).scrollTop,i=n>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=n;for(const r of x){if(!r.isIntersecting){this._activeTarget=null,this._clearActiveClass(e(r));continue}const A=r.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(i&&A){if(t(r),!n)return;continue}!i&&!A&&t(r)}}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const x=j.find(ft,this._config.target);for(const e of x){if(!e.hash||gx(e))continue;const t=j.findOne(decodeURI(e.hash),this._element);Fe(t)&&(this._targetLinks.set(decodeURI(e.hash),e),this._observableSections.set(e.hash,t))}}_process(x){this._activeTarget!==x&&(this._clearActiveClass(this._config.target),this._activeTarget=x,x.classList.add(Gx),this._activateParents(x),O.trigger(this._element,H3,{relatedTarget:x}))}_activateParents(x){if(x.classList.contains(K3)){j.findOne(Q3,x.closest(z3)).classList.add(Gx);return}for(const e of j.parents(x,J3))for(const t of j.prev(e,X3))t.classList.add(Gx)}_clearActiveClass(x){x.classList.remove(Gx);const e=j.find(`${ft}.${Gx}`,x);for(const t of e)t.classList.remove(Gx)}static jQueryInterface(x){return this.each(function(){const e=GE.getOrCreateInstance(this,x);if(typeof x=="string"){if(e[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);e[x]()}})}}O.on(window,q3,()=>{for(const E of j.find(Y3))GE.getOrCreateInstance(E)});U0(GE);const E4="tab",t4="bs.tab",qx=`.${t4}`,n4=`hide${qx}`,i4=`hidden${qx}`,r4=`show${qx}`,A4=`shown${qx}`,s4=`click${qx}`,B4=`keydown${qx}`,o4=`load${qx}`,a4="ArrowLeft",wn="ArrowRight",l4="ArrowUp",yn="ArrowDown",ut="Home",Tn="End",Nx="active",Sn="fade",dt="show",c4="dropdown",G5=".dropdown-toggle",f4=".dropdown-menu",Ct=`:not(${G5})`,u4='.list-group, .nav, [role="tablist"]',d4=".nav-item, .list-group-item",C4=`.nav-link${Ct}, .list-group-item${Ct}, [role="tab"]${Ct}`,Z5='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',Ft=`${C4}, ${Z5}`,F4=`.${Nx}[data-bs-toggle="tab"], .${Nx}[data-bs-toggle="pill"], .${Nx}[data-bs-toggle="list"]`;class $x extends q0{constructor(x){super(x),this._parent=this._element.closest(u4),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),O.on(this._element,B4,e=>this._keydown(e)))}static get NAME(){return E4}show(){const x=this._element;if(this._elemIsActive(x))return;const e=this._getActiveElem(),t=e?O.trigger(e,n4,{relatedTarget:x}):null;O.trigger(x,r4,{relatedTarget:e}).defaultPrevented||t&&t.defaultPrevented||(this._deactivate(e,x),this._activate(x,e))}_activate(x,e){if(!x)return;x.classList.add(Nx),this._activate(j.getElementFromSelector(x));const t=()=>{if(x.getAttribute("role")!=="tab"){x.classList.add(dt);return}x.removeAttribute("tabindex"),x.setAttribute("aria-selected",!0),this._toggleDropDown(x,!0),O.trigger(x,A4,{relatedTarget:e})};this._queueCallback(t,x,x.classList.contains(Sn))}_deactivate(x,e){if(!x)return;x.classList.remove(Nx),x.blur(),this._deactivate(j.getElementFromSelector(x));const t=()=>{if(x.getAttribute("role")!=="tab"){x.classList.remove(dt);return}x.setAttribute("aria-selected",!1),x.setAttribute("tabindex","-1"),this._toggleDropDown(x,!1),O.trigger(x,i4,{relatedTarget:e})};this._queueCallback(t,x,x.classList.contains(Sn))}_keydown(x){if(![a4,wn,l4,yn,ut,Tn].includes(x.key))return;x.stopPropagation(),x.preventDefault();const e=this._getChildren().filter(n=>!gx(n));let t;if([ut,Tn].includes(x.key))t=e[x.key===ut?0:e.length-1];else{const n=[wn,yn].includes(x.key);t=_8(e,x.target,n,!0)}t&&(t.focus({preventScroll:!0}),$x.getOrCreateInstance(t).show())}_getChildren(){return j.find(Ft,this._parent)}_getActiveElem(){return this._getChildren().find(x=>this._elemIsActive(x))||null}_setInitialAttributes(x,e){this._setAttributeIfNotExists(x,"role","tablist");for(const t of e)this._setInitialAttributesOnChild(t)}_setInitialAttributesOnChild(x){x=this._getInnerElement(x);const e=this._elemIsActive(x),t=this._getOuterElement(x);x.setAttribute("aria-selected",e),t!==x&&this._setAttributeIfNotExists(t,"role","presentation"),e||x.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(x,"role","tab"),this._setInitialAttributesOnTargetPanel(x)}_setInitialAttributesOnTargetPanel(x){const e=j.getElementFromSelector(x);e&&(this._setAttributeIfNotExists(e,"role","tabpanel"),x.id&&this._setAttributeIfNotExists(e,"aria-labelledby",`${x.id}`))}_toggleDropDown(x,e){const t=this._getOuterElement(x);if(!t.classList.contains(c4))return;const n=(i,r)=>{const A=j.findOne(i,t);A&&A.classList.toggle(r,e)};n(G5,Nx),n(f4,dt),t.setAttribute("aria-expanded",e)}_setAttributeIfNotExists(x,e,t){x.hasAttribute(e)||x.setAttribute(e,t)}_elemIsActive(x){return x.classList.contains(Nx)}_getInnerElement(x){return x.matches(Ft)?x:j.findOne(Ft,x)}_getOuterElement(x){return x.closest(d4)||x}static jQueryInterface(x){return this.each(function(){const e=$x.getOrCreateInstance(this);if(typeof x=="string"){if(e[x]===void 0||x.startsWith("_")||x==="constructor")throw new TypeError(`No method named "${x}"`);e[x]()}})}}O.on(document,s4,Z5,function(E){["A","AREA"].includes(this.tagName)&&E.preventDefault(),!gx(this)&&$x.getOrCreateInstance(this).show()});O.on(window,o4,()=>{for(const E of j.find(F4))$x.getOrCreateInstance(E)});U0($x);const h4="toast",D4="bs.toast",yx=`.${D4}`,p4=`mouseover${yx}`,m4=`mouseout${yx}`,g4=`focusin${yx}`,_4=`focusout${yx}`,v4=`hide${yx}`,b4=`hidden${yx}`,w4=`show${yx}`,y4=`shown${yx}`,T4="fade",kn="hide",rE="show",AE="showing",S4={animation:"boolean",autohide:"boolean",delay:"number"},k4={animation:!0,autohide:!0,delay:5e3};class ZE extends q0{constructor(x,e){super(x,e),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return k4}static get DefaultType(){return S4}static get NAME(){return h4}show(){if(O.trigger(this._element,w4).defaultPrevented)return;this._clearTimeout(),this._config.animation&&this._element.classList.add(T4);const e=()=>{this._element.classList.remove(AE),O.trigger(this._element,y4),this._maybeScheduleHide()};this._element.classList.remove(kn),Je(this._element),this._element.classList.add(rE,AE),this._queueCallback(e,this._element,this._config.animation)}hide(){if(!this.isShown()||O.trigger(this._element,v4).defaultPrevented)return;const e=()=>{this._element.classList.add(kn),this._element.classList.remove(AE,rE),O.trigger(this._element,b4)};this._element.classList.add(AE),this._queueCallback(e,this._element,this._config.animation)}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(rE),super.dispose()}isShown(){return this._element.classList.contains(rE)}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout(()=>{this.hide()},this._config.delay)))}_onInteraction(x,e){switch(x.type){case"mouseover":case"mouseout":{this._hasMouseInteraction=e;break}case"focusin":case"focusout":{this._hasKeyboardInteraction=e;break}}if(e){this._clearTimeout();return}const t=x.relatedTarget;this._element===t||this._element.contains(t)||this._maybeScheduleHide()}_setListeners(){O.on(this._element,p4,x=>this._onInteraction(x,!0)),O.on(this._element,m4,x=>this._onInteraction(x,!1)),O.on(this._element,g4,x=>this._onInteraction(x,!0)),O.on(this._element,_4,x=>this._onInteraction(x,!1))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(x){return this.each(function(){const e=ZE.getOrCreateInstance(this,x);if(typeof x=="string"){if(typeof e[x]>"u")throw new TypeError(`No method named "${x}"`);e[x](this)}})}}KE(ZE);U0(ZE);var X5={exports:{}};/*! streamsaver. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */(function(E){((x,e)=>{E.exports=e()})("streamSaver",()=>{const x=typeof window=="object"?window:this;x.HTMLElement;let e=null,t=!1;const n=h=>{try{h()}catch{}},i=x.WebStreamsPolyfill||{},r=x.isSecureContext;let A=/constructor/i.test(x.HTMLElement)||!!x.safari||!!x.WebKitPoint;const s=r||"MozAppearance"in document.documentElement.style?"iframe":"navigate",B={createWriteStream:F,WritableStream:x.WritableStream||i.WritableStream,supported:!0,version:{full:"2.0.5",major:2,minor:0,dot:5},mitm:"https://jimmywarting.github.io/StreamSaver.js/mitm.html?version=2.0.0"};function o(h){if(!h)throw new Error("meh");const l=document.createElement("iframe");return l.hidden=!0,l.src=h,l.loaded=!1,l.name="iframe",l.isIframe=!0,l.postMessage=(...c)=>l.contentWindow.postMessage(...c),l.addEventListener("load",()=>{l.loaded=!0},{once:!0}),document.body.appendChild(l),l}function a(h){const l="width=200,height=100",c=document.createDocumentFragment(),u={frame:x.open(h,"popup",l),loaded:!1,isIframe:!1,isPopup:!0,remove(){u.frame.close()},addEventListener(...d){c.addEventListener(...d)},dispatchEvent(...d){c.dispatchEvent(...d)},removeEventListener(...d){c.removeEventListener(...d)},postMessage(...d){u.frame.postMessage(...d)}},C=d=>{d.source===u.frame&&(u.loaded=!0,x.removeEventListener("message",C),u.dispatchEvent(new Event("load")))};return x.addEventListener("message",C),u}try{new Response(new ReadableStream),r&&!("serviceWorker"in navigator)&&(A=!0)}catch{A=!0}n(()=>{const{readable:h}=new TransformStream,l=new MessageChannel;l.port1.postMessage(h,[h]),l.port1.close(),l.port2.close(),t=!0,Object.defineProperty(B,"TransformStream",{configurable:!1,writable:!1,value:TransformStream})});function f(){e||(e=r?o(B.mitm):a(B.mitm))}function F(h,l,c){let u={size:null,pathname:null,writableStrategy:void 0,readableStrategy:void 0},C=0,d=null,m=null,g=null;if(Number.isFinite(l)?([c,l]=[l,c],u.size=c,u.writableStrategy=l):l&&l.highWaterMark?(u.size=c,u.writableStrategy=l):u=l||{},!A){f(),m=new MessageChannel,h=encodeURIComponent(h.replace(/\//g,":")).replace(/['()]/g,escape).replace(/\*/g,"%2A");const b={transferringReadable:t,pathname:u.pathname||Math.random().toString().slice(-6)+"/"+h,headers:{"Content-Type":"application/octet-stream; charset=utf-8","Content-Disposition":"attachment; filename*=UTF-8''"+h}};u.size&&(b.headers["Content-Length"]=u.size);const w=[b,"*",[m.port2]];if(t){const p=s==="iframe"?void 0:{transform(v,S){if(!(v instanceof Uint8Array))throw new TypeError("Can only write Uint8Arrays");C+=v.length,S.enqueue(v),d&&(location.href=d,d=null)},flush(){d&&(location.href=d)}};g=new B.TransformStream(p,u.writableStrategy,u.readableStrategy);const D=g.readable;m.port1.postMessage({readableStream:D},[D])}m.port1.onmessage=p=>{p.data.download?s==="navigate"?(e.remove(),e=null,C?location.href=p.data.download:d=p.data.download):(e.isPopup&&(e.remove(),e=null,s==="iframe"&&o(B.mitm)),o(p.data.download)):p.data.abort&&(_=[],m.port1.postMessage("abort"),m.port1.onmessage=null,m.port1.close(),m.port2.close(),m=null)},e.loaded?e.postMessage(...w):e.addEventListener("load",()=>{e.postMessage(...w)},{once:!0})}let _=[];return!A&&g&&g.writable||new B.WritableStream({write(b){if(!(b instanceof Uint8Array))throw new TypeError("Can only write Uint8Arrays");if(A){_.push(b);return}m.port1.postMessage(b),C+=b.length,d&&(location.href=d,d=null)},close(){if(A){const b=new Blob(_,{type:"application/octet-stream; charset=utf-8"}),w=document.createElement("a");w.href=URL.createObjectURL(b),w.download=h,w.click()}else m.port1.postMessage("end")},abort(){_=[],m.port1.postMessage("abort"),m.port1.onmessage=null,m.port1.close(),m.port2.close(),m=null}},u.writableStrategy)}return B})})(X5);var O4=X5.exports;const Re=15,qt=30,Kt=19,I4=29,kE=256,T8=kE+1+I4,On=2*T8+1,we=256,L4=7,In=16,Ln=17,Nn=18,ht=8*2,OE=-1,N4=1,sE=2,R4=0,Ee=0,Rn=1,M4=3,p0=4,W0=0,z5=1,BE=2,V0=-2,U4=-3,Zx=-5;function XE(E){return zE(E.map(([x,e])=>new Array(x).fill(e,0,x)))}function zE(E){return E.reduce((x,e)=>x.concat(Array.isArray(e)?zE(e):e),[])}const Mn=[0,1,2,3].concat(...XE([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function z(){const E=this;function x(n){const i=E.dyn_tree,r=E.stat_desc.static_tree,A=E.stat_desc.extra_bits,s=E.stat_desc.extra_base,B=E.stat_desc.max_length;let o,a,f,F,h,l,c=0;for(F=0;F<=Re;F++)n.bl_count[F]=0;for(i[n.heap[n.heap_max]*2+1]=0,o=n.heap_max+1;o<On;o++)a=n.heap[o],F=i[i[a*2+1]*2+1]+1,F>B&&(F=B,c++),i[a*2+1]=F,!(a>E.max_code)&&(n.bl_count[F]++,h=0,a>=s&&(h=A[a-s]),l=i[a*2],n.opt_len+=l*(F+h),r&&(n.static_len+=l*(r[a*2+1]+h)));if(c!==0){do{for(F=B-1;n.bl_count[F]===0;)F--;n.bl_count[F]--,n.bl_count[F+1]+=2,n.bl_count[B]--,c-=2}while(c>0);for(F=B;F!==0;F--)for(a=n.bl_count[F];a!==0;)f=n.heap[--o],!(f>E.max_code)&&(i[f*2+1]!=F&&(n.opt_len+=(F-i[f*2+1])*i[f*2],i[f*2+1]=F),a--)}}function e(n,i){let r=0;do r|=n&1,n>>>=1,r<<=1;while(--i>0);return r>>>1}function t(n,i,r){const A=[];let s=0,B,o,a;for(B=1;B<=Re;B++)A[B]=s=s+r[B-1]<<1;for(o=0;o<=i;o++)a=n[o*2+1],a!==0&&(n[o*2]=e(A[a]++,a))}E.build_tree=function(n){const i=E.dyn_tree,r=E.stat_desc.static_tree,A=E.stat_desc.elems;let s,B,o=-1,a;for(n.heap_len=0,n.heap_max=On,s=0;s<A;s++)i[s*2]!==0?(n.heap[++n.heap_len]=o=s,n.depth[s]=0):i[s*2+1]=0;for(;n.heap_len<2;)a=n.heap[++n.heap_len]=o<2?++o:0,i[a*2]=1,n.depth[a]=0,n.opt_len--,r&&(n.static_len-=r[a*2+1]);for(E.max_code=o,s=Math.floor(n.heap_len/2);s>=1;s--)n.pqdownheap(i,s);a=A;do s=n.heap[1],n.heap[1]=n.heap[n.heap_len--],n.pqdownheap(i,1),B=n.heap[1],n.heap[--n.heap_max]=s,n.heap[--n.heap_max]=B,i[a*2]=i[s*2]+i[B*2],n.depth[a]=Math.max(n.depth[s],n.depth[B])+1,i[s*2+1]=i[B*2+1]=a,n.heap[1]=a++,n.pqdownheap(i,1);while(n.heap_len>=2);n.heap[--n.heap_max]=n.heap[1],x(n),t(i,E.max_code,n.bl_count)}}z._length_code=[0,1,2,3,4,5,6,7].concat(...XE([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]]));z.base_length=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0];z.base_dist=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576];z.d_code=function(E){return E<256?Mn[E]:Mn[256+(E>>>7)]};z.extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];z.extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];z.extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];z.bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function a0(E,x,e,t,n){const i=this;i.static_tree=E,i.extra_bits=x,i.extra_base=e,i.elems=t,i.max_length=n}const P4=[12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,19,275,147,403,83,339,211,467,51,307,179,435,115,371,243,499,11,267,139,395,75,331,203,459,43,299,171,427,107,363,235,491,27,283,155,411,91,347,219,475,59,315,187,443,123,379,251,507,7,263,135,391,71,327,199,455,39,295,167,423,103,359,231,487,23,279,151,407,87,343,215,471,55,311,183,439,119,375,247,503,15,271,143,399,79,335,207,463,47,303,175,431,111,367,239,495,31,287,159,415,95,351,223,479,63,319,191,447,127,383,255,511,0,64,32,96,16,80,48,112,8,72,40,104,24,88,56,120,4,68,36,100,20,84,52,116,3,131,67,195,35,163,99,227],$4=XE([[144,8],[112,9],[24,7],[8,8]]);a0.static_ltree=zE(P4.map((E,x)=>[E,$4[x]]));const j4=[0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23],W4=XE([[30,5]]);a0.static_dtree=zE(j4.map((E,x)=>[E,W4[x]]));a0.static_l_desc=new a0(a0.static_ltree,z.extra_lbits,kE+1,T8,Re);a0.static_d_desc=new a0(a0.static_dtree,z.extra_dbits,0,qt,Re);a0.static_bl_desc=new a0(null,z.extra_blbits,0,Kt,L4);const V4=9,H4=8;function Y0(E,x,e,t,n){const i=this;i.good_length=E,i.max_lazy=x,i.nice_length=e,i.max_chain=t,i.func=n}const Q5=0,gE=1,Ix=2,j0=[new Y0(0,0,0,0,Q5),new Y0(4,4,8,4,gE),new Y0(4,5,16,8,gE),new Y0(4,6,32,32,gE),new Y0(4,4,16,16,Ix),new Y0(8,16,32,32,Ix),new Y0(8,16,128,128,Ix),new Y0(8,32,128,256,Ix),new Y0(32,128,258,1024,Ix),new Y0(32,258,258,4096,Ix)],oE=["need dictionary","stream end","","","stream error","data error","","buffer error","",""],O0=0,aE=1,ye=2,lE=3,q4=32,Dt=42,cE=113,Te=666,pt=8,K4=0,mt=1,Y4=2,E0=3,_E=258,_0=_E+E0+1;function Un(E,x,e,t){const n=E[x*2],i=E[e*2];return n<i||n==i&&t[x]<=t[e]}function J4(){const E=this;let x,e,t,n,i,r,A,s,B,o,a,f,F,h,l,c,u,C,d,m,g,_,b,w,p,D,v,S,T,M,R,N,P;const Y=new z,i0=new z,W=new z;E.depth=[];let r0,q,G,f0,x0,e0;E.bl_count=[],E.heap=[],R=[],N=[],P=[];function ox(){B=2*i,a[F-1]=0;for(let y=0;y<F-1;y++)a[y]=0;D=j0[v].max_lazy,T=j0[v].good_length,M=j0[v].nice_length,p=j0[v].max_chain,g=0,u=0,b=0,C=w=E0-1,m=0,f=0}function h0(){let y;for(y=0;y<T8;y++)R[y*2]=0;for(y=0;y<qt;y++)N[y*2]=0;for(y=0;y<Kt;y++)P[y*2]=0;R[we*2]=1,E.opt_len=E.static_len=0,q=G=0}function ax(){Y.dyn_tree=R,Y.stat_desc=a0.static_l_desc,i0.dyn_tree=N,i0.stat_desc=a0.static_d_desc,W.dyn_tree=P,W.stat_desc=a0.static_bl_desc,x0=0,e0=0,f0=8,h0()}E.pqdownheap=function(y,I){const k=E.heap,L=k[I];let U=I<<1;for(;U<=E.heap_len&&(U<E.heap_len&&Un(y,k[U+1],k[U],E.depth)&&U++,!Un(y,L,k[U],E.depth));)k[I]=k[U],I=U,U<<=1;k[I]=L};function Tx(y,I){let k=-1,L,U=y[0*2+1],V=0,Z=7,u0=4;U===0&&(Z=138,u0=3),y[(I+1)*2+1]=65535;for(let $0=0;$0<=I;$0++)L=U,U=y[($0+1)*2+1],!(++V<Z&&L==U)&&(V<u0?P[L*2]+=V:L!==0?(L!=k&&P[L*2]++,P[In*2]++):V<=10?P[Ln*2]++:P[Nn*2]++,V=0,k=L,U===0?(Z=138,u0=3):L==U?(Z=6,u0=3):(Z=7,u0=4))}function Sx(){let y;for(Tx(R,Y.max_code),Tx(N,i0.max_code),W.build_tree(E),y=Kt-1;y>=3&&P[z.bl_order[y]*2+1]===0;y--);return E.opt_len+=3*(y+1)+5+5+4,y}function lx(y){E.pending_buf[E.pending++]=y}function cx(y){lx(y&255),lx(y>>>8&255)}function xt(y){lx(y>>8&255),lx(y&255&255)}function B0(y,I){let k;const L=I;e0>ht-L?(k=y,x0|=k<<e0&65535,cx(x0),x0=k>>>ht-e0,e0+=L-ht):(x0|=y<<e0&65535,e0+=L)}function D0(y,I){const k=y*2;B0(I[k]&65535,I[k+1]&65535)}function De(y,I){let k,L=-1,U,V=y[0*2+1],Z=0,u0=7,$0=4;for(V===0&&(u0=138,$0=3),k=0;k<=I;k++)if(U=V,V=y[(k+1)*2+1],!(++Z<u0&&U==V)){if(Z<$0)do D0(U,P);while(--Z!==0);else U!==0?(U!=L&&(D0(U,P),Z--),D0(In,P),B0(Z-3,2)):Z<=10?(D0(Ln,P),B0(Z-3,3)):(D0(Nn,P),B0(Z-11,7));Z=0,L=U,V===0?(u0=138,$0=3):U==V?(u0=6,$0=3):(u0=7,$0=4)}}function et(y,I,k){let L;for(B0(y-257,5),B0(I-1,5),B0(k-4,4),L=0;L<k;L++)B0(P[z.bl_order[L]*2+1],3);De(R,y-1),De(N,I-1)}function Qe(){e0==16?(cx(x0),x0=0,e0=0):e0>=8&&(lx(x0&255),x0>>>=8,e0-=8)}function ex(){B0(mt<<1,3),D0(we,a0.static_ltree),Qe(),1+f0+10-e0<9&&(B0(mt<<1,3),D0(we,a0.static_ltree),Qe()),f0=7}function K0(y,I){let k,L,U;if(E.dist_buf[q]=y,E.lc_buf[q]=I&255,q++,y===0?R[I*2]++:(G++,y--,R[(z._length_code[I]+kE+1)*2]++,N[z.d_code(y)*2]++),!(q&8191)&&v>2){for(k=q*8,L=g-u,U=0;U<qt;U++)k+=N[U*2]*(5+z.extra_dbits[U]);if(k>>>=3,G<Math.floor(q/2)&&k<Math.floor(L/2))return!0}return q==r0-1}function pe(y,I){let k,L,U=0,V,Z;if(q!==0)do k=E.dist_buf[U],L=E.lc_buf[U],U++,k===0?D0(L,y):(V=z._length_code[L],D0(V+kE+1,y),Z=z.extra_lbits[V],Z!==0&&(L-=z.base_length[V],B0(L,Z)),k--,V=z.d_code(k),D0(V,I),Z=z.extra_dbits[V],Z!==0&&(k-=z.base_dist[V],B0(k,Z)));while(U<q);D0(we,y),f0=y[we*2+1]}function me(){e0>8?cx(x0):e0>0&&lx(x0&255),x0=0,e0=0}function ge(y,I,k){me(),f0=8,k&&(cx(I),cx(~I)),E.pending_buf.set(s.subarray(y,y+I),E.pending),E.pending+=I}function _e(y,I,k){B0((K4<<1)+(k?1:0),3),ge(y,I,!0)}function xE(y,I,k){let L,U,V=0;v>0?(Y.build_tree(E),i0.build_tree(E),V=Sx(),L=E.opt_len+3+7>>>3,U=E.static_len+3+7>>>3,U<=L&&(L=U)):L=U=I+5,I+4<=L&&y!=-1?_e(y,I,k):U==L?(B0((mt<<1)+(k?1:0),3),pe(a0.static_ltree,a0.static_dtree)):(B0((Y4<<1)+(k?1:0),3),et(Y.max_code+1,i0.max_code+1,V+1),pe(R,N)),h0(),k&&me()}function P0(y){xE(u>=0?u:-1,g-u,y),u=g,x.flush_pending()}function Kx(){let y,I,k,L;do{if(L=B-b-g,L===0&&g===0&&b===0)L=i;else if(L==-1)L--;else if(g>=i+i-_0){s.set(s.subarray(i,i+i),0),_-=i,g-=i,u-=i,y=F,k=y;do I=a[--k]&65535,a[k]=I>=i?I-i:0;while(--y!==0);y=i,k=y;do I=o[--k]&65535,o[k]=I>=i?I-i:0;while(--y!==0);L+=i}if(x.avail_in===0)return;y=x.read_buf(s,g+b,L),b+=y,b>=E0&&(f=s[g]&255,f=(f<<c^s[g+1]&255)&l)}while(b<_0&&x.avail_in!==0)}function K6(y){let I=65535,k;for(I>t-5&&(I=t-5);;){if(b<=1){if(Kx(),b===0&&y==Ee)return O0;if(b===0)break}if(g+=b,b=0,k=u+I,(g===0||g>=k)&&(b=g-k,g=k,P0(!1),x.avail_out===0)||g-u>=i-_0&&(P0(!1),x.avail_out===0))return O0}return P0(y==p0),x.avail_out===0?y==p0?ye:O0:y==p0?lE:aE}function M8(y){let I=p,k=g,L,U,V=w;const Z=g>i-_0?g-(i-_0):0;let u0=M;const $0=A,Et=g+_E;let U8=s[k+V-1],P8=s[k+V];w>=T&&(I>>=2),u0>b&&(u0=b);do if(L=y,!(s[L+V]!=P8||s[L+V-1]!=U8||s[L]!=s[k]||s[++L]!=s[k+1])){k+=2,L++;do;while(s[++k]==s[++L]&&s[++k]==s[++L]&&s[++k]==s[++L]&&s[++k]==s[++L]&&s[++k]==s[++L]&&s[++k]==s[++L]&&s[++k]==s[++L]&&s[++k]==s[++L]&&k<Et);if(U=_E-(Et-k),k=Et-_E,U>V){if(_=y,V=U,U>=u0)break;U8=s[k+V-1],P8=s[k+V]}}while((y=o[y&$0]&65535)>Z&&--I!==0);return V<=b?V:b}function Y6(y){let I=0,k;for(;;){if(b<_0){if(Kx(),b<_0&&y==Ee)return O0;if(b===0)break}if(b>=E0&&(f=(f<<c^s[g+(E0-1)]&255)&l,I=a[f]&65535,o[g&A]=a[f],a[f]=g),I!==0&&(g-I&65535)<=i-_0&&S!=sE&&(C=M8(I)),C>=E0)if(k=K0(g-_,C-E0),b-=C,C<=D&&b>=E0){C--;do g++,f=(f<<c^s[g+(E0-1)]&255)&l,I=a[f]&65535,o[g&A]=a[f],a[f]=g;while(--C!==0);g++}else g+=C,C=0,f=s[g]&255,f=(f<<c^s[g+1]&255)&l;else k=K0(0,s[g]&255),b--,g++;if(k&&(P0(!1),x.avail_out===0))return O0}return P0(y==p0),x.avail_out===0?y==p0?ye:O0:y==p0?lE:aE}function J6(y){let I=0,k,L;for(;;){if(b<_0){if(Kx(),b<_0&&y==Ee)return O0;if(b===0)break}if(b>=E0&&(f=(f<<c^s[g+(E0-1)]&255)&l,I=a[f]&65535,o[g&A]=a[f],a[f]=g),w=C,d=_,C=E0-1,I!==0&&w<D&&(g-I&65535)<=i-_0&&(S!=sE&&(C=M8(I)),C<=5&&(S==N4||C==E0&&g-_>4096)&&(C=E0-1)),w>=E0&&C<=w){L=g+b-E0,k=K0(g-1-d,w-E0),b-=w-1,w-=2;do++g<=L&&(f=(f<<c^s[g+(E0-1)]&255)&l,I=a[f]&65535,o[g&A]=a[f],a[f]=g);while(--w!==0);if(m=0,C=E0-1,g++,k&&(P0(!1),x.avail_out===0))return O0}else if(m!==0){if(k=K0(0,s[g-1]&255),k&&P0(!1),g++,b--,x.avail_out===0)return O0}else m=1,g++,b--}return m!==0&&(k=K0(0,s[g-1]&255),m=0),P0(y==p0),x.avail_out===0?y==p0?ye:O0:y==p0?lE:aE}function G6(y){return y.total_in=y.total_out=0,y.msg=null,E.pending=0,E.pending_out=0,e=cE,n=Ee,ax(),ox(),W0}E.deflateInit=function(y,I,k,L,U,V){return L||(L=pt),U||(U=H4),V||(V=R4),y.msg=null,I==OE&&(I=6),U<1||U>V4||L!=pt||k<9||k>15||I<0||I>9||V<0||V>sE?V0:(y.dstate=E,r=k,i=1<<r,A=i-1,h=U+7,F=1<<h,l=F-1,c=Math.floor((h+E0-1)/E0),s=new Uint8Array(i*2),o=[],a=[],r0=1<<U+6,E.pending_buf=new Uint8Array(r0*4),t=r0*4,E.dist_buf=new Uint16Array(r0),E.lc_buf=new Uint8Array(r0),v=I,S=V,G6(y))},E.deflateEnd=function(){return e!=Dt&&e!=cE&&e!=Te?V0:(E.lc_buf=null,E.dist_buf=null,E.pending_buf=null,a=null,o=null,s=null,E.dstate=null,e==cE?U4:W0)},E.deflateParams=function(y,I,k){let L=W0;return I==OE&&(I=6),I<0||I>9||k<0||k>sE?V0:(j0[v].func!=j0[I].func&&y.total_in!==0&&(L=y.deflate(Rn)),v!=I&&(v=I,D=j0[v].max_lazy,T=j0[v].good_length,M=j0[v].nice_length,p=j0[v].max_chain),S=k,L)},E.deflateSetDictionary=function(y,I,k){let L=k,U,V=0;if(!I||e!=Dt)return V0;if(L<E0)return W0;for(L>i-_0&&(L=i-_0,V=k-L),s.set(I.subarray(V,V+L),0),g=L,u=L,f=s[0]&255,f=(f<<c^s[1]&255)&l,U=0;U<=L-E0;U++)f=(f<<c^s[U+(E0-1)]&255)&l,o[U&A]=a[f],a[f]=U;return W0},E.deflate=function(y,I){let k,L,U,V,Z;if(I>p0||I<0)return V0;if(!y.next_out||!y.next_in&&y.avail_in!==0||e==Te&&I!=p0)return y.msg=oE[BE-V0],V0;if(y.avail_out===0)return y.msg=oE[BE-Zx],Zx;if(x=y,V=n,n=I,e==Dt&&(L=pt+(r-8<<4)<<8,U=(v-1&255)>>1,U>3&&(U=3),L|=U<<6,g!==0&&(L|=q4),L+=31-L%31,e=cE,xt(L)),E.pending!==0){if(x.flush_pending(),x.avail_out===0)return n=-1,W0}else if(x.avail_in===0&&I<=V&&I!=p0)return x.msg=oE[BE-Zx],Zx;if(e==Te&&x.avail_in!==0)return y.msg=oE[BE-Zx],Zx;if(x.avail_in!==0||b!==0||I!=Ee&&e!=Te){switch(Z=-1,j0[v].func){case Q5:Z=K6(I);break;case gE:Z=Y6(I);break;case Ix:Z=J6(I);break}if((Z==ye||Z==lE)&&(e=Te),Z==O0||Z==ye)return x.avail_out===0&&(n=-1),W0;if(Z==aE){if(I==Rn)ex();else if(_e(0,0,!1),I==M4)for(k=0;k<F;k++)a[k]=0;if(x.flush_pending(),x.avail_out===0)return n=-1,W0}}return I!=p0?W0:z5}}function x6(){const E=this;E.next_in_index=0,E.next_out_index=0,E.avail_in=0,E.total_in=0,E.avail_out=0,E.total_out=0}x6.prototype={deflateInit(E,x){const e=this;return e.dstate=new J4,x||(x=Re),e.dstate.deflateInit(e,E,x)},deflate(E){const x=this;return x.dstate?x.dstate.deflate(x,E):V0},deflateEnd(){const E=this;if(!E.dstate)return V0;const x=E.dstate.deflateEnd();return E.dstate=null,x},deflateParams(E,x){const e=this;return e.dstate?e.dstate.deflateParams(e,E,x):V0},deflateSetDictionary(E,x){const e=this;return e.dstate?e.dstate.deflateSetDictionary(e,E,x):V0},read_buf(E,x,e){const t=this;let n=t.avail_in;return n>e&&(n=e),n===0?0:(t.avail_in-=n,E.set(t.next_in.subarray(t.next_in_index,t.next_in_index+n),x),t.next_in_index+=n,t.total_in+=n,n)},flush_pending(){const E=this;let x=E.dstate.pending;x>E.avail_out&&(x=E.avail_out),x!==0&&(E.next_out.set(E.dstate.pending_buf.subarray(E.dstate.pending_out,E.dstate.pending_out+x),E.next_out_index),E.next_out_index+=x,E.dstate.pending_out+=x,E.total_out+=x,E.avail_out-=x,E.dstate.pending-=x,E.dstate.pending===0&&(E.dstate.pending_out=0))}};function G4(E){const x=this,e=new x6,t=Z4(E&&E.chunkSize?E.chunkSize:64*1024),n=Ee,i=new Uint8Array(t);let r=E?E.level:OE;typeof r>"u"&&(r=OE),e.deflateInit(r),e.next_out=i,x.append=function(A,s){let B,o,a=0,f=0,F=0;const h=[];if(A.length){e.next_in_index=0,e.next_in=A,e.avail_in=A.length;do{if(e.next_out_index=0,e.avail_out=t,B=e.deflate(n),B!=W0)throw new Error("deflating: "+e.msg);e.next_out_index&&(e.next_out_index==t?h.push(new Uint8Array(i)):h.push(i.subarray(0,e.next_out_index))),F+=e.next_out_index,s&&e.next_in_index>0&&e.next_in_index!=a&&(s(e.next_in_index),a=e.next_in_index)}while(e.avail_in>0||e.avail_out===0);return h.length>1?(o=new Uint8Array(F),h.forEach(function(l){o.set(l,f),f+=l.length})):o=h[0]?new Uint8Array(h[0]):new Uint8Array,o}},x.flush=function(){let A,s,B=0,o=0;const a=[];do{if(e.next_out_index=0,e.avail_out=t,A=e.deflate(p0),A!=z5&&A!=W0)throw new Error("deflating: "+e.msg);t-e.avail_out>0&&a.push(i.slice(0,e.next_out_index)),o+=e.next_out_index}while(e.avail_in>0||e.avail_out===0);return e.deflateEnd(),s=new Uint8Array(o),a.forEach(function(f){s.set(f,B),B+=f.length}),s}}function Z4(E){return E+5*(Math.floor(E/16383)+1)}const X4=15,X=0,rx=1,z4=2,m0=-2,Q=-3,Pn=-4,Ax=-5,v0=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],e6=1440,Q4=0,x7=4,e7=9,E7=5,t7=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],n7=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],i7=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],r7=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],A7=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],s7=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],ux=15;function Yt(){const E=this;let x,e,t,n,i,r;function A(B,o,a,f,F,h,l,c,u,C,d){let m,g,_,b,w,p,D,v,S,T,M,R,N,P,Y;T=0,w=a;do t[B[o+T]]++,T++,w--;while(w!==0);if(t[0]==a)return l[0]=-1,c[0]=0,X;for(v=c[0],p=1;p<=ux&&t[p]===0;p++);for(D=p,v<p&&(v=p),w=ux;w!==0&&t[w]===0;w--);for(_=w,v>w&&(v=w),c[0]=v,P=1<<p;p<w;p++,P<<=1)if((P-=t[p])<0)return Q;if((P-=t[w])<0)return Q;for(t[w]+=P,r[1]=p=0,T=1,N=2;--w!==0;)r[N]=p+=t[T],N++,T++;w=0,T=0;do(p=B[o+T])!==0&&(d[r[p]++]=w),T++;while(++w<a);for(a=r[_],r[0]=w=0,T=0,b=-1,R=-v,i[0]=0,M=0,Y=0;D<=_;D++)for(m=t[D];m--!==0;){for(;D>R+v;){if(b++,R+=v,Y=_-R,Y=Y>v?v:Y,(g=1<<(p=D-R))>m+1&&(g-=m+1,N=D,p<Y))for(;++p<Y&&!((g<<=1)<=t[++N]);)g-=t[N];if(Y=1<<p,C[0]+Y>e6)return Q;i[b]=M=C[0],C[0]+=Y,b!==0?(r[b]=w,n[0]=p,n[1]=v,p=w>>>R-v,n[2]=M-i[b-1]-p,u.set(n,(i[b-1]+p)*3)):l[0]=M}for(n[1]=D-R,T>=a?n[0]=192:d[T]<f?(n[0]=d[T]<256?0:96,n[2]=d[T++]):(n[0]=h[d[T]-f]+16+64,n[2]=F[d[T++]-f]),g=1<<D-R,p=w>>>R;p<Y;p+=g)u.set(n,(M+p)*3);for(p=1<<D-1;w&p;p>>>=1)w^=p;for(w^=p,S=(1<<R)-1;(w&S)!=r[b];)b--,R-=v,S=(1<<R)-1}return P!==0&&_!=1?Ax:X}function s(B){let o;for(x||(x=[],e=[],t=new Int32Array(ux+1),n=[],i=new Int32Array(ux),r=new Int32Array(ux+1)),e.length<B&&(e=[]),o=0;o<B;o++)e[o]=0;for(o=0;o<ux+1;o++)t[o]=0;for(o=0;o<3;o++)n[o]=0;i.set(t.subarray(0,ux),0),r.set(t.subarray(0,ux+1),0)}E.inflate_trees_bits=function(B,o,a,f,F){let h;return s(19),x[0]=0,h=A(B,0,19,19,null,null,a,o,f,x,e),h==Q?F.msg="oversubscribed dynamic bit lengths tree":(h==Ax||o[0]===0)&&(F.msg="incomplete dynamic bit lengths tree",h=Q),h},E.inflate_trees_dynamic=function(B,o,a,f,F,h,l,c,u){let C;return s(288),x[0]=0,C=A(a,0,B,257,i7,r7,h,f,c,x,e),C!=X||f[0]===0?(C==Q?u.msg="oversubscribed literal/length tree":C!=Pn&&(u.msg="incomplete literal/length tree",C=Q),C):(s(288),C=A(a,B,o,0,A7,s7,l,F,c,x,e),C!=X||F[0]===0&&B>257?(C==Q?u.msg="oversubscribed distance tree":C==Ax?(u.msg="incomplete distance tree",C=Q):C!=Pn&&(u.msg="empty distance tree with lengths",C=Q),C):X)}}Yt.inflate_trees_fixed=function(E,x,e,t){return E[0]=e7,x[0]=E7,e[0]=t7,t[0]=n7,X};const fE=0,$n=1,jn=2,Wn=3,Vn=4,Hn=5,qn=6,gt=7,Kn=8,uE=9;function B7(){const E=this;let x,e=0,t,n=0,i=0,r=0,A=0,s=0,B=0,o=0,a,f=0,F,h=0;function l(c,u,C,d,m,g,_,b){let w,p,D,v,S,T,M,R,N,P,Y,i0,W,r0,q,G;M=b.next_in_index,R=b.avail_in,S=_.bitb,T=_.bitk,N=_.write,P=N<_.read?_.read-N-1:_.end-N,Y=v0[c],i0=v0[u];do{for(;T<20;)R--,S|=(b.read_byte(M++)&255)<<T,T+=8;if(w=S&Y,p=C,D=d,G=(D+w)*3,(v=p[G])===0){S>>=p[G+1],T-=p[G+1],_.win[N++]=p[G+2],P--;continue}do{if(S>>=p[G+1],T-=p[G+1],v&16){for(v&=15,W=p[G+2]+(S&v0[v]),S>>=v,T-=v;T<15;)R--,S|=(b.read_byte(M++)&255)<<T,T+=8;w=S&i0,p=m,D=g,G=(D+w)*3,v=p[G];do if(S>>=p[G+1],T-=p[G+1],v&16){for(v&=15;T<v;)R--,S|=(b.read_byte(M++)&255)<<T,T+=8;if(r0=p[G+2]+(S&v0[v]),S>>=v,T-=v,P-=W,N>=r0)q=N-r0,N-q>0&&2>N-q?(_.win[N++]=_.win[q++],_.win[N++]=_.win[q++],W-=2):(_.win.set(_.win.subarray(q,q+2),N),N+=2,q+=2,W-=2);else{q=N-r0;do q+=_.end;while(q<0);if(v=_.end-q,W>v){if(W-=v,N-q>0&&v>N-q)do _.win[N++]=_.win[q++];while(--v!==0);else _.win.set(_.win.subarray(q,q+v),N),N+=v,q+=v,v=0;q=0}}if(N-q>0&&W>N-q)do _.win[N++]=_.win[q++];while(--W!==0);else _.win.set(_.win.subarray(q,q+W),N),N+=W,q+=W,W=0;break}else if(!(v&64))w+=p[G+2],w+=S&v0[v],G=(D+w)*3,v=p[G];else return b.msg="invalid distance code",W=b.avail_in-R,W=T>>3<W?T>>3:W,R+=W,M-=W,T-=W<<3,_.bitb=S,_.bitk=T,b.avail_in=R,b.total_in+=M-b.next_in_index,b.next_in_index=M,_.write=N,Q;while(!0);break}if(v&64)return v&32?(W=b.avail_in-R,W=T>>3<W?T>>3:W,R+=W,M-=W,T-=W<<3,_.bitb=S,_.bitk=T,b.avail_in=R,b.total_in+=M-b.next_in_index,b.next_in_index=M,_.write=N,rx):(b.msg="invalid literal/length code",W=b.avail_in-R,W=T>>3<W?T>>3:W,R+=W,M-=W,T-=W<<3,_.bitb=S,_.bitk=T,b.avail_in=R,b.total_in+=M-b.next_in_index,b.next_in_index=M,_.write=N,Q);if(w+=p[G+2],w+=S&v0[v],G=(D+w)*3,(v=p[G])===0){S>>=p[G+1],T-=p[G+1],_.win[N++]=p[G+2],P--;break}}while(!0)}while(P>=258&&R>=10);return W=b.avail_in-R,W=T>>3<W?T>>3:W,R+=W,M-=W,T-=W<<3,_.bitb=S,_.bitk=T,b.avail_in=R,b.total_in+=M-b.next_in_index,b.next_in_index=M,_.write=N,X}E.init=function(c,u,C,d,m,g){x=fE,B=c,o=u,a=C,f=d,F=m,h=g,t=null},E.proc=function(c,u,C){let d,m,g,_=0,b=0,w=0,p,D,v,S;for(w=u.next_in_index,p=u.avail_in,_=c.bitb,b=c.bitk,D=c.write,v=D<c.read?c.read-D-1:c.end-D;;)switch(x){case fE:if(v>=258&&p>=10&&(c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,C=l(B,o,a,f,F,h,c,u),w=u.next_in_index,p=u.avail_in,_=c.bitb,b=c.bitk,D=c.write,v=D<c.read?c.read-D-1:c.end-D,C!=X)){x=C==rx?gt:uE;break}i=B,t=a,n=f,x=$n;case $n:for(d=i;b<d;){if(p!==0)C=X;else return c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);p--,_|=(u.read_byte(w++)&255)<<b,b+=8}if(m=(n+(_&v0[d]))*3,_>>>=t[m+1],b-=t[m+1],g=t[m],g===0){r=t[m+2],x=qn;break}if(g&16){A=g&15,e=t[m+2],x=jn;break}if(!(g&64)){i=g,n=m/3+t[m+2];break}if(g&32){x=gt;break}return x=uE,u.msg="invalid literal/length code",C=Q,c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);case jn:for(d=A;b<d;){if(p!==0)C=X;else return c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);p--,_|=(u.read_byte(w++)&255)<<b,b+=8}e+=_&v0[d],_>>=d,b-=d,i=o,t=F,n=h,x=Wn;case Wn:for(d=i;b<d;){if(p!==0)C=X;else return c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);p--,_|=(u.read_byte(w++)&255)<<b,b+=8}if(m=(n+(_&v0[d]))*3,_>>=t[m+1],b-=t[m+1],g=t[m],g&16){A=g&15,s=t[m+2],x=Vn;break}if(!(g&64)){i=g,n=m/3+t[m+2];break}return x=uE,u.msg="invalid distance code",C=Q,c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);case Vn:for(d=A;b<d;){if(p!==0)C=X;else return c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);p--,_|=(u.read_byte(w++)&255)<<b,b+=8}s+=_&v0[d],_>>=d,b-=d,x=Hn;case Hn:for(S=D-s;S<0;)S+=c.end;for(;e!==0;){if(v===0&&(D==c.end&&c.read!==0&&(D=0,v=D<c.read?c.read-D-1:c.end-D),v===0&&(c.write=D,C=c.inflate_flush(u,C),D=c.write,v=D<c.read?c.read-D-1:c.end-D,D==c.end&&c.read!==0&&(D=0,v=D<c.read?c.read-D-1:c.end-D),v===0)))return c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);c.win[D++]=c.win[S++],v--,S==c.end&&(S=0),e--}x=fE;break;case qn:if(v===0&&(D==c.end&&c.read!==0&&(D=0,v=D<c.read?c.read-D-1:c.end-D),v===0&&(c.write=D,C=c.inflate_flush(u,C),D=c.write,v=D<c.read?c.read-D-1:c.end-D,D==c.end&&c.read!==0&&(D=0,v=D<c.read?c.read-D-1:c.end-D),v===0)))return c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);C=X,c.win[D++]=r,v--,x=fE;break;case gt:if(b>7&&(b-=8,p++,w--),c.write=D,C=c.inflate_flush(u,C),D=c.write,v=D<c.read?c.read-D-1:c.end-D,c.read!=c.write)return c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);x=Kn;case Kn:return C=rx,c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);case uE:return C=Q,c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C);default:return C=m0,c.bitb=_,c.bitk=b,u.avail_in=p,u.total_in+=w-u.next_in_index,u.next_in_index=w,c.write=D,c.inflate_flush(u,C)}},E.free=function(){}}const Yn=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Xx=0,_t=1,Jn=2,Gn=3,Zn=4,Xn=5,dE=6,CE=7,zn=8,kx=9;function o7(E,x){const e=this;let t=Xx,n=0,i=0,r=0,A;const s=[0],B=[0],o=new B7;let a=0,f=new Int32Array(e6*3);const F=0,h=new Yt;e.bitk=0,e.bitb=0,e.win=new Uint8Array(x),e.end=x,e.read=0,e.write=0,e.reset=function(l,c){c&&(c[0]=F),t==dE&&o.free(l),t=Xx,e.bitk=0,e.bitb=0,e.read=e.write=0},e.reset(E,null),e.inflate_flush=function(l,c){let u,C,d;return C=l.next_out_index,d=e.read,u=(d<=e.write?e.write:e.end)-d,u>l.avail_out&&(u=l.avail_out),u!==0&&c==Ax&&(c=X),l.avail_out-=u,l.total_out+=u,l.next_out.set(e.win.subarray(d,d+u),C),C+=u,d+=u,d==e.end&&(d=0,e.write==e.end&&(e.write=0),u=e.write-d,u>l.avail_out&&(u=l.avail_out),u!==0&&c==Ax&&(c=X),l.avail_out-=u,l.total_out+=u,l.next_out.set(e.win.subarray(d,d+u),C),C+=u,d+=u),l.next_out_index=C,e.read=d,c},e.proc=function(l,c){let u,C,d,m,g,_,b,w;for(m=l.next_in_index,g=l.avail_in,C=e.bitb,d=e.bitk,_=e.write,b=_<e.read?e.read-_-1:e.end-_;;){let p,D,v,S,T,M,R,N;switch(t){case Xx:for(;d<3;){if(g!==0)c=X;else return e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);g--,C|=(l.read_byte(m++)&255)<<d,d+=8}switch(u=C&7,a=u&1,u>>>1){case 0:C>>>=3,d-=3,u=d&7,C>>>=u,d-=u,t=_t;break;case 1:p=[],D=[],v=[[]],S=[[]],Yt.inflate_trees_fixed(p,D,v,S),o.init(p[0],D[0],v[0],0,S[0],0),C>>>=3,d-=3,t=dE;break;case 2:C>>>=3,d-=3,t=Gn;break;case 3:return C>>>=3,d-=3,t=kx,l.msg="invalid block type",c=Q,e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c)}break;case _t:for(;d<32;){if(g!==0)c=X;else return e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);g--,C|=(l.read_byte(m++)&255)<<d,d+=8}if((~C>>>16&65535)!=(C&65535))return t=kx,l.msg="invalid stored block lengths",c=Q,e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);n=C&65535,C=d=0,t=n!==0?Jn:a!==0?CE:Xx;break;case Jn:if(g===0||b===0&&(_==e.end&&e.read!==0&&(_=0,b=_<e.read?e.read-_-1:e.end-_),b===0&&(e.write=_,c=e.inflate_flush(l,c),_=e.write,b=_<e.read?e.read-_-1:e.end-_,_==e.end&&e.read!==0&&(_=0,b=_<e.read?e.read-_-1:e.end-_),b===0)))return e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);if(c=X,u=n,u>g&&(u=g),u>b&&(u=b),e.win.set(l.read_buf(m,u),_),m+=u,g-=u,_+=u,b-=u,(n-=u)!==0)break;t=a!==0?CE:Xx;break;case Gn:for(;d<14;){if(g!==0)c=X;else return e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);g--,C|=(l.read_byte(m++)&255)<<d,d+=8}if(i=u=C&16383,(u&31)>29||(u>>5&31)>29)return t=kx,l.msg="too many length or distance symbols",c=Q,e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);if(u=258+(u&31)+(u>>5&31),!A||A.length<u)A=[];else for(w=0;w<u;w++)A[w]=0;C>>>=14,d-=14,r=0,t=Zn;case Zn:for(;r<4+(i>>>10);){for(;d<3;){if(g!==0)c=X;else return e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);g--,C|=(l.read_byte(m++)&255)<<d,d+=8}A[Yn[r++]]=C&7,C>>>=3,d-=3}for(;r<19;)A[Yn[r++]]=0;if(s[0]=7,u=h.inflate_trees_bits(A,s,B,f,l),u!=X)return c=u,c==Q&&(A=null,t=kx),e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);r=0,t=Xn;case Xn:for(;u=i,!(r>=258+(u&31)+(u>>5&31));){let P,Y;for(u=s[0];d<u;){if(g!==0)c=X;else return e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);g--,C|=(l.read_byte(m++)&255)<<d,d+=8}if(u=f[(B[0]+(C&v0[u]))*3+1],Y=f[(B[0]+(C&v0[u]))*3+2],Y<16)C>>>=u,d-=u,A[r++]=Y;else{for(w=Y==18?7:Y-14,P=Y==18?11:3;d<u+w;){if(g!==0)c=X;else return e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);g--,C|=(l.read_byte(m++)&255)<<d,d+=8}if(C>>>=u,d-=u,P+=C&v0[w],C>>>=w,d-=w,w=r,u=i,w+P>258+(u&31)+(u>>5&31)||Y==16&&w<1)return A=null,t=kx,l.msg="invalid bit length repeat",c=Q,e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);Y=Y==16?A[w-1]:0;do A[w++]=Y;while(--P!==0);r=w}}if(B[0]=-1,T=[],M=[],R=[],N=[],T[0]=9,M[0]=6,u=i,u=h.inflate_trees_dynamic(257+(u&31),1+(u>>5&31),A,T,M,R,N,f,l),u!=X)return u==Q&&(A=null,t=kx),c=u,e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);o.init(T[0],M[0],f,R[0],f,N[0]),t=dE;case dE:if(e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,(c=o.proc(e,l,c))!=rx)return e.inflate_flush(l,c);if(c=X,o.free(l),m=l.next_in_index,g=l.avail_in,C=e.bitb,d=e.bitk,_=e.write,b=_<e.read?e.read-_-1:e.end-_,a===0){t=Xx;break}t=CE;case CE:if(e.write=_,c=e.inflate_flush(l,c),_=e.write,b=_<e.read?e.read-_-1:e.end-_,e.read!=e.write)return e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);t=zn;case zn:return c=rx,e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);case kx:return c=Q,e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c);default:return c=m0,e.bitb=C,e.bitk=d,l.avail_in=g,l.total_in+=m-l.next_in_index,l.next_in_index=m,e.write=_,e.inflate_flush(l,c)}}},e.free=function(l){e.reset(l,null),e.win=null,f=null},e.set_dictionary=function(l,c,u){e.win.set(l.subarray(c,c+u),0),e.read=e.write=u},e.sync_point=function(){return t==_t?1:0}}const a7=32,l7=8,c7=0,Qn=1,x9=2,e9=3,E9=4,t9=5,vt=6,Se=7,n9=12,dx=13,f7=[0,0,255,255];function u7(){const E=this;E.mode=0,E.method=0,E.was=[0],E.need=0,E.marker=0,E.wbits=0;function x(e){return!e||!e.istate?m0:(e.total_in=e.total_out=0,e.msg=null,e.istate.mode=Se,e.istate.blocks.reset(e,null),X)}E.inflateEnd=function(e){return E.blocks&&E.blocks.free(e),E.blocks=null,X},E.inflateInit=function(e,t){return e.msg=null,E.blocks=null,t<8||t>15?(E.inflateEnd(e),m0):(E.wbits=t,e.istate.blocks=new o7(e,1<<t),x(e),X)},E.inflate=function(e,t){let n,i;if(!e||!e.istate||!e.next_in)return m0;const r=e.istate;for(t=t==x7?Ax:X,n=Ax;;)switch(r.mode){case c7:if(e.avail_in===0)return n;if(n=t,e.avail_in--,e.total_in++,((r.method=e.read_byte(e.next_in_index++))&15)!=l7){r.mode=dx,e.msg="unknown compression method",r.marker=5;break}if((r.method>>4)+8>r.wbits){r.mode=dx,e.msg="invalid win size",r.marker=5;break}r.mode=Qn;case Qn:if(e.avail_in===0)return n;if(n=t,e.avail_in--,e.total_in++,i=e.read_byte(e.next_in_index++)&255,((r.method<<8)+i)%31!==0){r.mode=dx,e.msg="incorrect header check",r.marker=5;break}if(!(i&a7)){r.mode=Se;break}r.mode=x9;case x9:if(e.avail_in===0)return n;n=t,e.avail_in--,e.total_in++,r.need=(e.read_byte(e.next_in_index++)&255)<<24&4278190080,r.mode=e9;case e9:if(e.avail_in===0)return n;n=t,e.avail_in--,e.total_in++,r.need+=(e.read_byte(e.next_in_index++)&255)<<16&16711680,r.mode=E9;case E9:if(e.avail_in===0)return n;n=t,e.avail_in--,e.total_in++,r.need+=(e.read_byte(e.next_in_index++)&255)<<8&65280,r.mode=t9;case t9:return e.avail_in===0?n:(n=t,e.avail_in--,e.total_in++,r.need+=e.read_byte(e.next_in_index++)&255,r.mode=vt,z4);case vt:return r.mode=dx,e.msg="need dictionary",r.marker=0,m0;case Se:if(n=r.blocks.proc(e,n),n==Q){r.mode=dx,r.marker=0;break}if(n==X&&(n=t),n!=rx)return n;n=t,r.blocks.reset(e,r.was),r.mode=n9;case n9:return e.avail_in=0,rx;case dx:return Q;default:return m0}},E.inflateSetDictionary=function(e,t,n){let i=0,r=n;if(!e||!e.istate||e.istate.mode!=vt)return m0;const A=e.istate;return r>=1<<A.wbits&&(r=(1<<A.wbits)-1,i=n-r),A.blocks.set_dictionary(t,i,r),A.mode=Se,X},E.inflateSync=function(e){let t,n,i,r,A;if(!e||!e.istate)return m0;const s=e.istate;if(s.mode!=dx&&(s.mode=dx,s.marker=0),(t=e.avail_in)===0)return Ax;for(n=e.next_in_index,i=s.marker;t!==0&&i<4;)e.read_byte(n)==f7[i]?i++:e.read_byte(n)!==0?i=0:i=4-i,n++,t--;return e.total_in+=n-e.next_in_index,e.next_in_index=n,e.avail_in=t,s.marker=i,i!=4?Q:(r=e.total_in,A=e.total_out,x(e),e.total_in=r,e.total_out=A,s.mode=Se,X)},E.inflateSyncPoint=function(e){return!e||!e.istate||!e.istate.blocks?m0:e.istate.blocks.sync_point()}}function E6(){}E6.prototype={inflateInit(E){const x=this;return x.istate=new u7,E||(E=X4),x.istate.inflateInit(x,E)},inflate(E){const x=this;return x.istate?x.istate.inflate(x,E):m0},inflateEnd(){const E=this;if(!E.istate)return m0;const x=E.istate.inflateEnd(E);return E.istate=null,x},inflateSync(){const E=this;return E.istate?E.istate.inflateSync(E):m0},inflateSetDictionary(E,x){const e=this;return e.istate?e.istate.inflateSetDictionary(e,E,x):m0},read_byte(E){return this.next_in[E]},read_buf(E,x){return this.next_in.subarray(E,E+x)}};function d7(E){const x=this,e=new E6,t=E&&E.chunkSize?Math.floor(E.chunkSize*2):128*1024,n=Q4,i=new Uint8Array(t);let r=!1;e.inflateInit(),e.next_out=i,x.append=function(A,s){const B=[];let o,a,f=0,F=0,h=0;if(A.length!==0){e.next_in_index=0,e.next_in=A,e.avail_in=A.length;do{if(e.next_out_index=0,e.avail_out=t,e.avail_in===0&&!r&&(e.next_in_index=0,r=!0),o=e.inflate(n),r&&o===Ax){if(e.avail_in!==0)throw new Error("inflating: bad input")}else if(o!==X&&o!==rx)throw new Error("inflating: "+e.msg);if((r||o===rx)&&e.avail_in===A.length)throw new Error("inflating: bad input");e.next_out_index&&(e.next_out_index===t?B.push(new Uint8Array(i)):B.push(i.subarray(0,e.next_out_index))),h+=e.next_out_index,s&&e.next_in_index>0&&e.next_in_index!=f&&(s(e.next_in_index),f=e.next_in_index)}while(e.avail_in>0||e.avail_out===0);return B.length>1?(a=new Uint8Array(h),B.forEach(function(l){a.set(l,F),F+=l.length})):a=B[0]?new Uint8Array(B[0]):new Uint8Array,a}},x.flush=function(){e.inflateEnd()}}const Mx=4294967295,hx=65535,C7=8,F7=0,h7=99,D7=67324752,p7=134695760,i9=33639248,m7=101010256,r9=101075792,g7=117853008,zx=22,bt=20,wt=56,_7=1,v7=39169,b7=10,w7=1,y7=21589,T7=28789,S7=25461,k7=6534,A9=1,O7=6,s9=8,B9=2048,o9=16,I7="/",H0=void 0,IE="undefined",t6="function";class a9{constructor(x){return class extends TransformStream{constructor(e,t){const n=new x(t);super({transform(i,r){r.enqueue(n.append(i))},flush(i){const r=n.flush();r&&i.enqueue(r)}})}}}}const L7=64;let n6=2;try{typeof navigator!=IE&&navigator.hardwareConcurrency&&(n6=navigator.hardwareConcurrency)}catch{}const N7={chunkSize:512*1024,maxWorkers:n6,terminateWorkerTimeout:5e3,useWebWorkers:!0,useCompressionStream:!0,workerScripts:H0,CompressionStreamNative:typeof CompressionStream!=IE&&CompressionStream,DecompressionStreamNative:typeof DecompressionStream!=IE&&DecompressionStream},Dx=Object.assign({},N7);function R7(){return Dx}function M7(E){return Math.max(E.chunkSize,L7)}function S8(E){const{baseURL:x,chunkSize:e,maxWorkers:t,terminateWorkerTimeout:n,useCompressionStream:i,useWebWorkers:r,Deflate:A,Inflate:s,CompressionStream:B,DecompressionStream:o,workerScripts:a}=E;if(Cx("baseURL",x),Cx("chunkSize",e),Cx("maxWorkers",t),Cx("terminateWorkerTimeout",n),Cx("useCompressionStream",i),Cx("useWebWorkers",r),A&&(Dx.CompressionStream=new a9(A)),s&&(Dx.DecompressionStream=new a9(s)),Cx("CompressionStream",B),Cx("DecompressionStream",o),a!==H0){const{deflate:f,inflate:F}=a;if((f||F)&&(Dx.workerScripts||(Dx.workerScripts={})),f){if(!Array.isArray(f))throw new Error("workerScripts.deflate must be an array");Dx.workerScripts.deflate=f}if(F){if(!Array.isArray(F))throw new Error("workerScripts.inflate must be an array");Dx.workerScripts.inflate=F}}}function Cx(E,x){x!==H0&&(Dx[E]=x)}const yt={application:{"andrew-inset":"ez",annodex:"anx","atom+xml":"atom","atomcat+xml":"atomcat","atomserv+xml":"atomsrv",bbolin:"lin","cu-seeme":"cu","davmount+xml":"davmount",dsptype:"tsp",ecmascript:["es","ecma"],futuresplash:"spl",hta:"hta","java-archive":"jar","java-serialized-object":"ser","java-vm":"class",m3g:"m3g","mac-binhex40":"hqx",mathematica:["nb","ma","mb"],msaccess:"mdb",msword:["doc","dot","wiz"],mxf:"mxf",oda:"oda",ogg:"ogx",pdf:"pdf","pgp-keys":"key","pgp-signature":["asc","sig"],"pics-rules":"prf",postscript:["ps","ai","eps","epsi","epsf","eps2","eps3"],rar:"rar","rdf+xml":"rdf","rss+xml":"rss",rtf:"rtf","xhtml+xml":["xhtml","xht"],xml:["xml","xsl","xsd","xpdl"],"xspf+xml":"xspf",zip:"zip","vnd.android.package-archive":"apk","vnd.cinderella":"cdy","vnd.google-earth.kml+xml":"kml","vnd.google-earth.kmz":"kmz","vnd.mozilla.xul+xml":"xul","vnd.ms-excel":["xls","xlb","xlt","xlm","xla","xlc","xlw"],"vnd.ms-pki.seccat":"cat","vnd.ms-pki.stl":"stl","vnd.ms-powerpoint":["ppt","pps","pot","ppa","pwz"],"vnd.oasis.opendocument.chart":"odc","vnd.oasis.opendocument.database":"odb","vnd.oasis.opendocument.formula":"odf","vnd.oasis.opendocument.graphics":"odg","vnd.oasis.opendocument.graphics-template":"otg","vnd.oasis.opendocument.image":"odi","vnd.oasis.opendocument.presentation":"odp","vnd.oasis.opendocument.presentation-template":"otp","vnd.oasis.opendocument.spreadsheet":"ods","vnd.oasis.opendocument.spreadsheet-template":"ots","vnd.oasis.opendocument.text":"odt","vnd.oasis.opendocument.text-master":["odm","otm"],"vnd.oasis.opendocument.text-template":"ott","vnd.oasis.opendocument.text-web":"oth","vnd.openxmlformats-officedocument.spreadsheetml.sheet":"xlsx","vnd.openxmlformats-officedocument.spreadsheetml.template":"xltx","vnd.openxmlformats-officedocument.presentationml.presentation":"pptx","vnd.openxmlformats-officedocument.presentationml.slideshow":"ppsx","vnd.openxmlformats-officedocument.presentationml.template":"potx","vnd.openxmlformats-officedocument.wordprocessingml.document":"docx","vnd.openxmlformats-officedocument.wordprocessingml.template":"dotx","vnd.smaf":"mmf","vnd.stardivision.calc":"sdc","vnd.stardivision.chart":"sds","vnd.stardivision.draw":"sda","vnd.stardivision.impress":"sdd","vnd.stardivision.math":["sdf","smf"],"vnd.stardivision.writer":["sdw","vor"],"vnd.stardivision.writer-global":"sgl","vnd.sun.xml.calc":"sxc","vnd.sun.xml.calc.template":"stc","vnd.sun.xml.draw":"sxd","vnd.sun.xml.draw.template":"std","vnd.sun.xml.impress":"sxi","vnd.sun.xml.impress.template":"sti","vnd.sun.xml.math":"sxm","vnd.sun.xml.writer":"sxw","vnd.sun.xml.writer.global":"sxg","vnd.sun.xml.writer.template":"stw","vnd.symbian.install":["sis","sisx"],"vnd.visio":["vsd","vst","vss","vsw","vsdx","vssx","vstx","vssm","vstm"],"vnd.wap.wbxml":"wbxml","vnd.wap.wmlc":"wmlc","vnd.wap.wmlscriptc":"wmlsc","vnd.wordperfect":"wpd","vnd.wordperfect5.1":"wp5","x-123":"wk","x-7z-compressed":"7z","x-abiword":"abw","x-apple-diskimage":"dmg","x-bcpio":"bcpio","x-bittorrent":"torrent","x-cbr":["cbr","cba","cbt","cb7"],"x-cbz":"cbz","x-cdf":["cdf","cda"],"x-cdlink":"vcd","x-chess-pgn":"pgn","x-cpio":"cpio","x-csh":"csh","x-director":["dir","dxr","cst","cct","cxt","w3d","fgd","swa"],"x-dms":"dms","x-doom":"wad","x-dvi":"dvi","x-httpd-eruby":"rhtml","x-font":"pcf.Z","x-freemind":"mm","x-gnumeric":"gnumeric","x-go-sgf":"sgf","x-graphing-calculator":"gcf","x-gtar":["gtar","taz"],"x-hdf":"hdf","x-httpd-php":["phtml","pht","php"],"x-httpd-php-source":"phps","x-httpd-php3":"php3","x-httpd-php3-preprocessed":"php3p","x-httpd-php4":"php4","x-httpd-php5":"php5","x-ica":"ica","x-info":"info","x-internet-signup":["ins","isp"],"x-iphone":"iii","x-iso9660-image":"iso","x-java-jnlp-file":"jnlp","x-jmol":"jmz","x-killustrator":"kil","x-latex":"latex","x-lyx":"lyx","x-lzx":"lzx","x-maker":["frm","fb","fbdoc"],"x-ms-wmd":"wmd","x-msdos-program":["com","exe","bat","dll"],"x-netcdf":["nc"],"x-ns-proxy-autoconfig":["pac","dat"],"x-nwc":"nwc","x-object":"o","x-oz-application":"oza","x-pkcs7-certreqresp":"p7r","x-python-code":["pyc","pyo"],"x-qgis":["qgs","shp","shx"],"x-quicktimeplayer":"qtl","x-redhat-package-manager":["rpm","rpa"],"x-ruby":"rb","x-sh":"sh","x-shar":"shar","x-shockwave-flash":["swf","swfl"],"x-silverlight":"scr","x-stuffit":"sit","x-sv4cpio":"sv4cpio","x-sv4crc":"sv4crc","x-tar":"tar","x-tex-gf":"gf","x-tex-pk":"pk","x-texinfo":["texinfo","texi"],"x-trash":["~","%","bak","old","sik"],"x-ustar":"ustar","x-wais-source":"src","x-wingz":"wz","x-x509-ca-cert":["crt","der","cer"],"x-xcf":"xcf","x-xfig":"fig","x-xpinstall":"xpi",applixware:"aw","atomsvc+xml":"atomsvc","ccxml+xml":"ccxml","cdmi-capability":"cdmia","cdmi-container":"cdmic","cdmi-domain":"cdmid","cdmi-object":"cdmio","cdmi-queue":"cdmiq","docbook+xml":"dbk","dssc+der":"dssc","dssc+xml":"xdssc","emma+xml":"emma","epub+zip":"epub",exi:"exi","font-tdpfr":"pfr","gml+xml":"gml","gpx+xml":"gpx",gxf:"gxf",hyperstudio:"stk","inkml+xml":["ink","inkml"],ipfix:"ipfix","jsonml+json":"jsonml","lost+xml":"lostxml","mads+xml":"mads",marc:"mrc","marcxml+xml":"mrcx","mathml+xml":["mathml","mml"],mbox:"mbox","mediaservercontrol+xml":"mscml","metalink+xml":"metalink","metalink4+xml":"meta4","mets+xml":"mets","mods+xml":"mods",mp21:["m21","mp21"],mp4:"mp4s","oebps-package+xml":"opf","omdoc+xml":"omdoc",onenote:["onetoc","onetoc2","onetmp","onepkg"],oxps:"oxps","patch-ops-error+xml":"xer","pgp-encrypted":"pgp",pkcs10:"p10","pkcs7-mime":["p7m","p7c"],"pkcs7-signature":"p7s",pkcs8:"p8","pkix-attr-cert":"ac","pkix-crl":"crl","pkix-pkipath":"pkipath",pkixcmp:"pki","pls+xml":"pls","prs.cww":"cww","pskc+xml":"pskcxml","reginfo+xml":"rif","relax-ng-compact-syntax":"rnc","resource-lists+xml":"rl","resource-lists-diff+xml":"rld","rls-services+xml":"rs","rpki-ghostbusters":"gbr","rpki-manifest":"mft","rpki-roa":"roa","rsd+xml":"rsd","sbml+xml":"sbml","scvp-cv-request":"scq","scvp-cv-response":"scs","scvp-vp-request":"spq","scvp-vp-response":"spp",sdp:"sdp","set-payment-initiation":"setpay","set-registration-initiation":"setreg","shf+xml":"shf","sparql-query":"rq","sparql-results+xml":"srx",srgs:"gram","srgs+xml":"grxml","sru+xml":"sru","ssdl+xml":"ssdl","ssml+xml":"ssml","tei+xml":["tei","teicorpus"],"thraud+xml":"tfi","timestamped-data":"tsd","vnd.3gpp.pic-bw-large":"plb","vnd.3gpp.pic-bw-small":"psb","vnd.3gpp.pic-bw-var":"pvb","vnd.3gpp2.tcap":"tcap","vnd.3m.post-it-notes":"pwn","vnd.accpac.simply.aso":"aso","vnd.accpac.simply.imp":"imp","vnd.acucobol":"acu","vnd.acucorp":["atc","acutc"],"vnd.adobe.air-application-installer-package+zip":"air","vnd.adobe.formscentral.fcdt":"fcdt","vnd.adobe.fxp":["fxp","fxpl"],"vnd.adobe.xdp+xml":"xdp","vnd.adobe.xfdf":"xfdf","vnd.ahead.space":"ahead","vnd.airzip.filesecure.azf":"azf","vnd.airzip.filesecure.azs":"azs","vnd.amazon.ebook":"azw","vnd.americandynamics.acc":"acc","vnd.amiga.ami":"ami","vnd.anser-web-certificate-issue-initiation":"cii","vnd.anser-web-funds-transfer-initiation":"fti","vnd.antix.game-component":"atx","vnd.apple.installer+xml":"mpkg","vnd.apple.mpegurl":"m3u8","vnd.aristanetworks.swi":"swi","vnd.astraea-software.iota":"iota","vnd.audiograph":"aep","vnd.blueice.multipass":"mpm","vnd.bmi":"bmi","vnd.businessobjects":"rep","vnd.chemdraw+xml":"cdxml","vnd.chipnuts.karaoke-mmd":"mmd","vnd.claymore":"cla","vnd.cloanto.rp9":"rp9","vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"vnd.cluetrust.cartomobile-config":"c11amc","vnd.cluetrust.cartomobile-config-pkg":"c11amz","vnd.commonspace":"csp","vnd.contact.cmsg":"cdbcmsg","vnd.cosmocaller":"cmc","vnd.crick.clicker":"clkx","vnd.crick.clicker.keyboard":"clkk","vnd.crick.clicker.palette":"clkp","vnd.crick.clicker.template":"clkt","vnd.crick.clicker.wordbank":"clkw","vnd.criticaltools.wbs+xml":"wbs","vnd.ctc-posml":"pml","vnd.cups-ppd":"ppd","vnd.curl.car":"car","vnd.curl.pcurl":"pcurl","vnd.dart":"dart","vnd.data-vision.rdz":"rdz","vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"vnd.dece.ttml+xml":["uvt","uvvt"],"vnd.dece.unspecified":["uvx","uvvx"],"vnd.dece.zip":["uvz","uvvz"],"vnd.denovo.fcselayout-link":"fe_launch","vnd.dna":"dna","vnd.dolby.mlp":"mlp","vnd.dpgraph":"dpg","vnd.dreamfactory":"dfac","vnd.ds-keypoint":"kpxx","vnd.dvb.ait":"ait","vnd.dvb.service":"svc","vnd.dynageo":"geo","vnd.ecowin.chart":"mag","vnd.enliven":"nml","vnd.epson.esf":"esf","vnd.epson.msf":"msf","vnd.epson.quickanime":"qam","vnd.epson.salt":"slt","vnd.epson.ssf":"ssf","vnd.eszigno3+xml":["es3","et3"],"vnd.ezpix-album":"ez2","vnd.ezpix-package":"ez3","vnd.fdf":"fdf","vnd.fdsn.mseed":"mseed","vnd.fdsn.seed":["seed","dataless"],"vnd.flographit":"gph","vnd.fluxtime.clip":"ftc","vnd.framemaker":["fm","frame","maker","book"],"vnd.frogans.fnc":"fnc","vnd.frogans.ltf":"ltf","vnd.fsc.weblaunch":"fsc","vnd.fujitsu.oasys":"oas","vnd.fujitsu.oasys2":"oa2","vnd.fujitsu.oasys3":"oa3","vnd.fujitsu.oasysgp":"fg5","vnd.fujitsu.oasysprs":"bh2","vnd.fujixerox.ddd":"ddd","vnd.fujixerox.docuworks":"xdw","vnd.fujixerox.docuworks.binder":"xbd","vnd.fuzzysheet":"fzs","vnd.genomatix.tuxedo":"txd","vnd.geogebra.file":"ggb","vnd.geogebra.tool":"ggt","vnd.geometry-explorer":["gex","gre"],"vnd.geonext":"gxt","vnd.geoplan":"g2w","vnd.geospace":"g3w","vnd.gmx":"gmx","vnd.grafeq":["gqf","gqs"],"vnd.groove-account":"gac","vnd.groove-help":"ghf","vnd.groove-identity-message":"gim","vnd.groove-injector":"grv","vnd.groove-tool-message":"gtm","vnd.groove-tool-template":"tpl","vnd.groove-vcard":"vcg","vnd.hal+xml":"hal","vnd.handheld-entertainment+xml":"zmm","vnd.hbci":"hbci","vnd.hhe.lesson-player":"les","vnd.hp-hpgl":"hpgl","vnd.hp-hpid":"hpid","vnd.hp-hps":"hps","vnd.hp-jlyt":"jlt","vnd.hp-pcl":"pcl","vnd.hp-pclxl":"pclxl","vnd.hydrostatix.sof-data":"sfd-hdstx","vnd.ibm.minipay":"mpy","vnd.ibm.modcap":["afp","listafp","list3820"],"vnd.ibm.rights-management":"irm","vnd.ibm.secure-container":"sc","vnd.iccprofile":["icc","icm"],"vnd.igloader":"igl","vnd.immervision-ivp":"ivp","vnd.immervision-ivu":"ivu","vnd.insors.igm":"igm","vnd.intercon.formnet":["xpw","xpx"],"vnd.intergeo":"i2g","vnd.intu.qbo":"qbo","vnd.intu.qfx":"qfx","vnd.ipunplugged.rcprofile":"rcprofile","vnd.irepository.package+xml":"irp","vnd.is-xpr":"xpr","vnd.isac.fcs":"fcs","vnd.jam":"jam","vnd.jcp.javame.midlet-rms":"rms","vnd.jisp":"jisp","vnd.joost.joda-archive":"joda","vnd.kahootz":["ktz","ktr"],"vnd.kde.karbon":"karbon","vnd.kde.kchart":"chrt","vnd.kde.kformula":"kfo","vnd.kde.kivio":"flw","vnd.kde.kontour":"kon","vnd.kde.kpresenter":["kpr","kpt"],"vnd.kde.kspread":"ksp","vnd.kde.kword":["kwd","kwt"],"vnd.kenameaapp":"htke","vnd.kidspiration":"kia","vnd.kinar":["kne","knp"],"vnd.koan":["skp","skd","skt","skm"],"vnd.kodak-descriptor":"sse","vnd.las.las+xml":"lasxml","vnd.llamagraphics.life-balance.desktop":"lbd","vnd.llamagraphics.life-balance.exchange+xml":"lbe","vnd.lotus-1-2-3":"123","vnd.lotus-approach":"apr","vnd.lotus-freelance":"pre","vnd.lotus-notes":"nsf","vnd.lotus-organizer":"org","vnd.lotus-screencam":"scm","vnd.lotus-wordpro":"lwp","vnd.macports.portpkg":"portpkg","vnd.mcd":"mcd","vnd.medcalcdata":"mc1","vnd.mediastation.cdkey":"cdkey","vnd.mfer":"mwf","vnd.mfmp":"mfm","vnd.micrografx.flo":"flo","vnd.micrografx.igx":"igx","vnd.mif":"mif","vnd.mobius.daf":"daf","vnd.mobius.dis":"dis","vnd.mobius.mbk":"mbk","vnd.mobius.mqy":"mqy","vnd.mobius.msl":"msl","vnd.mobius.plc":"plc","vnd.mobius.txf":"txf","vnd.mophun.application":"mpn","vnd.mophun.certificate":"mpc","vnd.ms-artgalry":"cil","vnd.ms-cab-compressed":"cab","vnd.ms-excel.addin.macroenabled.12":"xlam","vnd.ms-excel.sheet.binary.macroenabled.12":"xlsb","vnd.ms-excel.sheet.macroenabled.12":"xlsm","vnd.ms-excel.template.macroenabled.12":"xltm","vnd.ms-fontobject":"eot","vnd.ms-htmlhelp":"chm","vnd.ms-ims":"ims","vnd.ms-lrm":"lrm","vnd.ms-officetheme":"thmx","vnd.ms-powerpoint.addin.macroenabled.12":"ppam","vnd.ms-powerpoint.presentation.macroenabled.12":"pptm","vnd.ms-powerpoint.slide.macroenabled.12":"sldm","vnd.ms-powerpoint.slideshow.macroenabled.12":"ppsm","vnd.ms-powerpoint.template.macroenabled.12":"potm","vnd.ms-project":["mpp","mpt"],"vnd.ms-word.document.macroenabled.12":"docm","vnd.ms-word.template.macroenabled.12":"dotm","vnd.ms-works":["wps","wks","wcm","wdb"],"vnd.ms-wpl":"wpl","vnd.ms-xpsdocument":"xps","vnd.mseq":"mseq","vnd.musician":"mus","vnd.muvee.style":"msty","vnd.mynfc":"taglet","vnd.neurolanguage.nlu":"nlu","vnd.nitf":["ntf","nitf"],"vnd.noblenet-directory":"nnd","vnd.noblenet-sealer":"nns","vnd.noblenet-web":"nnw","vnd.nokia.n-gage.data":"ngdat","vnd.nokia.n-gage.symbian.install":"n-gage","vnd.nokia.radio-preset":"rpst","vnd.nokia.radio-presets":"rpss","vnd.novadigm.edm":"edm","vnd.novadigm.edx":"edx","vnd.novadigm.ext":"ext","vnd.oasis.opendocument.chart-template":"otc","vnd.oasis.opendocument.formula-template":"odft","vnd.oasis.opendocument.image-template":"oti","vnd.olpc-sugar":"xo","vnd.oma.dd2+xml":"dd2","vnd.openofficeorg.extension":"oxt","vnd.openxmlformats-officedocument.presentationml.slide":"sldx","vnd.osgeo.mapguide.package":"mgp","vnd.osgi.dp":"dp","vnd.osgi.subsystem":"esa","vnd.palm":["pdb","pqa","oprc"],"vnd.pawaafile":"paw","vnd.pg.format":"str","vnd.pg.osasli":"ei6","vnd.picsel":"efif","vnd.pmi.widget":"wg","vnd.pocketlearn":"plf","vnd.powerbuilder6":"pbd","vnd.previewsystems.box":"box","vnd.proteus.magazine":"mgz","vnd.publishare-delta-tree":"qps","vnd.pvi.ptid1":"ptid","vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"vnd.realvnc.bed":"bed","vnd.recordare.musicxml":"mxl","vnd.recordare.musicxml+xml":"musicxml","vnd.rig.cryptonote":"cryptonote","vnd.rn-realmedia":"rm","vnd.rn-realmedia-vbr":"rmvb","vnd.route66.link66+xml":"link66","vnd.sailingtracker.track":"st","vnd.seemail":"see","vnd.sema":"sema","vnd.semd":"semd","vnd.semf":"semf","vnd.shana.informed.formdata":"ifm","vnd.shana.informed.formtemplate":"itp","vnd.shana.informed.interchange":"iif","vnd.shana.informed.package":"ipk","vnd.simtech-mindmapper":["twd","twds"],"vnd.smart.teacher":"teacher","vnd.solent.sdkm+xml":["sdkm","sdkd"],"vnd.spotfire.dxp":"dxp","vnd.spotfire.sfs":"sfs","vnd.stepmania.package":"smzip","vnd.stepmania.stepchart":"sm","vnd.sus-calendar":["sus","susp"],"vnd.svd":"svd","vnd.syncml+xml":"xsm","vnd.syncml.dm+wbxml":"bdm","vnd.syncml.dm+xml":"xdm","vnd.tao.intent-module-archive":"tao","vnd.tcpdump.pcap":["pcap","cap","dmp"],"vnd.tmobile-livetv":"tmo","vnd.trid.tpt":"tpt","vnd.triscape.mxs":"mxs","vnd.trueapp":"tra","vnd.ufdl":["ufd","ufdl"],"vnd.uiq.theme":"utz","vnd.umajin":"umj","vnd.unity":"unityweb","vnd.uoml+xml":"uoml","vnd.vcx":"vcx","vnd.visionary":"vis","vnd.vsf":"vsf","vnd.webturbo":"wtb","vnd.wolfram.player":"nbp","vnd.wqd":"wqd","vnd.wt.stf":"stf","vnd.xara":"xar","vnd.xfdl":"xfdl","vnd.yamaha.hv-dic":"hvd","vnd.yamaha.hv-script":"hvs","vnd.yamaha.hv-voice":"hvp","vnd.yamaha.openscoreformat":"osf","vnd.yamaha.openscoreformat.osfpvg+xml":"osfpvg","vnd.yamaha.smaf-audio":"saf","vnd.yamaha.smaf-phrase":"spf","vnd.yellowriver-custom-menu":"cmp","vnd.zul":["zir","zirz"],"vnd.zzazz.deck+xml":"zaz","voicexml+xml":"vxml",widget:"wgt",winhlp:"hlp","wsdl+xml":"wsdl","wspolicy+xml":"wspolicy","x-ace-compressed":"ace","x-authorware-bin":["aab","x32","u32","vox"],"x-authorware-map":"aam","x-authorware-seg":"aas","x-blorb":["blb","blorb"],"x-bzip":"bz","x-bzip2":["bz2","boz"],"x-cfs-compressed":"cfs","x-chat":"chat","x-conference":"nsc","x-dgc-compressed":"dgc","x-dtbncx+xml":"ncx","x-dtbook+xml":"dtb","x-dtbresource+xml":"res","x-eva":"eva","x-font-bdf":"bdf","x-font-ghostscript":"gsf","x-font-linux-psf":"psf","x-font-pcf":"pcf","x-font-snf":"snf","x-font-ttf":["ttf","ttc"],"x-font-type1":["pfa","pfb","pfm","afm"],"x-freearc":"arc","x-gca-compressed":"gca","x-glulx":"ulx","x-gramps-xml":"gramps","x-install-instructions":"install","x-lzh-compressed":["lzh","lha"],"x-mie":"mie","x-mobipocket-ebook":["prc","mobi"],"x-ms-application":"application","x-ms-shortcut":"lnk","x-ms-xbap":"xbap","x-msbinder":"obd","x-mscardfile":"crd","x-msclip":"clp","application/x-ms-installer":"msi","x-msmediaview":["mvb","m13","m14"],"x-msmetafile":["wmf","wmz","emf","emz"],"x-msmoney":"mny","x-mspublisher":"pub","x-msschedule":"scd","x-msterminal":"trm","x-mswrite":"wri","x-nzb":"nzb","x-pkcs12":["p12","pfx"],"x-pkcs7-certificates":["p7b","spc"],"x-research-info-systems":"ris","x-silverlight-app":"xap","x-sql":"sql","x-stuffitx":"sitx","x-subrip":"srt","x-t3vm-image":"t3","x-tex-tfm":"tfm","x-tgif":"obj","x-xliff+xml":"xlf","x-xz":"xz","x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"xaml+xml":"xaml","xcap-diff+xml":"xdf","xenc+xml":"xenc","xml-dtd":"dtd","xop+xml":"xop","xproc+xml":"xpl","xslt+xml":"xslt","xv+xml":["mxml","xhvml","xvml","xvm"],yang:"yang","yin+xml":"yin",envoy:"evy",fractals:"fif","internet-property-stream":"acx",olescript:"axs","vnd.ms-outlook":"msg","vnd.ms-pkicertstore":"sst","x-compress":"z","x-perfmon":["pma","pmc","pmr","pmw"],"ynd.ms-pkipko":"pko",gzip:["gz","tgz"],"smil+xml":["smi","smil"],"vnd.debian.binary-package":["deb","udeb"],"vnd.hzn-3d-crossword":"x3d","vnd.sqlite3":["db","sqlite","sqlite3","db-wal","sqlite-wal","db-shm","sqlite-shm"],"vnd.wap.sic":"sic","vnd.wap.slc":"slc","x-krita":["kra","krz"],"x-perl":["pm","pl"],yaml:["yaml","yml"]},audio:{amr:"amr","amr-wb":"awb",annodex:"axa",basic:["au","snd"],flac:"flac",midi:["mid","midi","kar","rmi"],mpeg:["mpga","mpega","mp3","m4a","mp2a","m2a","m3a"],mpegurl:"m3u",ogg:["oga","ogg","spx"],"prs.sid":"sid","x-aiff":"aifc","x-gsm":"gsm","x-ms-wma":"wma","x-ms-wax":"wax","x-pn-realaudio":"ram","x-realaudio":"ra","x-sd2":"sd2",adpcm:"adp",mp4:"mp4a",s3m:"s3m",silk:"sil","vnd.dece.audio":["uva","uvva"],"vnd.digital-winds":"eol","vnd.dra":"dra","vnd.dts":"dts","vnd.dts.hd":"dtshd","vnd.lucent.voice":"lvp","vnd.ms-playready.media.pya":"pya","vnd.nuera.ecelp4800":"ecelp4800","vnd.nuera.ecelp7470":"ecelp7470","vnd.nuera.ecelp9600":"ecelp9600","vnd.rip":"rip",webm:"weba","x-caf":"caf","x-matroska":"mka","x-pn-realaudio-plugin":"rmp",xm:"xm",aac:"aac",aiff:["aiff","aif","aff"],opus:"opus",wav:"wav"},chemical:{"x-alchemy":"alc","x-cache":["cac","cache"],"x-cache-csf":"csf","x-cactvs-binary":["cbin","cascii","ctab"],"x-cdx":"cdx","x-chem3d":"c3d","x-cif":"cif","x-cmdf":"cmdf","x-cml":"cml","x-compass":"cpa","x-crossfire":"bsd","x-csml":["csml","csm"],"x-ctx":"ctx","x-cxf":["cxf","cef"],"x-embl-dl-nucleotide":["emb","embl"],"x-gamess-input":["inp","gam","gamin"],"x-gaussian-checkpoint":["fch","fchk"],"x-gaussian-cube":"cub","x-gaussian-input":["gau","gjc","gjf"],"x-gaussian-log":"gal","x-gcg8-sequence":"gcg","x-genbank":"gen","x-hin":"hin","x-isostar":["istr","ist"],"x-jcamp-dx":["jdx","dx"],"x-kinemage":"kin","x-macmolecule":"mcm","x-macromodel-input":"mmod","x-mdl-molfile":"mol","x-mdl-rdfile":"rd","x-mdl-rxnfile":"rxn","x-mdl-sdfile":"sd","x-mdl-tgf":"tgf","x-mmcif":"mcif","x-mol2":"mol2","x-molconn-Z":"b","x-mopac-graph":"gpt","x-mopac-input":["mop","mopcrt","zmt"],"x-mopac-out":"moo","x-ncbi-asn1":"asn","x-ncbi-asn1-ascii":["prt","ent"],"x-ncbi-asn1-binary":"val","x-rosdal":"ros","x-swissprot":"sw","x-vamas-iso14976":"vms","x-vmd":"vmd","x-xtel":"xtel","x-xyz":"xyz"},font:{otf:"otf",woff:"woff",woff2:"woff2"},image:{gif:"gif",ief:"ief",jpeg:["jpeg","jpg","jpe","jfif","jfif-tbnl","jif"],pcx:"pcx",png:"png","svg+xml":["svg","svgz"],tiff:["tiff","tif"],"vnd.djvu":["djvu","djv"],"vnd.wap.wbmp":"wbmp","x-canon-cr2":"cr2","x-canon-crw":"crw","x-cmu-raster":"ras","x-coreldraw":"cdr","x-coreldrawpattern":"pat","x-coreldrawtemplate":"cdt","x-corelphotopaint":"cpt","x-epson-erf":"erf","x-icon":"ico","x-jg":"art","x-jng":"jng","x-nikon-nef":"nef","x-olympus-orf":"orf","x-portable-anymap":"pnm","x-portable-bitmap":"pbm","x-portable-graymap":"pgm","x-portable-pixmap":"ppm","x-rgb":"rgb","x-xbitmap":"xbm","x-xpixmap":"xpm","x-xwindowdump":"xwd",bmp:"bmp",cgm:"cgm",g3fax:"g3",ktx:"ktx","prs.btif":"btif",sgi:"sgi","vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"vnd.dwg":"dwg","vnd.dxf":"dxf","vnd.fastbidsheet":"fbs","vnd.fpx":"fpx","vnd.fst":"fst","vnd.fujixerox.edmics-mmr":"mmr","vnd.fujixerox.edmics-rlc":"rlc","vnd.ms-modi":"mdi","vnd.ms-photo":"wdp","vnd.net-fpx":"npx","vnd.xiff":"xif",webp:"webp","x-3ds":"3ds","x-cmx":"cmx","x-freehand":["fh","fhc","fh4","fh5","fh7"],"x-pict":["pic","pct"],"x-tga":"tga","cis-cod":"cod",avif:"avifs",heic:["heif","heic"],pjpeg:["pjpg"],"vnd.adobe.photoshop":"psd","x-adobe-dng":"dng","x-fuji-raf":"raf","x-icns":"icns","x-kodak-dcr":"dcr","x-kodak-k25":"k25","x-kodak-kdc":"kdc","x-minolta-mrw":"mrw","x-panasonic-raw":["raw","rw2","rwl"],"x-pentax-pef":["pef","ptx"],"x-sigma-x3f":"x3f","x-sony-arw":"arw","x-sony-sr2":"sr2","x-sony-srf":"srf"},message:{rfc822:["eml","mime","mht","mhtml","nws"]},model:{iges:["igs","iges"],mesh:["msh","mesh","silo"],vrml:["wrl","vrml"],"x3d+vrml":["x3dv","x3dvz"],"x3d+xml":"x3dz","x3d+binary":["x3db","x3dbz"],"vnd.collada+xml":"dae","vnd.dwf":"dwf","vnd.gdl":"gdl","vnd.gtw":"gtw","vnd.mts":"mts","vnd.usdz+zip":"usdz","vnd.vtu":"vtu"},text:{"cache-manifest":["manifest","appcache"],calendar:["ics","icz","ifb"],css:"css",csv:"csv",h323:"323",html:["html","htm","shtml","stm"],iuls:"uls",plain:["txt","text","brf","conf","def","list","log","in","bas","diff","ksh"],richtext:"rtx",scriptlet:["sct","wsc"],texmacs:"tm","tab-separated-values":"tsv","vnd.sun.j2me.app-descriptor":"jad","vnd.wap.wml":"wml","vnd.wap.wmlscript":"wmls","x-bibtex":"bib","x-boo":"boo","x-c++hdr":["h++","hpp","hxx","hh"],"x-c++src":["c++","cpp","cxx","cc"],"x-component":"htc","x-dsrc":"d","x-diff":"patch","x-haskell":"hs","x-java":"java","x-literate-haskell":"lhs","x-moc":"moc","x-pascal":["p","pas","pp","inc"],"x-pcs-gcd":"gcd","x-python":"py","x-scala":"scala","x-setext":"etx","x-tcl":["tcl","tk"],"x-tex":["tex","ltx","sty","cls"],"x-vcalendar":"vcs","x-vcard":"vcf",n3:"n3","prs.lines.tag":"dsc",sgml:["sgml","sgm"],troff:["t","tr","roff","man","me","ms"],turtle:"ttl","uri-list":["uri","uris","urls"],vcard:"vcard","vnd.curl":"curl","vnd.curl.dcurl":"dcurl","vnd.curl.scurl":"scurl","vnd.curl.mcurl":"mcurl","vnd.dvb.subtitle":"sub","vnd.fly":"fly","vnd.fmi.flexstor":"flx","vnd.graphviz":"gv","vnd.in3d.3dml":"3dml","vnd.in3d.spot":"spot","x-asm":["s","asm"],"x-c":["c","h","dic"],"x-fortran":["f","for","f77","f90"],"x-opml":"opml","x-nfo":"nfo","x-sfv":"sfv","x-uuencode":"uu",webviewhtml:"htt",javascript:"js",json:"json",markdown:["md","markdown","mdown","markdn"],"vnd.wap.si":"si","vnd.wap.sl":"sl"},video:{avif:"avif","3gpp":"3gp",annodex:"axv",dl:"dl",dv:["dif","dv"],fli:"fli",gl:"gl",mpeg:["mpeg","mpg","mpe","m1v","m2v","mp2","mpa","mpv2"],mp4:["mp4","mp4v","mpg4"],quicktime:["qt","mov"],ogg:"ogv","vnd.mpegurl":["mxu","m4u"],"x-flv":"flv","x-la-asf":["lsf","lsx"],"x-mng":"mng","x-ms-asf":["asf","asx","asr"],"x-ms-wm":"wm","x-ms-wmv":"wmv","x-ms-wmx":"wmx","x-ms-wvx":"wvx","x-msvideo":"avi","x-sgi-movie":"movie","x-matroska":["mpv","mkv","mk3d","mks"],"3gpp2":"3g2",h261:"h261",h263:"h263",h264:"h264",jpeg:"jpgv",jpm:["jpm","jpgm"],mj2:["mj2","mjp2"],"vnd.dece.hd":["uvh","uvvh"],"vnd.dece.mobile":["uvm","uvvm"],"vnd.dece.pd":["uvp","uvvp"],"vnd.dece.sd":["uvs","uvvs"],"vnd.dece.video":["uvv","uvvv"],"vnd.dvb.file":"dvb","vnd.fvt":"fvt","vnd.ms-playready.media.pyv":"pyv","vnd.uvvu.mp4":["uvu","uvvu"],"vnd.vivo":"viv",webm:"webm","x-f4v":"f4v","x-m4v":"m4v","x-ms-vob":"vob","x-smv":"smv",mp2t:"ts"},"x-conference":{"x-cooltalk":"ice"},"x-world":{"x-vrml":["vrm","flr","wrz","xaf","xof"]}};(()=>{const E={};for(const x of Object.keys(yt))for(const e of Object.keys(yt[x])){const t=yt[x][e];if(typeof t=="string")E[t]=x+"/"+e;else for(let n=0;n<t.length;n++)E[t[n]]=x+"/"+e}return E})();const i6=[];for(let E=0;E<256;E++){let x=E;for(let e=0;e<8;e++)x&1?x=x>>>1^3988292384:x=x>>>1;i6[E]=x}class LE{constructor(x){this.crc=x||-1}append(x){let e=this.crc|0;for(let t=0,n=x.length|0;t<n;t++)e=e>>>8^i6[(e^x[t])&255];this.crc=e}get(){return~this.crc}}class r6 extends TransformStream{constructor(){let x;const e=new LE;super({transform(t,n){e.append(t),n.enqueue(t)},flush(){const t=new Uint8Array(4);new DataView(t.buffer).setUint32(0,e.get()),x.value=t}}),x=this}}function U7(E){if(typeof TextEncoder>"u"){E=unescape(encodeURIComponent(E));const x=new Uint8Array(E.length);for(let e=0;e<x.length;e++)x[e]=E.charCodeAt(e);return x}else return new TextEncoder().encode(E)}const d0={concat(E,x){if(E.length===0||x.length===0)return E.concat(x);const e=E[E.length-1],t=d0.getPartial(e);return t===32?E.concat(x):d0._shiftRight(x,t,e|0,E.slice(0,E.length-1))},bitLength(E){const x=E.length;if(x===0)return 0;const e=E[x-1];return(x-1)*32+d0.getPartial(e)},clamp(E,x){if(E.length*32<x)return E;E=E.slice(0,Math.ceil(x/32));const e=E.length;return x=x&31,e>0&&x&&(E[e-1]=d0.partial(x,E[e-1]&2147483648>>x-1,1)),E},partial(E,x,e){return E===32?x:(e?x|0:x<<32-E)+E*1099511627776},getPartial(E){return Math.round(E/1099511627776)||32},_shiftRight(E,x,e,t){for(t===void 0&&(t=[]);x>=32;x-=32)t.push(e),e=0;if(x===0)return t.concat(E);for(let r=0;r<E.length;r++)t.push(e|E[r]>>>x),e=E[r]<<32-x;const n=E.length?E[E.length-1]:0,i=d0.getPartial(n);return t.push(d0.partial(x+i&31,x+i>32?e:t.pop(),1)),t}},NE={bytes:{fromBits(E){const e=d0.bitLength(E)/8,t=new Uint8Array(e);let n;for(let i=0;i<e;i++)i&3||(n=E[i/4]),t[i]=n>>>24,n<<=8;return t},toBits(E){const x=[];let e,t=0;for(e=0;e<E.length;e++)t=t<<8|E[e],(e&3)===3&&(x.push(t),t=0);return e&3&&x.push(d0.partial(8*(e&3),t)),x}}},A6={};A6.sha1=class{constructor(E){const x=this;x.blockSize=512,x._init=[1732584193,4023233417,2562383102,271733878,3285377520],x._key=[1518500249,1859775393,2400959708,3395469782],E?(x._h=E._h.slice(0),x._buffer=E._buffer.slice(0),x._length=E._length):x.reset()}reset(){const E=this;return E._h=E._init.slice(0),E._buffer=[],E._length=0,E}update(E){const x=this;typeof E=="string"&&(E=NE.utf8String.toBits(E));const e=x._buffer=d0.concat(x._buffer,E),t=x._length,n=x._length=t+d0.bitLength(E);if(n>9007199254740991)throw new Error("Cannot hash more than 2^53 - 1 bits");const i=new Uint32Array(e);let r=0;for(let A=x.blockSize+t-(x.blockSize+t&x.blockSize-1);A<=n;A+=x.blockSize)x._block(i.subarray(16*r,16*(r+1))),r+=1;return e.splice(0,16*r),x}finalize(){const E=this;let x=E._buffer;const e=E._h;x=d0.concat(x,[d0.partial(1,1)]);for(let t=x.length+2;t&15;t++)x.push(0);for(x.push(Math.floor(E._length/4294967296)),x.push(E._length|0);x.length;)E._block(x.splice(0,16));return E.reset(),e}_f(E,x,e,t){if(E<=19)return x&e|~x&t;if(E<=39)return x^e^t;if(E<=59)return x&e|x&t|e&t;if(E<=79)return x^e^t}_S(E,x){return x<<E|x>>>32-E}_block(E){const x=this,e=x._h,t=Array(80);for(let B=0;B<16;B++)t[B]=E[B];let n=e[0],i=e[1],r=e[2],A=e[3],s=e[4];for(let B=0;B<=79;B++){B>=16&&(t[B]=x._S(1,t[B-3]^t[B-8]^t[B-14]^t[B-16]));const o=x._S(5,n)+x._f(B,i,r,A)+s+t[B]+x._key[Math.floor(B/20)]|0;s=A,A=r,r=x._S(30,i),i=n,n=o}e[0]=e[0]+n|0,e[1]=e[1]+i|0,e[2]=e[2]+r|0,e[3]=e[3]+A|0,e[4]=e[4]+s|0}};const s6={};s6.aes=class{constructor(E){const x=this;x._tables=[[[],[],[],[],[]],[[],[],[],[],[]]],x._tables[0][0][0]||x._precompute();const e=x._tables[0][4],t=x._tables[1],n=E.length;let i,r,A,s=1;if(n!==4&&n!==6&&n!==8)throw new Error("invalid aes key size");for(x._key=[r=E.slice(0),A=[]],i=n;i<4*n+28;i++){let B=r[i-1];(i%n===0||n===8&&i%n===4)&&(B=e[B>>>24]<<24^e[B>>16&255]<<16^e[B>>8&255]<<8^e[B&255],i%n===0&&(B=B<<8^B>>>24^s<<24,s=s<<1^(s>>7)*283)),r[i]=r[i-n]^B}for(let B=0;i;B++,i--){const o=r[B&3?i:i-4];i<=4||B<4?A[B]=o:A[B]=t[0][e[o>>>24]]^t[1][e[o>>16&255]]^t[2][e[o>>8&255]]^t[3][e[o&255]]}}encrypt(E){return this._crypt(E,0)}decrypt(E){return this._crypt(E,1)}_precompute(){const E=this._tables[0],x=this._tables[1],e=E[4],t=x[4],n=[],i=[];let r,A,s,B;for(let o=0;o<256;o++)i[(n[o]=o<<1^(o>>7)*283)^o]=o;for(let o=r=0;!e[o];o^=A||1,r=i[r]||1){let a=r^r<<1^r<<2^r<<3^r<<4;a=a>>8^a&255^99,e[o]=a,t[a]=o,B=n[s=n[A=n[o]]];let f=B*16843009^s*65537^A*257^o*16843008,F=n[a]*257^a*16843008;for(let h=0;h<4;h++)E[h][o]=F=F<<24^F>>>8,x[h][a]=f=f<<24^f>>>8}for(let o=0;o<5;o++)E[o]=E[o].slice(0),x[o]=x[o].slice(0)}_crypt(E,x){if(E.length!==4)throw new Error("invalid aes block size");const e=this._key[x],t=e.length/4-2,n=[0,0,0,0],i=this._tables[x],r=i[0],A=i[1],s=i[2],B=i[3],o=i[4];let a=E[0]^e[0],f=E[x?3:1]^e[1],F=E[2]^e[2],h=E[x?1:3]^e[3],l=4,c,u,C;for(let d=0;d<t;d++)c=r[a>>>24]^A[f>>16&255]^s[F>>8&255]^B[h&255]^e[l],u=r[f>>>24]^A[F>>16&255]^s[h>>8&255]^B[a&255]^e[l+1],C=r[F>>>24]^A[h>>16&255]^s[a>>8&255]^B[f&255]^e[l+2],h=r[h>>>24]^A[a>>16&255]^s[f>>8&255]^B[F&255]^e[l+3],l+=4,a=c,f=u,F=C;for(let d=0;d<4;d++)n[x?3&-d:d]=o[a>>>24]<<24^o[f>>16&255]<<16^o[F>>8&255]<<8^o[h&255]^e[l++],c=a,a=f,f=F,F=h,h=c;return n}};const P7={getRandomValues(E){const x=new Uint32Array(E.buffer),e=t=>{let n=987654321;const i=4294967295;return function(){return n=36969*(n&65535)+(n>>16)&i,t=18e3*(t&65535)+(t>>16)&i,(((n<<16)+t&i)/4294967296+.5)*(Math.random()>.5?1:-1)}};for(let t=0,n;t<E.length;t+=4){const i=e((n||Math.random())*4294967296);n=i()*987654071,x[t/4]=i()*4294967296|0}return E}},B6={};B6.ctrGladman=class{constructor(E,x){this._prf=E,this._initIv=x,this._iv=x}reset(){this._iv=this._initIv}update(E){return this.calculate(this._prf,E,this._iv)}incWord(E){if((E>>24&255)===255){let x=E>>16&255,e=E>>8&255,t=E&255;x===255?(x=0,e===255?(e=0,t===255?t=0:++t):++e):++x,E=0,E+=x<<16,E+=e<<8,E+=t}else E+=1<<24;return E}incCounter(E){(E[0]=this.incWord(E[0]))===0&&(E[1]=this.incWord(E[1]))}calculate(E,x,e){let t;if(!(t=x.length))return[];const n=d0.bitLength(x);for(let i=0;i<t;i+=4){this.incCounter(e);const r=E.encrypt(e);x[i]^=r[0],x[i+1]^=r[1],x[i+2]^=r[2],x[i+3]^=r[3]}return d0.clamp(x,n)}};const jx={importKey(E){return new jx.hmacSha1(NE.bytes.toBits(E))},pbkdf2(E,x,e,t){if(e=e||1e4,t<0||e<0)throw new Error("invalid params to pbkdf2");const n=(t>>5)+1<<2;let i,r,A,s,B;const o=new ArrayBuffer(n),a=new DataView(o);let f=0;const F=d0;for(x=NE.bytes.toBits(x),B=1;f<(n||1);B++){for(i=r=E.encrypt(F.concat(x,[B])),A=1;A<e;A++)for(r=E.encrypt(r),s=0;s<r.length;s++)i[s]^=r[s];for(A=0;f<(n||1)&&A<i.length;A++)a.setInt32(f,i[A]),f+=4}return o.slice(0,t/8)}};jx.hmacSha1=class{constructor(E){const x=this,e=x._hash=A6.sha1,t=[[],[]];x._baseHash=[new e,new e];const n=x._baseHash[0].blockSize/32;E.length>n&&(E=new e().update(E).finalize());for(let i=0;i<n;i++)t[0][i]=E[i]^909522486,t[1][i]=E[i]^1549556828;x._baseHash[0].update(t[0]),x._baseHash[1].update(t[1]),x._resultHash=new e(x._baseHash[0])}reset(){const E=this;E._resultHash=new E._hash(E._baseHash[0]),E._updated=!1}update(E){const x=this;x._updated=!0,x._resultHash.update(E)}digest(){const E=this,x=E._resultHash.finalize(),e=new E._hash(E._baseHash[1]).update(x).finalize();return E.reset(),e}encrypt(E){if(this._updated)throw new Error("encrypt on already updated hmac called!");return this.update(E),this.digest(E)}};const $7=typeof crypto<"u"&&typeof crypto.getRandomValues=="function",o6="Invalid password",a6="Invalid signature",k8="zipjs-abort-check-password";function l6(E){return $7?crypto.getRandomValues(E):P7.getRandomValues(E)}const ne=16,j7="raw",c6={name:"PBKDF2"},W7={name:"HMAC"},V7="SHA-1",H7=Object.assign({hash:W7},c6),Jt=Object.assign({iterations:1e3,hash:{name:V7}},c6),q7=["deriveBits"],Me=[8,12,16],ke=[16,24,32],Fx=10,K7=[0,0,0,0],f6="undefined",u6="function",QE=typeof crypto!=f6,ze=QE&&crypto.subtle,d6=QE&&typeof ze!=f6,X0=NE.bytes,Y7=s6.aes,J7=B6.ctrGladman,G7=jx.hmacSha1;let l9=QE&&d6&&typeof ze.importKey==u6,c9=QE&&d6&&typeof ze.deriveBits==u6;class Z7 extends TransformStream{constructor({password:x,signed:e,encryptionStrength:t,checkPasswordOnly:n}){super({start(){Object.assign(this,{ready:new Promise(i=>this.resolveReady=i),password:x,signed:e,strength:t-1,pending:new Uint8Array})},async transform(i,r){const A=this,{password:s,strength:B,resolveReady:o,ready:a}=A;s?(await z7(A,B,s,L0(i,0,Me[B]+2)),i=L0(i,Me[B]+2),n?r.error(new Error(k8)):o()):await a;const f=new Uint8Array(i.length-Fx-(i.length-Fx)%ne);r.enqueue(C6(A,i,f,0,Fx,!0))},async flush(i){const{signed:r,ctr:A,hmac:s,pending:B,ready:o}=this;if(s&&A){await o;const a=L0(B,0,B.length-Fx),f=L0(B,B.length-Fx);let F=new Uint8Array;if(a.length){const h=Pe(X0,a);s.update(h);const l=A.update(h);F=Ue(X0,l)}if(r){const h=L0(Ue(X0,s.digest()),0,Fx);for(let l=0;l<Fx;l++)if(h[l]!=f[l])throw new Error(a6)}i.enqueue(F)}}})}}class X7 extends TransformStream{constructor({password:x,encryptionStrength:e}){let t;super({start(){Object.assign(this,{ready:new Promise(n=>this.resolveReady=n),password:x,strength:e-1,pending:new Uint8Array})},async transform(n,i){const r=this,{password:A,strength:s,resolveReady:B,ready:o}=r;let a=new Uint8Array;A?(a=await Q7(r,s,A),B()):await o;const f=new Uint8Array(a.length+n.length-n.length%ne);f.set(a,0),i.enqueue(C6(r,n,f,a.length,0))},async flush(n){const{ctr:i,hmac:r,pending:A,ready:s}=this;if(r&&i){await s;let B=new Uint8Array;if(A.length){const o=i.update(Pe(X0,A));r.update(o),B=Ue(X0,o)}t.signature=Ue(X0,r.digest()).slice(0,Fx),n.enqueue(O8(B,t.signature))}}}),t=this}}function C6(E,x,e,t,n,i){const{ctr:r,hmac:A,pending:s}=E,B=x.length-n;s.length&&(x=O8(s,x),e=Eo(e,B-B%ne));let o;for(o=0;o<=B-ne;o+=ne){const a=Pe(X0,L0(x,o,o+ne));i&&A.update(a);const f=r.update(a);i||A.update(f),e.set(Ue(X0,f),o+t)}return E.pending=L0(x,o),e}async function z7(E,x,e,t){const n=await F6(E,x,e,L0(t,0,Me[x])),i=L0(t,Me[x]);if(n[0]!=i[0]||n[1]!=i[1])throw new Error(o6)}async function Q7(E,x,e){const t=l6(new Uint8Array(Me[x])),n=await F6(E,x,e,t);return O8(t,n)}async function F6(E,x,e,t){E.password=null;const n=U7(e),i=await xo(j7,n,H7,!1,q7),r=await eo(Object.assign({salt:t},Jt),i,8*(ke[x]*2+2)),A=new Uint8Array(r),s=Pe(X0,L0(A,0,ke[x])),B=Pe(X0,L0(A,ke[x],ke[x]*2)),o=L0(A,ke[x]*2);return Object.assign(E,{keys:{key:s,authentication:B,passwordVerification:o},ctr:new J7(new Y7(s),Array.from(K7)),hmac:new G7(B)}),o}async function xo(E,x,e,t,n){if(l9)try{return await ze.importKey(E,x,e,t,n)}catch{return l9=!1,jx.importKey(x)}else return jx.importKey(x)}async function eo(E,x,e){if(c9)try{return await ze.deriveBits(E,x,e)}catch{return c9=!1,jx.pbkdf2(x,E.salt,Jt.iterations,e)}else return jx.pbkdf2(x,E.salt,Jt.iterations,e)}function O8(E,x){let e=E;return E.length+x.length&&(e=new Uint8Array(E.length+x.length),e.set(E,0),e.set(x,E.length)),e}function Eo(E,x){if(x&&x>E.length){const e=E;E=new Uint8Array(x),E.set(e,0)}return E}function L0(E,x,e){return E.subarray(x,e)}function Ue(E,x){return E.fromBits(x)}function Pe(E,x){return E.toBits(x)}const ie=12;class to extends TransformStream{constructor({password:x,passwordVerification:e,checkPasswordOnly:t}){super({start(){Object.assign(this,{password:x,passwordVerification:e}),h6(this,x)},transform(n,i){const r=this;if(r.password){const A=f9(r,n.subarray(0,ie));if(r.password=null,A[ie-1]!=r.passwordVerification)throw new Error(o6);n=n.subarray(ie)}t?i.error(new Error(k8)):i.enqueue(f9(r,n))}})}}class no extends TransformStream{constructor({password:x,passwordVerification:e}){super({start(){Object.assign(this,{password:x,passwordVerification:e}),h6(this,x)},transform(t,n){const i=this;let r,A;if(i.password){i.password=null;const s=l6(new Uint8Array(ie));s[ie-1]=i.passwordVerification,r=new Uint8Array(t.length+s.length),r.set(u9(i,s),0),A=ie}else r=new Uint8Array(t.length),A=0;r.set(u9(i,t),A),n.enqueue(r)}})}}function f9(E,x){const e=new Uint8Array(x.length);for(let t=0;t<x.length;t++)e[t]=D6(E)^x[t],I8(E,e[t]);return e}function u9(E,x){const e=new Uint8Array(x.length);for(let t=0;t<x.length;t++)e[t]=D6(E)^x[t],I8(E,x[t]);return e}function h6(E,x){const e=[305419896,591751049,878082192];Object.assign(E,{keys:e,crcKey0:new LE(e[0]),crcKey2:new LE(e[2])});for(let t=0;t<x.length;t++)I8(E,x.charCodeAt(t))}function I8(E,x){let[e,t,n]=E.keys;E.crcKey0.append([x]),e=~E.crcKey0.get(),t=d9(Math.imul(d9(t+p6(e)),134775813)+1),E.crcKey2.append([t>>>24]),n=~E.crcKey2.get(),E.keys=[e,t,n]}function D6(E){const x=E.keys[2]|2;return p6(Math.imul(x,x^1)>>>8)}function p6(E){return E&255}function d9(E){return E&4294967295}const C9="deflate-raw";class io extends TransformStream{constructor(x,{chunkSize:e,CompressionStream:t,CompressionStreamNative:n}){super({});const{compressed:i,encrypted:r,useCompressionStream:A,zipCrypto:s,signed:B,level:o}=x,a=this;let f,F,h=m6(super.readable);(!r||s)&&B&&(f=new r6,h=z0(h,f)),i&&(h=_6(h,A,{level:o,chunkSize:e},n,t)),r&&(s?h=z0(h,new no(x)):(F=new X7(x),h=z0(h,F))),g6(a,h,()=>{let l;r&&!s&&(l=F.signature),(!r||s)&&B&&(l=new DataView(f.value.buffer).getUint32(0)),a.signature=l})}}class ro extends TransformStream{constructor(x,{chunkSize:e,DecompressionStream:t,DecompressionStreamNative:n}){super({});const{zipCrypto:i,encrypted:r,signed:A,signature:s,compressed:B,useCompressionStream:o}=x;let a,f,F=m6(super.readable);r&&(i?F=z0(F,new to(x)):(f=new Z7(x),F=z0(F,f))),B&&(F=_6(F,o,{chunkSize:e},n,t)),(!r||i)&&A&&(a=new r6,F=z0(F,a)),g6(this,F,()=>{if((!r||i)&&A){const h=new DataView(a.value.buffer);if(s!=h.getUint32(0,!1))throw new Error(a6)}})}}function m6(E){return z0(E,new TransformStream({transform(x,e){x&&x.length&&e.enqueue(x)}}))}function g6(E,x,e){x=z0(x,new TransformStream({flush:e})),Object.defineProperty(E,"readable",{get(){return x}})}function _6(E,x,e,t,n){try{const i=x&&t?t:n;E=z0(E,new i(C9,e))}catch(i){if(x)E=z0(E,new n(C9,e));else throw i}return E}function z0(E,x){return E.pipeThrough(x)}const Ao="message",so="start",Bo="pull",F9="data",oo="ack",ao="close",lo="deflate",v6="inflate";class co extends TransformStream{constructor(x,e){super({});const t=this,{codecType:n}=x;let i;n.startsWith(lo)?i=io:n.startsWith(v6)&&(i=ro);let r=0;const A=new i(x,e),s=super.readable,B=new TransformStream({transform(o,a){o&&o.length&&(r+=o.length,a.enqueue(o))},flush(){const{signature:o}=A;Object.assign(t,{signature:o,size:r})}});Object.defineProperty(t,"readable",{get(){return s.pipeThrough(A).pipeThrough(B)}})}}const fo=typeof Worker!=IE;class Tt{constructor(x,{readable:e,writable:t},{options:n,config:i,streamOptions:r,useWebWorkers:A,transferStreams:s,scripts:B},o){const{signal:a}=r;return Object.assign(x,{busy:!0,readable:e.pipeThrough(new uo(e,r,i),{signal:a}),writable:t,options:Object.assign({},n),scripts:B,transferStreams:s,terminate(){const{worker:f,busy:F}=x;f&&!F&&(f.terminate(),x.interface=null)},onTaskFinished(){x.busy=!1,o(x)}}),(A&&fo?Fo:Co)(x,i)}}class uo extends TransformStream{constructor(x,{onstart:e,onprogress:t,size:n,onend:i},{chunkSize:r}){let A=0;super({start(){e&&St(e,n)},async transform(s,B){A+=s.length,t&&await St(t,A,n),B.enqueue(s)},flush(){x.size=A,i&&St(i,A)}},{highWaterMark:1,size:()=>r})}}async function St(E,...x){try{await E(...x)}catch{}}function Co(E,x){return{run:()=>ho(E,x)}}function Fo(E,{baseURL:x,chunkSize:e}){return E.interface||Object.assign(E,{worker:mo(E.scripts[0],x,E),interface:{run:()=>Do(E,{chunkSize:e})}}),E.interface}async function ho({options:E,readable:x,writable:e,onTaskFinished:t},n){const i=new co(E,n);try{await x.pipeThrough(i).pipeTo(e,{preventClose:!0,preventAbort:!0});const{signature:r,size:A}=i;return{signature:r,size:A}}finally{t()}}async function Do(E,x){let e,t;const n=new Promise((f,F)=>{e=f,t=F});Object.assign(E,{reader:null,writer:null,resolveResult:e,rejectResult:t,result:n});const{readable:i,options:r,scripts:A}=E,{writable:s,closed:B}=po(E.writable);Gt({type:so,scripts:A.slice(1),options:r,config:x,readable:i,writable:s},E)||Object.assign(E,{reader:i.getReader(),writer:s.getWriter()});const a=await n;try{await s.getWriter().close()}catch{}return await B,a}function po(E){const x=E.getWriter();let e;const t=new Promise(i=>e=i);return{writable:new WritableStream({async write(i){await x.ready,await x.write(i)},close(){x.releaseLock(),e()},abort(i){return x.abort(i)}}),closed:t}}let h9=!0,D9=!0;function mo(E,x,e){const t={type:"module"};let n,i;typeof E==t6&&(E=E());try{n=new URL(E,x)}catch{n=E}if(h9)try{i=new Worker(n)}catch{h9=!1,i=new Worker(n,t)}else i=new Worker(n,t);return i.addEventListener(Ao,r=>go(r,e)),i}function Gt(E,{worker:x,writer:e,onTaskFinished:t,transferStreams:n}){try{let{value:i,readable:r,writable:A}=E;const s=[];if(i&&(E.value=i.buffer,s.push(E.value)),n&&D9?(r&&s.push(r),A&&s.push(A)):E.readable=E.writable=null,s.length)try{return x.postMessage(E,s),!0}catch{D9=!1,E.readable=E.writable=null,x.postMessage(E)}else x.postMessage(E)}catch(i){throw e&&e.releaseLock(),t(),i}}async function go({data:E},x){const{type:e,value:t,messageId:n,result:i,error:r}=E,{reader:A,writer:s,resolveResult:B,rejectResult:o,onTaskFinished:a}=x;try{if(r){const{message:F,stack:h,code:l,name:c}=r,u=new Error(F);Object.assign(u,{stack:h,code:l,name:c}),f(u)}else{if(e==Bo){const{value:F,done:h}=await A.read();Gt({type:F9,value:F,done:h,messageId:n},x)}e==F9&&(await s.ready,await s.write(new Uint8Array(t)),Gt({type:oo,messageId:n},x)),e==ao&&f(null,i)}}catch(F){f(F)}function f(F,h){F?o(F):B(h),s&&s.releaseLock(),a()}}let Ox=[];const kt=[];let p9=0;async function _o(E,x){const{options:e,config:t}=x,{transferStreams:n,useWebWorkers:i,useCompressionStream:r,codecType:A,compressed:s,signed:B,encrypted:o}=e,{workerScripts:a,maxWorkers:f,terminateWorkerTimeout:F}=t;x.transferStreams=n||n===H0;const h=!s&&!B&&!o&&!x.transferStreams;x.useWebWorkers=!h&&(i||i===H0&&t.useWebWorkers),x.scripts=x.useWebWorkers&&a?a[A]:[],e.useCompressionStream=r||r===H0&&t.useCompressionStream;let l;const c=Ox.find(C=>!C.busy);if(c)m9(c),l=new Tt(c,E,x,u);else if(Ox.length<f){const C={indexWorker:p9};p9++,Ox.push(C),l=new Tt(C,E,x,u)}else l=await new Promise(C=>kt.push({resolve:C,stream:E,workerOptions:x}));return l.run();function u(C){if(kt.length){const[{resolve:d,stream:m,workerOptions:g}]=kt.splice(0,1);d(new Tt(C,m,g,u))}else C.worker?(m9(C),Number.isFinite(F)&&F>=0&&(C.terminateTimeout=setTimeout(()=>{Ox=Ox.filter(d=>d!=C),C.terminate()},F))):Ox=Ox.filter(d=>d!=C)}}function m9(E){const{terminateTimeout:x}=E;x&&(clearTimeout(x),E.terminateTimeout=null)}function vo(E){const x=()=>URL.createObjectURL(new Blob([`const{Array:e,Object:t,Number:n,Math:r,Error:s,Uint8Array:i,Uint16Array:o,Uint32Array:c,Int32Array:f,Map:a,DataView:l,Promise:u,TextEncoder:w,crypto:h,postMessage:d,TransformStream:p,ReadableStream:y,WritableStream:m,CompressionStream:b,DecompressionStream:g}=self;class k{constructor(e){return class extends p{constructor(t,n){const r=new e(n);super({transform(e,t){t.enqueue(r.append(e))},flush(e){const t=r.flush();t&&e.enqueue(t)}})}}}}const v=[];for(let e=0;256>e;e++){let t=e;for(let e=0;8>e;e++)1&t?t=t>>>1^3988292384:t>>>=1;v[e]=t}class S{constructor(e){this.t=e||-1}append(e){let t=0|this.t;for(let n=0,r=0|e.length;r>n;n++)t=t>>>8^v[255&(t^e[n])];this.t=t}get(){return~this.t}}class z extends p{constructor(){let e;const t=new S;super({transform(e,n){t.append(e),n.enqueue(e)},flush(){const n=new i(4);new l(n.buffer).setUint32(0,t.get()),e.value=n}}),e=this}}const C={concat(e,t){if(0===e.length||0===t.length)return e.concat(t);const n=e[e.length-1],r=C.i(n);return 32===r?e.concat(t):C.o(t,r,0|n,e.slice(0,e.length-1))},l(e){const t=e.length;if(0===t)return 0;const n=e[t-1];return 32*(t-1)+C.i(n)},u(e,t){if(32*e.length<t)return e;const n=(e=e.slice(0,r.ceil(t/32))).length;return t&=31,n>0&&t&&(e[n-1]=C.h(t,e[n-1]&2147483648>>t-1,1)),e},h:(e,t,n)=>32===e?t:(n?0|t:t<<32-e)+1099511627776*e,i:e=>r.round(e/1099511627776)||32,o(e,t,n,r){for(void 0===r&&(r=[]);t>=32;t-=32)r.push(n),n=0;if(0===t)return r.concat(e);for(let s=0;s<e.length;s++)r.push(n|e[s]>>>t),n=e[s]<<32-t;const s=e.length?e[e.length-1]:0,i=C.i(s);return r.push(C.h(t+i&31,t+i>32?n:r.pop(),1)),r}},x={p:{m(e){const t=C.l(e)/8,n=new i(t);let r;for(let s=0;t>s;s++)0==(3&s)&&(r=e[s/4]),n[s]=r>>>24,r<<=8;return n},g(e){const t=[];let n,r=0;for(n=0;n<e.length;n++)r=r<<8|e[n],3==(3&n)&&(t.push(r),r=0);return 3&n&&t.push(C.h(8*(3&n),r)),t}}},_=class{constructor(e){const t=this;t.blockSize=512,t.k=[1732584193,4023233417,2562383102,271733878,3285377520],t.v=[1518500249,1859775393,2400959708,3395469782],e?(t.S=e.S.slice(0),t.C=e.C.slice(0),t._=e._):t.reset()}reset(){const e=this;return e.S=e.k.slice(0),e.C=[],e._=0,e}update(e){const t=this;"string"==typeof e&&(e=x.A.g(e));const n=t.C=C.concat(t.C,e),r=t._,i=t._=r+C.l(e);if(i>9007199254740991)throw new s("Cannot hash more than 2^53 - 1 bits");const o=new c(n);let f=0;for(let e=t.blockSize+r-(t.blockSize+r&t.blockSize-1);i>=e;e+=t.blockSize)t.I(o.subarray(16*f,16*(f+1))),f+=1;return n.splice(0,16*f),t}D(){const e=this;let t=e.C;const n=e.S;t=C.concat(t,[C.h(1,1)]);for(let e=t.length+2;15&e;e++)t.push(0);for(t.push(r.floor(e._/4294967296)),t.push(0|e._);t.length;)e.I(t.splice(0,16));return e.reset(),n}V(e,t,n,r){return e>19?e>39?e>59?e>79?void 0:t^n^r:t&n|t&r|n&r:t^n^r:t&n|~t&r}P(e,t){return t<<e|t>>>32-e}I(t){const n=this,s=n.S,i=e(80);for(let e=0;16>e;e++)i[e]=t[e];let o=s[0],c=s[1],f=s[2],a=s[3],l=s[4];for(let e=0;79>=e;e++){16>e||(i[e]=n.P(1,i[e-3]^i[e-8]^i[e-14]^i[e-16]));const t=n.P(5,o)+n.V(e,c,f,a)+l+i[e]+n.v[r.floor(e/20)]|0;l=a,a=f,f=n.P(30,c),c=o,o=t}s[0]=s[0]+o|0,s[1]=s[1]+c|0,s[2]=s[2]+f|0,s[3]=s[3]+a|0,s[4]=s[4]+l|0}},A={getRandomValues(e){const t=new c(e.buffer),n=e=>{let t=987654321;const n=4294967295;return()=>(t=36969*(65535&t)+(t>>16)&n,(((t<<16)+(e=18e3*(65535&e)+(e>>16)&n)&n)/4294967296+.5)*(r.random()>.5?1:-1))};for(let s,i=0;i<e.length;i+=4){const e=n(4294967296*(s||r.random()));s=987654071*e(),t[i/4]=4294967296*e()|0}return e}},I={importKey:e=>new I.R(x.p.g(e)),B(e,t,n,r){if(n=n||1e4,0>r||0>n)throw new s("invalid params to pbkdf2");const i=1+(r>>5)<<2;let o,c,f,a,u;const w=new ArrayBuffer(i),h=new l(w);let d=0;const p=C;for(t=x.p.g(t),u=1;(i||1)>d;u++){for(o=c=e.encrypt(p.concat(t,[u])),f=1;n>f;f++)for(c=e.encrypt(c),a=0;a<c.length;a++)o[a]^=c[a];for(f=0;(i||1)>d&&f<o.length;f++)h.setInt32(d,o[f]),d+=4}return w.slice(0,r/8)},R:class{constructor(e){const t=this,n=t.M=_,r=[[],[]];t.U=[new n,new n];const s=t.U[0].blockSize/32;e.length>s&&(e=(new n).update(e).D());for(let t=0;s>t;t++)r[0][t]=909522486^e[t],r[1][t]=1549556828^e[t];t.U[0].update(r[0]),t.U[1].update(r[1]),t.K=new n(t.U[0])}reset(){const e=this;e.K=new e.M(e.U[0]),e.N=!1}update(e){this.N=!0,this.K.update(e)}digest(){const e=this,t=e.K.D(),n=new e.M(e.U[1]).update(t).D();return e.reset(),n}encrypt(e){if(this.N)throw new s("encrypt on already updated hmac called!");return this.update(e),this.digest(e)}}},D=void 0!==h&&"function"==typeof h.getRandomValues,V="Invalid password",P="Invalid signature",R="zipjs-abort-check-password";function B(e){return D?h.getRandomValues(e):A.getRandomValues(e)}const E=16,M={name:"PBKDF2"},U=t.assign({hash:{name:"HMAC"}},M),K=t.assign({iterations:1e3,hash:{name:"SHA-1"}},M),N=["deriveBits"],O=[8,12,16],T=[16,24,32],W=10,j=[0,0,0,0],H="undefined",L="function",F=typeof h!=H,q=F&&h.subtle,G=F&&typeof q!=H,J=x.p,Q=class{constructor(e){const t=this;t.O=[[[],[],[],[],[]],[[],[],[],[],[]]],t.O[0][0][0]||t.T();const n=t.O[0][4],r=t.O[1],i=e.length;let o,c,f,a=1;if(4!==i&&6!==i&&8!==i)throw new s("invalid aes key size");for(t.v=[c=e.slice(0),f=[]],o=i;4*i+28>o;o++){let e=c[o-1];(o%i==0||8===i&&o%i==4)&&(e=n[e>>>24]<<24^n[e>>16&255]<<16^n[e>>8&255]<<8^n[255&e],o%i==0&&(e=e<<8^e>>>24^a<<24,a=a<<1^283*(a>>7))),c[o]=c[o-i]^e}for(let e=0;o;e++,o--){const t=c[3&e?o:o-4];f[e]=4>=o||4>e?t:r[0][n[t>>>24]]^r[1][n[t>>16&255]]^r[2][n[t>>8&255]]^r[3][n[255&t]]}}encrypt(e){return this.W(e,0)}decrypt(e){return this.W(e,1)}T(){const e=this.O[0],t=this.O[1],n=e[4],r=t[4],s=[],i=[];let o,c,f,a;for(let e=0;256>e;e++)i[(s[e]=e<<1^283*(e>>7))^e]=e;for(let l=o=0;!n[l];l^=c||1,o=i[o]||1){let i=o^o<<1^o<<2^o<<3^o<<4;i=i>>8^255&i^99,n[l]=i,r[i]=l,a=s[f=s[c=s[l]]];let u=16843009*a^65537*f^257*c^16843008*l,w=257*s[i]^16843008*i;for(let n=0;4>n;n++)e[n][l]=w=w<<24^w>>>8,t[n][i]=u=u<<24^u>>>8}for(let n=0;5>n;n++)e[n]=e[n].slice(0),t[n]=t[n].slice(0)}W(e,t){if(4!==e.length)throw new s("invalid aes block size");const n=this.v[t],r=n.length/4-2,i=[0,0,0,0],o=this.O[t],c=o[0],f=o[1],a=o[2],l=o[3],u=o[4];let w,h,d,p=e[0]^n[0],y=e[t?3:1]^n[1],m=e[2]^n[2],b=e[t?1:3]^n[3],g=4;for(let e=0;r>e;e++)w=c[p>>>24]^f[y>>16&255]^a[m>>8&255]^l[255&b]^n[g],h=c[y>>>24]^f[m>>16&255]^a[b>>8&255]^l[255&p]^n[g+1],d=c[m>>>24]^f[b>>16&255]^a[p>>8&255]^l[255&y]^n[g+2],b=c[b>>>24]^f[p>>16&255]^a[y>>8&255]^l[255&m]^n[g+3],g+=4,p=w,y=h,m=d;for(let e=0;4>e;e++)i[t?3&-e:e]=u[p>>>24]<<24^u[y>>16&255]<<16^u[m>>8&255]<<8^u[255&b]^n[g++],w=p,p=y,y=m,m=b,b=w;return i}},X=class{constructor(e,t){this.j=e,this.H=t,this.L=t}reset(){this.L=this.H}update(e){return this.F(this.j,e,this.L)}q(e){if(255==(e>>24&255)){let t=e>>16&255,n=e>>8&255,r=255&e;255===t?(t=0,255===n?(n=0,255===r?r=0:++r):++n):++t,e=0,e+=t<<16,e+=n<<8,e+=r}else e+=1<<24;return e}G(e){0===(e[0]=this.q(e[0]))&&(e[1]=this.q(e[1]))}F(e,t,n){let r;if(!(r=t.length))return[];const s=C.l(t);for(let s=0;r>s;s+=4){this.G(n);const r=e.encrypt(n);t[s]^=r[0],t[s+1]^=r[1],t[s+2]^=r[2],t[s+3]^=r[3]}return C.u(t,s)}},Y=I.R;let Z=F&&G&&typeof q.importKey==L,$=F&&G&&typeof q.deriveBits==L;class ee extends p{constructor({password:e,signed:n,encryptionStrength:r,checkPasswordOnly:o}){super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,signed:n,X:r-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:c,J:f,ready:a}=n;r?(await(async(e,t,n,r)=>{const i=await re(e,t,n,ie(r,0,O[t])),o=ie(r,O[t]);if(i[0]!=o[0]||i[1]!=o[1])throw new s(V)})(n,c,r,ie(e,0,O[c]+2)),e=ie(e,O[c]+2),o?t.error(new s(R)):f()):await a;const l=new i(e.length-W-(e.length-W)%E);t.enqueue(ne(n,e,l,0,W,!0))},async flush(e){const{signed:t,Y:n,Z:r,pending:o,ready:c}=this;if(r&&n){await c;const f=ie(o,0,o.length-W),a=ie(o,o.length-W);let l=new i;if(f.length){const e=ce(J,f);r.update(e);const t=n.update(e);l=oe(J,t)}if(t){const e=ie(oe(J,r.digest()),0,W);for(let t=0;W>t;t++)if(e[t]!=a[t])throw new s(P)}e.enqueue(l)}}})}}class te extends p{constructor({password:e,encryptionStrength:n}){let r;super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,X:n-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:s,J:o,ready:c}=n;let f=new i;r?(f=await(async(e,t,n)=>{const r=B(new i(O[t]));return se(r,await re(e,t,n,r))})(n,s,r),o()):await c;const a=new i(f.length+e.length-e.length%E);a.set(f,0),t.enqueue(ne(n,e,a,f.length,0))},async flush(e){const{Y:t,Z:n,pending:s,ready:o}=this;if(n&&t){await o;let c=new i;if(s.length){const e=t.update(ce(J,s));n.update(e),c=oe(J,e)}r.signature=oe(J,n.digest()).slice(0,W),e.enqueue(se(c,r.signature))}}}),r=this}}function ne(e,t,n,r,s,o){const{Y:c,Z:f,pending:a}=e,l=t.length-s;let u;for(a.length&&(t=se(a,t),n=((e,t)=>{if(t&&t>e.length){const n=e;(e=new i(t)).set(n,0)}return e})(n,l-l%E)),u=0;l-E>=u;u+=E){const e=ce(J,ie(t,u,u+E));o&&f.update(e);const s=c.update(e);o||f.update(s),n.set(oe(J,s),u+r)}return e.pending=ie(t,u),n}async function re(n,r,s,o){n.password=null;const c=(e=>{if(void 0===w){const t=new i((e=unescape(encodeURIComponent(e))).length);for(let n=0;n<t.length;n++)t[n]=e.charCodeAt(n);return t}return(new w).encode(e)})(s),f=await(async(e,t,n,r,s)=>{if(!Z)return I.importKey(t);try{return await q.importKey("raw",t,n,!1,s)}catch(e){return Z=!1,I.importKey(t)}})(0,c,U,0,N),a=await(async(e,t,n)=>{if(!$)return I.B(t,e.salt,K.iterations,n);try{return await q.deriveBits(e,t,n)}catch(r){return $=!1,I.B(t,e.salt,K.iterations,n)}})(t.assign({salt:o},K),f,8*(2*T[r]+2)),l=new i(a),u=ce(J,ie(l,0,T[r])),h=ce(J,ie(l,T[r],2*T[r])),d=ie(l,2*T[r]);return t.assign(n,{keys:{key:u,$:h,passwordVerification:d},Y:new X(new Q(u),e.from(j)),Z:new Y(h)}),d}function se(e,t){let n=e;return e.length+t.length&&(n=new i(e.length+t.length),n.set(e,0),n.set(t,e.length)),n}function ie(e,t,n){return e.subarray(t,n)}function oe(e,t){return e.m(t)}function ce(e,t){return e.g(t)}class fe extends p{constructor({password:e,passwordVerification:n,checkPasswordOnly:r}){super({start(){t.assign(this,{password:e,passwordVerification:n}),we(this,e)},transform(e,t){const n=this;if(n.password){const t=le(n,e.subarray(0,12));if(n.password=null,t[11]!=n.passwordVerification)throw new s(V);e=e.subarray(12)}r?t.error(new s(R)):t.enqueue(le(n,e))}})}}class ae extends p{constructor({password:e,passwordVerification:n}){super({start(){t.assign(this,{password:e,passwordVerification:n}),we(this,e)},transform(e,t){const n=this;let r,s;if(n.password){n.password=null;const t=B(new i(12));t[11]=n.passwordVerification,r=new i(e.length+t.length),r.set(ue(n,t),0),s=12}else r=new i(e.length),s=0;r.set(ue(n,e),s),t.enqueue(r)}})}}function le(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=de(e)^t[r],he(e,n[r]);return n}function ue(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=de(e)^t[r],he(e,t[r]);return n}function we(e,n){const r=[305419896,591751049,878082192];t.assign(e,{keys:r,ee:new S(r[0]),te:new S(r[2])});for(let t=0;t<n.length;t++)he(e,n.charCodeAt(t))}function he(e,t){let[n,s,i]=e.keys;e.ee.append([t]),n=~e.ee.get(),s=ye(r.imul(ye(s+pe(n)),134775813)+1),e.te.append([s>>>24]),i=~e.te.get(),e.keys=[n,s,i]}function de(e){const t=2|e.keys[2];return pe(r.imul(t,1^t)>>>8)}function pe(e){return 255&e}function ye(e){return 4294967295&e}const me="deflate-raw";class be extends p{constructor(e,{chunkSize:t,CompressionStream:n,CompressionStreamNative:r}){super({});const{compressed:s,encrypted:i,useCompressionStream:o,zipCrypto:c,signed:f,level:a}=e,u=this;let w,h,d=ke(super.readable);i&&!c||!f||(w=new z,d=ze(d,w)),s&&(d=Se(d,o,{level:a,chunkSize:t},r,n)),i&&(c?d=ze(d,new ae(e)):(h=new te(e),d=ze(d,h))),ve(u,d,(()=>{let e;i&&!c&&(e=h.signature),i&&!c||!f||(e=new l(w.value.buffer).getUint32(0)),u.signature=e}))}}class ge extends p{constructor(e,{chunkSize:t,DecompressionStream:n,DecompressionStreamNative:r}){super({});const{zipCrypto:i,encrypted:o,signed:c,signature:f,compressed:a,useCompressionStream:u}=e;let w,h,d=ke(super.readable);o&&(i?d=ze(d,new fe(e)):(h=new ee(e),d=ze(d,h))),a&&(d=Se(d,u,{chunkSize:t},r,n)),o&&!i||!c||(w=new z,d=ze(d,w)),ve(this,d,(()=>{if((!o||i)&&c){const e=new l(w.value.buffer);if(f!=e.getUint32(0,!1))throw new s(P)}}))}}function ke(e){return ze(e,new p({transform(e,t){e&&e.length&&t.enqueue(e)}}))}function ve(e,n,r){n=ze(n,new p({flush:r})),t.defineProperty(e,"readable",{get:()=>n})}function Se(e,t,n,r,s){try{e=ze(e,new(t&&r?r:s)(me,n))}catch(r){if(!t)throw r;e=ze(e,new s(me,n))}return e}function ze(e,t){return e.pipeThrough(t)}const Ce="data";class xe extends p{constructor(e,n){super({});const r=this,{codecType:s}=e;let i;s.startsWith("deflate")?i=be:s.startsWith("inflate")&&(i=ge);let o=0;const c=new i(e,n),f=super.readable,a=new p({transform(e,t){e&&e.length&&(o+=e.length,t.enqueue(e))},flush(){const{signature:e}=c;t.assign(r,{signature:e,size:o})}});t.defineProperty(r,"readable",{get:()=>f.pipeThrough(c).pipeThrough(a)})}}const _e=new a,Ae=new a;let Ie=0;async function De(e){try{const{options:t,scripts:r,config:s}=e;r&&r.length&&importScripts.apply(void 0,r),self.initCodec&&self.initCodec(),s.CompressionStreamNative=self.CompressionStream,s.DecompressionStreamNative=self.DecompressionStream,self.Deflate&&(s.CompressionStream=new k(self.Deflate)),self.Inflate&&(s.DecompressionStream=new k(self.Inflate));const i={highWaterMark:1,size:()=>s.chunkSize},o=e.readable||new y({async pull(e){const t=new u((e=>_e.set(Ie,e)));Ve({type:"pull",messageId:Ie}),Ie=(Ie+1)%n.MAX_SAFE_INTEGER;const{value:r,done:s}=await t;e.enqueue(r),s&&e.close()}},i),c=e.writable||new m({async write(e){let t;const r=new u((e=>t=e));Ae.set(Ie,t),Ve({type:Ce,value:e,messageId:Ie}),Ie=(Ie+1)%n.MAX_SAFE_INTEGER,await r}},i),f=new xe(t,s);await o.pipeThrough(f).pipeTo(c,{preventClose:!0,preventAbort:!0});try{await c.getWriter().close()}catch(e){}const{signature:a,size:l}=f;Ve({type:"close",result:{signature:a,size:l}})}catch(e){Pe(e)}}function Ve(e){let{value:t}=e;if(t)if(t.length)try{t=new i(t),e.value=t.buffer,d(e,[e.value])}catch(t){d(e)}else d(e);else d(e)}function Pe(e=new s("Unknown error")){const{message:t,stack:n,code:r,name:i}=e;d({error:{message:t,stack:n,code:r,name:i}})}addEventListener("message",(({data:e})=>{const{type:t,messageId:n,value:r,done:s}=e;try{if("start"==t&&De(e),t==Ce){const e=_e.get(n);_e.delete(n),e({value:new i(r),done:s})}if("ack"==t){const e=Ae.get(n);Ae.delete(n),e()}}catch(e){Pe(e)}}));const Re=-2;function Be(t){return Ee(t.map((([t,n])=>new e(t).fill(n,0,t))))}function Ee(t){return t.reduce(((t,n)=>t.concat(e.isArray(n)?Ee(n):n)),[])}const Me=[0,1,2,3].concat(...Be([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function Ue(){const e=this;function t(e,t){let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}e.ne=n=>{const s=e.re,i=e.ie.se,o=e.ie.oe;let c,f,a,l=-1;for(n.ce=0,n.fe=573,c=0;o>c;c++)0!==s[2*c]?(n.ae[++n.ce]=l=c,n.le[c]=0):s[2*c+1]=0;for(;2>n.ce;)a=n.ae[++n.ce]=2>l?++l:0,s[2*a]=1,n.le[a]=0,n.ue--,i&&(n.we-=i[2*a+1]);for(e.he=l,c=r.floor(n.ce/2);c>=1;c--)n.de(s,c);a=o;do{c=n.ae[1],n.ae[1]=n.ae[n.ce--],n.de(s,1),f=n.ae[1],n.ae[--n.fe]=c,n.ae[--n.fe]=f,s[2*a]=s[2*c]+s[2*f],n.le[a]=r.max(n.le[c],n.le[f])+1,s[2*c+1]=s[2*f+1]=a,n.ae[1]=a++,n.de(s,1)}while(n.ce>=2);n.ae[--n.fe]=n.ae[1],(t=>{const n=e.re,r=e.ie.se,s=e.ie.pe,i=e.ie.ye,o=e.ie.me;let c,f,a,l,u,w,h=0;for(l=0;15>=l;l++)t.be[l]=0;for(n[2*t.ae[t.fe]+1]=0,c=t.fe+1;573>c;c++)f=t.ae[c],l=n[2*n[2*f+1]+1]+1,l>o&&(l=o,h++),n[2*f+1]=l,f>e.he||(t.be[l]++,u=0,i>f||(u=s[f-i]),w=n[2*f],t.ue+=w*(l+u),r&&(t.we+=w*(r[2*f+1]+u)));if(0!==h){do{for(l=o-1;0===t.be[l];)l--;t.be[l]--,t.be[l+1]+=2,t.be[o]--,h-=2}while(h>0);for(l=o;0!==l;l--)for(f=t.be[l];0!==f;)a=t.ae[--c],a>e.he||(n[2*a+1]!=l&&(t.ue+=(l-n[2*a+1])*n[2*a],n[2*a+1]=l),f--)}})(n),((e,n,r)=>{const s=[];let i,o,c,f=0;for(i=1;15>=i;i++)s[i]=f=f+r[i-1]<<1;for(o=0;n>=o;o++)c=e[2*o+1],0!==c&&(e[2*o]=t(s[c]++,c))})(s,e.he,n.be)}}function Ke(e,t,n,r,s){const i=this;i.se=e,i.pe=t,i.ye=n,i.oe=r,i.me=s}Ue.ge=[0,1,2,3,4,5,6,7].concat(...Be([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]])),Ue.ke=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],Ue.ve=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],Ue.Se=e=>256>e?Me[e]:Me[256+(e>>>7)],Ue.ze=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Ue.Ce=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Ue.xe=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Ue._e=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];const Ne=Be([[144,8],[112,9],[24,7],[8,8]]);Ke.Ae=Ee([12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,19,275,147,403,83,339,211,467,51,307,179,435,115,371,243,499,11,267,139,395,75,331,203,459,43,299,171,427,107,363,235,491,27,283,155,411,91,347,219,475,59,315,187,443,123,379,251,507,7,263,135,391,71,327,199,455,39,295,167,423,103,359,231,487,23,279,151,407,87,343,215,471,55,311,183,439,119,375,247,503,15,271,143,399,79,335,207,463,47,303,175,431,111,367,239,495,31,287,159,415,95,351,223,479,63,319,191,447,127,383,255,511,0,64,32,96,16,80,48,112,8,72,40,104,24,88,56,120,4,68,36,100,20,84,52,116,3,131,67,195,35,163,99,227].map(((e,t)=>[e,Ne[t]])));const Oe=Be([[30,5]]);function Te(e,t,n,r,s){const i=this;i.Ie=e,i.De=t,i.Ve=n,i.Pe=r,i.Re=s}Ke.Be=Ee([0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23].map(((e,t)=>[e,Oe[t]]))),Ke.Ee=new Ke(Ke.Ae,Ue.ze,257,286,15),Ke.Me=new Ke(Ke.Be,Ue.Ce,0,30,15),Ke.Ue=new Ke(null,Ue.xe,0,19,7);const We=[new Te(0,0,0,0,0),new Te(4,4,8,4,1),new Te(4,5,16,8,1),new Te(4,6,32,32,1),new Te(4,4,16,16,2),new Te(8,16,32,32,2),new Te(8,16,128,128,2),new Te(8,32,128,256,2),new Te(32,128,258,1024,2),new Te(32,258,258,4096,2)],je=["need dictionary","stream end","","","stream error","data error","","buffer error","",""],He=113,Le=666,Fe=262;function qe(e,t,n,r){const s=e[2*t],i=e[2*n];return i>s||s==i&&r[t]<=r[n]}function Ge(){const e=this;let t,n,s,c,f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z,C,x,_,A,I,D,V,P,R,B,E,M,U;const K=new Ue,N=new Ue,O=new Ue;let T,W,j,H,L,F;function q(){let t;for(t=0;286>t;t++)E[2*t]=0;for(t=0;30>t;t++)M[2*t]=0;for(t=0;19>t;t++)U[2*t]=0;E[512]=1,e.ue=e.we=0,W=j=0}function G(e,t){let n,r=-1,s=e[1],i=0,o=7,c=4;0===s&&(o=138,c=3),e[2*(t+1)+1]=65535;for(let f=0;t>=f;f++)n=s,s=e[2*(f+1)+1],++i<o&&n==s||(c>i?U[2*n]+=i:0!==n?(n!=r&&U[2*n]++,U[32]++):i>10?U[36]++:U[34]++,i=0,r=n,0===s?(o=138,c=3):n==s?(o=6,c=3):(o=7,c=4))}function J(t){e.Ke[e.pending++]=t}function Q(e){J(255&e),J(e>>>8&255)}function X(e,t){let n;const r=t;F>16-r?(n=e,L|=n<<F&65535,Q(L),L=n>>>16-F,F+=r-16):(L|=e<<F&65535,F+=r)}function Y(e,t){const n=2*e;X(65535&t[n],65535&t[n+1])}function Z(e,t){let n,r,s=-1,i=e[1],o=0,c=7,f=4;for(0===i&&(c=138,f=3),n=0;t>=n;n++)if(r=i,i=e[2*(n+1)+1],++o>=c||r!=i){if(f>o)do{Y(r,U)}while(0!=--o);else 0!==r?(r!=s&&(Y(r,U),o--),Y(16,U),X(o-3,2)):o>10?(Y(18,U),X(o-11,7)):(Y(17,U),X(o-3,3));o=0,s=r,0===i?(c=138,f=3):r==i?(c=6,f=3):(c=7,f=4)}}function $(){16==F?(Q(L),L=0,F=0):8>F||(J(255&L),L>>>=8,F-=8)}function ee(t,n){let s,i,o;if(e.Ne[W]=t,e.Oe[W]=255&n,W++,0===t?E[2*n]++:(j++,t--,E[2*(Ue.ge[n]+256+1)]++,M[2*Ue.Se(t)]++),0==(8191&W)&&V>2){for(s=8*W,i=C-k,o=0;30>o;o++)s+=M[2*o]*(5+Ue.Ce[o]);if(s>>>=3,j<r.floor(W/2)&&s<r.floor(i/2))return!0}return W==T-1}function te(t,n){let r,s,i,o,c=0;if(0!==W)do{r=e.Ne[c],s=e.Oe[c],c++,0===r?Y(s,t):(i=Ue.ge[s],Y(i+256+1,t),o=Ue.ze[i],0!==o&&(s-=Ue.ke[i],X(s,o)),r--,i=Ue.Se(r),Y(i,n),o=Ue.Ce[i],0!==o&&(r-=Ue.ve[i],X(r,o)))}while(W>c);Y(256,t),H=t[513]}function ne(){F>8?Q(L):F>0&&J(255&L),L=0,F=0}function re(t,n,r){X(0+(r?1:0),3),((t,n)=>{ne(),H=8,Q(n),Q(~n),e.Ke.set(u.subarray(t,t+n),e.pending),e.pending+=n})(t,n)}function se(n){((t,n,r)=>{let s,i,o=0;V>0?(K.ne(e),N.ne(e),o=(()=>{let t;for(G(E,K.he),G(M,N.he),O.ne(e),t=18;t>=3&&0===U[2*Ue._e[t]+1];t--);return e.ue+=14+3*(t+1),t})(),s=e.ue+3+7>>>3,i=e.we+3+7>>>3,i>s||(s=i)):s=i=n+5,n+4>s||-1==t?i==s?(X(2+(r?1:0),3),te(Ke.Ae,Ke.Be)):(X(4+(r?1:0),3),((e,t,n)=>{let r;for(X(e-257,5),X(t-1,5),X(n-4,4),r=0;n>r;r++)X(U[2*Ue._e[r]+1],3);Z(E,e-1),Z(M,t-1)})(K.he+1,N.he+1,o+1),te(E,M)):re(t,n,r),q(),r&&ne()})(0>k?-1:k,C-k,n),k=C,t.Te()}function ie(){let e,n,r,s;do{if(s=w-_-C,0===s&&0===C&&0===_)s=f;else if(-1==s)s--;else if(C>=f+f-Fe){u.set(u.subarray(f,f+f),0),x-=f,C-=f,k-=f,e=y,r=e;do{n=65535&d[--r],d[r]=f>n?0:n-f}while(0!=--e);e=f,r=e;do{n=65535&h[--r],h[r]=f>n?0:n-f}while(0!=--e);s+=f}if(0===t.We)return;e=t.je(u,C+_,s),_+=e,3>_||(p=255&u[C],p=(p<<g^255&u[C+1])&b)}while(Fe>_&&0!==t.We)}function oe(e){let t,n,r=I,s=C,i=A;const o=C>f-Fe?C-(f-Fe):0;let c=B;const a=l,w=C+258;let d=u[s+i-1],p=u[s+i];R>A||(r>>=2),c>_&&(c=_);do{if(t=e,u[t+i]==p&&u[t+i-1]==d&&u[t]==u[s]&&u[++t]==u[s+1]){s+=2,t++;do{}while(u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&w>s);if(n=258-(w-s),s=w-258,n>i){if(x=e,i=n,n>=c)break;d=u[s+i-1],p=u[s+i]}}}while((e=65535&h[e&a])>o&&0!=--r);return i>_?_:i}e.le=[],e.be=[],e.ae=[],E=[],M=[],U=[],e.de=(t,n)=>{const r=e.ae,s=r[n];let i=n<<1;for(;i<=e.ce&&(i<e.ce&&qe(t,r[i+1],r[i],e.le)&&i++,!qe(t,s,r[i],e.le));)r[n]=r[i],n=i,i<<=1;r[n]=s},e.He=(t,S,x,W,j,G)=>(W||(W=8),j||(j=8),G||(G=0),t.Le=null,-1==S&&(S=6),1>j||j>9||8!=W||9>x||x>15||0>S||S>9||0>G||G>2?Re:(t.Fe=e,a=x,f=1<<a,l=f-1,m=j+7,y=1<<m,b=y-1,g=r.floor((m+3-1)/3),u=new i(2*f),h=[],d=[],T=1<<j+6,e.Ke=new i(4*T),s=4*T,e.Ne=new o(T),e.Oe=new i(T),V=S,P=G,(t=>(t.qe=t.Ge=0,t.Le=null,e.pending=0,e.Je=0,n=He,c=0,K.re=E,K.ie=Ke.Ee,N.re=M,N.ie=Ke.Me,O.re=U,O.ie=Ke.Ue,L=0,F=0,H=8,q(),(()=>{w=2*f,d[y-1]=0;for(let e=0;y-1>e;e++)d[e]=0;D=We[V].De,R=We[V].Ie,B=We[V].Ve,I=We[V].Pe,C=0,k=0,_=0,v=A=2,z=0,p=0})(),0))(t))),e.Qe=()=>42!=n&&n!=He&&n!=Le?Re:(e.Oe=null,e.Ne=null,e.Ke=null,d=null,h=null,u=null,e.Fe=null,n==He?-3:0),e.Xe=(e,t,n)=>{let r=0;return-1==t&&(t=6),0>t||t>9||0>n||n>2?Re:(We[V].Re!=We[t].Re&&0!==e.qe&&(r=e.Ye(1)),V!=t&&(V=t,D=We[V].De,R=We[V].Ie,B=We[V].Ve,I=We[V].Pe),P=n,r)},e.Ze=(e,t,r)=>{let s,i=r,o=0;if(!t||42!=n)return Re;if(3>i)return 0;for(i>f-Fe&&(i=f-Fe,o=r-i),u.set(t.subarray(o,o+i),0),C=i,k=i,p=255&u[0],p=(p<<g^255&u[1])&b,s=0;i-3>=s;s++)p=(p<<g^255&u[s+2])&b,h[s&l]=d[p],d[p]=s;return 0},e.Ye=(r,i)=>{let o,w,m,I,R;if(i>4||0>i)return Re;if(!r.$e||!r.et&&0!==r.We||n==Le&&4!=i)return r.Le=je[4],Re;if(0===r.tt)return r.Le=je[7],-5;var B;if(t=r,I=c,c=i,42==n&&(w=8+(a-8<<4)<<8,m=(V-1&255)>>1,m>3&&(m=3),w|=m<<6,0!==C&&(w|=32),w+=31-w%31,n=He,J((B=w)>>8&255),J(255&B)),0!==e.pending){if(t.Te(),0===t.tt)return c=-1,0}else if(0===t.We&&I>=i&&4!=i)return t.Le=je[7],-5;if(n==Le&&0!==t.We)return r.Le=je[7],-5;if(0!==t.We||0!==_||0!=i&&n!=Le){switch(R=-1,We[V].Re){case 0:R=(e=>{let n,r=65535;for(r>s-5&&(r=s-5);;){if(1>=_){if(ie(),0===_&&0==e)return 0;if(0===_)break}if(C+=_,_=0,n=k+r,(0===C||C>=n)&&(_=C-n,C=n,se(!1),0===t.tt))return 0;if(C-k>=f-Fe&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 1:R=(e=>{let n,r=0;for(;;){if(Fe>_){if(ie(),Fe>_&&0==e)return 0;if(0===_)break}if(3>_||(p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C),0===r||(C-r&65535)>f-Fe||2!=P&&(v=oe(r)),3>v)n=ee(0,255&u[C]),_--,C++;else if(n=ee(C-x,v-3),_-=v,v>D||3>_)C+=v,v=0,p=255&u[C],p=(p<<g^255&u[C+1])&b;else{v--;do{C++,p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C}while(0!=--v);C++}if(n&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 2:R=(e=>{let n,r,s=0;for(;;){if(Fe>_){if(ie(),Fe>_&&0==e)return 0;if(0===_)break}if(3>_||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C),A=v,S=x,v=2,0!==s&&D>A&&f-Fe>=(C-s&65535)&&(2!=P&&(v=oe(s)),5>=v&&(1==P||3==v&&C-x>4096)&&(v=2)),3>A||v>A)if(0!==z){if(n=ee(0,255&u[C-1]),n&&se(!1),C++,_--,0===t.tt)return 0}else z=1,C++,_--;else{r=C+_-3,n=ee(C-1-S,A-3),_-=A-1,A-=2;do{++C>r||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C)}while(0!=--A);if(z=0,v=2,C++,n&&(se(!1),0===t.tt))return 0}}return 0!==z&&(n=ee(0,255&u[C-1]),z=0),se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i)}if(2!=R&&3!=R||(n=Le),0==R||2==R)return 0===t.tt&&(c=-1),0;if(1==R){if(1==i)X(2,3),Y(256,Ke.Ae),$(),9>1+H+10-F&&(X(2,3),Y(256,Ke.Ae),$()),H=7;else if(re(0,0,!1),3==i)for(o=0;y>o;o++)d[o]=0;if(t.Te(),0===t.tt)return c=-1,0}}return 4!=i?0:1}}function Je(){const e=this;e.nt=0,e.rt=0,e.We=0,e.qe=0,e.tt=0,e.Ge=0}function Qe(e){const t=new Je,n=(o=e&&e.chunkSize?e.chunkSize:65536)+5*(r.floor(o/16383)+1);var o;const c=new i(n);let f=e?e.level:-1;void 0===f&&(f=-1),t.He(f),t.$e=c,this.append=(e,r)=>{let o,f,a=0,l=0,u=0;const w=[];if(e.length){t.nt=0,t.et=e,t.We=e.length;do{if(t.rt=0,t.tt=n,o=t.Ye(0),0!=o)throw new s("deflating: "+t.Le);t.rt&&(t.rt==n?w.push(new i(c)):w.push(c.subarray(0,t.rt))),u+=t.rt,r&&t.nt>0&&t.nt!=a&&(r(t.nt),a=t.nt)}while(t.We>0||0===t.tt);return w.length>1?(f=new i(u),w.forEach((e=>{f.set(e,l),l+=e.length}))):f=w[0]?new i(w[0]):new i,f}},this.flush=()=>{let e,r,o=0,f=0;const a=[];do{if(t.rt=0,t.tt=n,e=t.Ye(4),1!=e&&0!=e)throw new s("deflating: "+t.Le);n-t.tt>0&&a.push(c.slice(0,t.rt)),f+=t.rt}while(t.We>0||0===t.tt);return t.Qe(),r=new i(f),a.forEach((e=>{r.set(e,o),o+=e.length})),r}}Je.prototype={He(e,t){const n=this;return n.Fe=new Ge,t||(t=15),n.Fe.He(n,e,t)},Ye(e){const t=this;return t.Fe?t.Fe.Ye(t,e):Re},Qe(){const e=this;if(!e.Fe)return Re;const t=e.Fe.Qe();return e.Fe=null,t},Xe(e,t){const n=this;return n.Fe?n.Fe.Xe(n,e,t):Re},Ze(e,t){const n=this;return n.Fe?n.Fe.Ze(n,e,t):Re},je(e,t,n){const r=this;let s=r.We;return s>n&&(s=n),0===s?0:(r.We-=s,e.set(r.et.subarray(r.nt,r.nt+s),t),r.nt+=s,r.qe+=s,s)},Te(){const e=this;let t=e.Fe.pending;t>e.tt&&(t=e.tt),0!==t&&(e.$e.set(e.Fe.Ke.subarray(e.Fe.Je,e.Fe.Je+t),e.rt),e.rt+=t,e.Fe.Je+=t,e.Ge+=t,e.tt-=t,e.Fe.pending-=t,0===e.Fe.pending&&(e.Fe.Je=0))}};const Xe=-2,Ye=-3,Ze=-5,$e=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],et=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],tt=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],nt=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],rt=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],st=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],it=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];function ot(){let e,t,n,r,s,i;function o(e,t,o,c,f,a,l,u,w,h,d){let p,y,m,b,g,k,v,S,z,C,x,_,A,I,D;C=0,g=o;do{n[e[t+C]]++,C++,g--}while(0!==g);if(n[0]==o)return l[0]=-1,u[0]=0,0;for(S=u[0],k=1;15>=k&&0===n[k];k++);for(v=k,k>S&&(S=k),g=15;0!==g&&0===n[g];g--);for(m=g,S>g&&(S=g),u[0]=S,I=1<<k;g>k;k++,I<<=1)if(0>(I-=n[k]))return Ye;if(0>(I-=n[g]))return Ye;for(n[g]+=I,i[1]=k=0,C=1,A=2;0!=--g;)i[A]=k+=n[C],A++,C++;g=0,C=0;do{0!==(k=e[t+C])&&(d[i[k]++]=g),C++}while(++g<o);for(o=i[m],i[0]=g=0,C=0,b=-1,_=-S,s[0]=0,x=0,D=0;m>=v;v++)for(p=n[v];0!=p--;){for(;v>_+S;){if(b++,_+=S,D=m-_,D=D>S?S:D,(y=1<<(k=v-_))>p+1&&(y-=p+1,A=v,D>k))for(;++k<D&&(y<<=1)>n[++A];)y-=n[A];if(D=1<<k,h[0]+D>1440)return Ye;s[b]=x=h[0],h[0]+=D,0!==b?(i[b]=g,r[0]=k,r[1]=S,k=g>>>_-S,r[2]=x-s[b-1]-k,w.set(r,3*(s[b-1]+k))):l[0]=x}for(r[1]=v-_,o>C?d[C]<c?(r[0]=256>d[C]?0:96,r[2]=d[C++]):(r[0]=a[d[C]-c]+16+64,r[2]=f[d[C++]-c]):r[0]=192,y=1<<v-_,k=g>>>_;D>k;k+=y)w.set(r,3*(x+k));for(k=1<<v-1;0!=(g&k);k>>>=1)g^=k;for(g^=k,z=(1<<_)-1;(g&z)!=i[b];)b--,_-=S,z=(1<<_)-1}return 0!==I&&1!=m?Ze:0}function c(o){let c;for(e||(e=[],t=[],n=new f(16),r=[],s=new f(15),i=new f(16)),t.length<o&&(t=[]),c=0;o>c;c++)t[c]=0;for(c=0;16>c;c++)n[c]=0;for(c=0;3>c;c++)r[c]=0;s.set(n.subarray(0,15),0),i.set(n.subarray(0,16),0)}this.st=(n,r,s,i,f)=>{let a;return c(19),e[0]=0,a=o(n,0,19,19,null,null,s,r,i,e,t),a==Ye?f.Le="oversubscribed dynamic bit lengths tree":a!=Ze&&0!==r[0]||(f.Le="incomplete dynamic bit lengths tree",a=Ye),a},this.it=(n,r,s,i,f,a,l,u,w)=>{let h;return c(288),e[0]=0,h=o(s,0,n,257,nt,rt,a,i,u,e,t),0!=h||0===i[0]?(h==Ye?w.Le="oversubscribed literal/length tree":-4!=h&&(w.Le="incomplete literal/length tree",h=Ye),h):(c(288),h=o(s,n,r,0,st,it,l,f,u,e,t),0!=h||0===f[0]&&n>257?(h==Ye?w.Le="oversubscribed distance tree":h==Ze?(w.Le="incomplete distance tree",h=Ye):-4!=h&&(w.Le="empty distance tree with lengths",h=Ye),h):0)}}function ct(){const e=this;let t,n,r,s,i=0,o=0,c=0,f=0,a=0,l=0,u=0,w=0,h=0,d=0;function p(e,t,n,r,s,i,o,c){let f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z;d=c.nt,p=c.We,w=o.ot,h=o.ct,y=o.write,m=y<o.read?o.read-y-1:o.end-y,b=$e[e],g=$e[t];do{for(;20>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(f=w&b,a=n,l=r,z=3*(l+f),0!==(u=a[z]))for(;;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15,k=a[z+2]+(w&$e[u]),w>>=u,h-=u;15>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;for(f=w&g,a=s,l=i,z=3*(l+f),u=a[z];;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15;u>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(v=a[z+2]+(w&$e[u]),w>>=u,h-=u,m-=k,v>y){S=y-v;do{S+=o.end}while(0>S);if(u=o.end-S,k>u){if(k-=u,y-S>0&&u>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--u);else o.lt.set(o.lt.subarray(S,S+u),y),y+=u,S+=u,u=0;S=0}}else S=y-v,y-S>0&&2>y-S?(o.lt[y++]=o.lt[S++],o.lt[y++]=o.lt[S++],k-=2):(o.lt.set(o.lt.subarray(S,S+2),y),y+=2,S+=2,k-=2);if(y-S>0&&k>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--k);else o.lt.set(o.lt.subarray(S,S+k),y),y+=k,S+=k,k=0;break}if(0!=(64&u))return c.Le="invalid distance code",k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,Ye;f+=a[z+2],f+=w&$e[u],z=3*(l+f),u=a[z]}break}if(0!=(64&u))return 0!=(32&u)?(k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,1):(c.Le="invalid literal/length code",k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,Ye);if(f+=a[z+2],f+=w&$e[u],z=3*(l+f),0===(u=a[z])){w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--;break}}else w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--}while(m>=258&&p>=10);return k=c.We-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.We=p,c.qe+=d-c.nt,c.nt=d,o.write=y,0}e.init=(e,i,o,c,f,a)=>{t=0,u=e,w=i,r=o,h=c,s=f,d=a,n=null},e.ut=(e,y,m)=>{let b,g,k,v,S,z,C,x=0,_=0,A=0;for(A=y.nt,v=y.We,x=e.ot,_=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S;;)switch(t){case 0:if(z>=258&&v>=10&&(e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,m=p(u,w,r,h,s,d,e,y),A=y.nt,v=y.We,x=e.ot,_=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S,0!=m)){t=1==m?7:9;break}c=u,n=r,o=h,t=1;case 1:for(b=c;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}if(g=3*(o+(x&$e[b])),x>>>=n[g+1],_-=n[g+1],k=n[g],0===k){f=n[g+2],t=6;break}if(0!=(16&k)){a=15&k,i=n[g+2],t=2;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}if(0!=(32&k)){t=7;break}return t=9,y.Le="invalid literal/length code",m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 2:for(b=a;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}i+=x&$e[b],x>>=b,_-=b,c=w,n=s,o=d,t=3;case 3:for(b=c;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}if(g=3*(o+(x&$e[b])),x>>=n[g+1],_-=n[g+1],k=n[g],0!=(16&k)){a=15&k,l=n[g+2],t=4;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}return t=9,y.Le="invalid distance code",m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 4:for(b=a;b>_;){if(0===v)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,v--,x|=(255&y.ft(A++))<<_,_+=8}l+=x&$e[b],x>>=b,_-=b,t=5;case 5:for(C=S-l;0>C;)C+=e.end;for(;0!==i;){if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);e.lt[S++]=e.lt[C++],z--,C==e.end&&(C=0),i--}t=0;break;case 6:if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);m=0,e.lt[S++]=f,z--,t=0;break;case 7:if(_>7&&(_-=8,v++,A--),e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,e.read!=e.write)return e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);t=8;case 8:return m=1,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);case 9:return m=Ye,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m);default:return m=Xe,e.ot=x,e.ct=_,y.We=v,y.qe+=A-y.nt,y.nt=A,e.write=S,e.wt(y,m)}},e.ht=()=>{}}ot.dt=(e,t,n,r)=>(e[0]=9,t[0]=5,n[0]=et,r[0]=tt,0);const ft=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function at(e,t){const n=this;let r,s=0,o=0,c=0,a=0;const l=[0],u=[0],w=new ct;let h=0,d=new f(4320);const p=new ot;n.ct=0,n.ot=0,n.lt=new i(t),n.end=t,n.read=0,n.write=0,n.reset=(e,t)=>{t&&(t[0]=0),6==s&&w.ht(e),s=0,n.ct=0,n.ot=0,n.read=n.write=0},n.reset(e,null),n.wt=(e,t)=>{let r,s,i;return s=e.rt,i=n.read,r=(i>n.write?n.end:n.write)-i,r>e.tt&&(r=e.tt),0!==r&&t==Ze&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r,i==n.end&&(i=0,n.write==n.end&&(n.write=0),r=n.write-i,r>e.tt&&(r=e.tt),0!==r&&t==Ze&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r),e.rt=s,n.read=i,t},n.ut=(e,t)=>{let i,f,y,m,b,g,k,v;for(m=e.nt,b=e.We,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g;;){let S,z,C,x,_,A,I,D;switch(s){case 0:for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}switch(i=7&f,h=1&i,i>>>1){case 0:f>>>=3,y-=3,i=7&y,f>>>=i,y-=i,s=1;break;case 1:S=[],z=[],C=[[]],x=[[]],ot.dt(S,z,C,x),w.init(S[0],z[0],C[0],0,x[0],0),f>>>=3,y-=3,s=6;break;case 2:f>>>=3,y-=3,s=3;break;case 3:return f>>>=3,y-=3,s=9,e.Le="invalid block type",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}break;case 1:for(;32>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if((~f>>>16&65535)!=(65535&f))return s=9,e.Le="invalid stored block lengths",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);o=65535&f,f=y=0,s=0!==o?2:0!==h?7:0;break;case 2:if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(0===k&&(g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k&&(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k)))return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(t=0,i=o,i>b&&(i=b),i>k&&(i=k),n.lt.set(e.je(m,i),g),m+=i,b-=i,g+=i,k-=i,0!=(o-=i))break;s=0!==h?7:0;break;case 3:for(;14>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(c=i=16383&f,(31&i)>29||(i>>5&31)>29)return s=9,e.Le="too many length or distance symbols",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(i=258+(31&i)+(i>>5&31),!r||r.length<i)r=[];else for(v=0;i>v;v++)r[v]=0;f>>>=14,y-=14,a=0,s=4;case 4:for(;4+(c>>>10)>a;){for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}r[ft[a++]]=7&f,f>>>=3,y-=3}for(;19>a;)r[ft[a++]]=0;if(l[0]=7,i=p.st(r,l,u,d,e),0!=i)return(t=i)==Ye&&(r=null,s=9),n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);a=0,s=5;case 5:for(;i=c,258+(31&i)+(i>>5&31)>a;){let o,w;for(i=l[0];i>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(i=d[3*(u[0]+(f&$e[i]))+1],w=d[3*(u[0]+(f&$e[i]))+2],16>w)f>>>=i,y-=i,r[a++]=w;else{for(v=18==w?7:w-14,o=18==w?11:3;i+v>y;){if(0===b)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(f>>>=i,y-=i,o+=f&$e[v],f>>>=v,y-=v,v=a,i=c,v+o>258+(31&i)+(i>>5&31)||16==w&&1>v)return r=null,s=9,e.Le="invalid bit length repeat",t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w=16==w?r[v-1]:0;do{r[v++]=w}while(0!=--o);a=v}}if(u[0]=-1,_=[],A=[],I=[],D=[],_[0]=9,A[0]=6,i=c,i=p.it(257+(31&i),1+(i>>5&31),r,_,A,I,D,d,e),0!=i)return i==Ye&&(r=null,s=9),t=i,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w.init(_[0],A[0],d,I[0],d,D[0]),s=6;case 6:if(n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,1!=(t=w.ut(n,e,t)))return n.wt(e,t);if(t=0,w.ht(e),m=e.nt,b=e.We,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g,0===h){s=0;break}s=7;case 7:if(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,n.read!=n.write)return n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);s=8;case 8:return t=1,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);case 9:return t=Ye,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);default:return t=Xe,n.ot=f,n.ct=y,e.We=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}}},n.ht=e=>{n.reset(e,null),n.lt=null,d=null},n.yt=(e,t,r)=>{n.lt.set(e.subarray(t,t+r),0),n.read=n.write=r},n.bt=()=>1==s?1:0}const lt=13,ut=[0,0,255,255];function wt(){const e=this;function t(e){return e&&e.gt?(e.qe=e.Ge=0,e.Le=null,e.gt.mode=7,e.gt.kt.reset(e,null),0):Xe}e.mode=0,e.method=0,e.vt=[0],e.St=0,e.marker=0,e.zt=0,e.Ct=t=>(e.kt&&e.kt.ht(t),e.kt=null,0),e.xt=(n,r)=>(n.Le=null,e.kt=null,8>r||r>15?(e.Ct(n),Xe):(e.zt=r,n.gt.kt=new at(n,1<<r),t(n),0)),e._t=(e,t)=>{let n,r;if(!e||!e.gt||!e.et)return Xe;const s=e.gt;for(t=4==t?Ze:0,n=Ze;;)switch(s.mode){case 0:if(0===e.We)return n;if(n=t,e.We--,e.qe++,8!=(15&(s.method=e.ft(e.nt++)))){s.mode=lt,e.Le="unknown compression method",s.marker=5;break}if(8+(s.method>>4)>s.zt){s.mode=lt,e.Le="invalid win size",s.marker=5;break}s.mode=1;case 1:if(0===e.We)return n;if(n=t,e.We--,e.qe++,r=255&e.ft(e.nt++),((s.method<<8)+r)%31!=0){s.mode=lt,e.Le="incorrect header check",s.marker=5;break}if(0==(32&r)){s.mode=7;break}s.mode=2;case 2:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St=(255&e.ft(e.nt++))<<24&4278190080,s.mode=3;case 3:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St+=(255&e.ft(e.nt++))<<16&16711680,s.mode=4;case 4:if(0===e.We)return n;n=t,e.We--,e.qe++,s.St+=(255&e.ft(e.nt++))<<8&65280,s.mode=5;case 5:return 0===e.We?n:(n=t,e.We--,e.qe++,s.St+=255&e.ft(e.nt++),s.mode=6,2);case 6:return s.mode=lt,e.Le="need dictionary",s.marker=0,Xe;case 7:if(n=s.kt.ut(e,n),n==Ye){s.mode=lt,s.marker=0;break}if(0==n&&(n=t),1!=n)return n;n=t,s.kt.reset(e,s.vt),s.mode=12;case 12:return e.We=0,1;case lt:return Ye;default:return Xe}},e.At=(e,t,n)=>{let r=0,s=n;if(!e||!e.gt||6!=e.gt.mode)return Xe;const i=e.gt;return s<1<<i.zt||(s=(1<<i.zt)-1,r=n-s),i.kt.yt(t,r,s),i.mode=7,0},e.It=e=>{let n,r,s,i,o;if(!e||!e.gt)return Xe;const c=e.gt;if(c.mode!=lt&&(c.mode=lt,c.marker=0),0===(n=e.We))return Ze;for(r=e.nt,s=c.marker;0!==n&&4>s;)e.ft(r)==ut[s]?s++:s=0!==e.ft(r)?0:4-s,r++,n--;return e.qe+=r-e.nt,e.nt=r,e.We=n,c.marker=s,4!=s?Ye:(i=e.qe,o=e.Ge,t(e),e.qe=i,e.Ge=o,c.mode=7,0)},e.Dt=e=>e&&e.gt&&e.gt.kt?e.gt.kt.bt():Xe}function ht(){}function dt(e){const t=new ht,n=e&&e.chunkSize?r.floor(2*e.chunkSize):131072,o=new i(n);let c=!1;t.xt(),t.$e=o,this.append=(e,r)=>{const f=[];let a,l,u=0,w=0,h=0;if(0!==e.length){t.nt=0,t.et=e,t.We=e.length;do{if(t.rt=0,t.tt=n,0!==t.We||c||(t.nt=0,c=!0),a=t._t(0),c&&a===Ze){if(0!==t.We)throw new s("inflating: bad input")}else if(0!==a&&1!==a)throw new s("inflating: "+t.Le);if((c||1===a)&&t.We===e.length)throw new s("inflating: bad input");t.rt&&(t.rt===n?f.push(new i(o)):f.push(o.subarray(0,t.rt))),h+=t.rt,r&&t.nt>0&&t.nt!=u&&(r(t.nt),u=t.nt)}while(t.We>0||0===t.tt);return f.length>1?(l=new i(h),f.forEach((e=>{l.set(e,w),w+=e.length}))):l=f[0]?new i(f[0]):new i,l}},this.flush=()=>{t.Ct()}}ht.prototype={xt(e){const t=this;return t.gt=new wt,e||(e=15),t.gt.xt(t,e)},_t(e){const t=this;return t.gt?t.gt._t(t,e):Xe},Ct(){const e=this;if(!e.gt)return Xe;const t=e.gt.Ct(e);return e.gt=null,t},It(){const e=this;return e.gt?e.gt.It(e):Xe},At(e,t){const n=this;return n.gt?n.gt.At(n,e,t):Xe},ft(e){return this.et[e]},je(e,t){return this.et.subarray(e,e+t)}},self.initCodec=()=>{self.Deflate=Qe,self.Inflate=dt};
`],{type:"text/javascript"}));E({workerScripts:{inflate:[x],deflate:[x]}})}const bo="Writer iterator completed too soon",wo=64*1024,b6="writable";class L8{constructor(){this.size=0}init(){this.initialized=!0}}class w6 extends L8{get readable(){const x=this,{chunkSize:e=wo}=x,t=new ReadableStream({start(){this.chunkOffset=0},async pull(n){const{offset:i=0,size:r,diskNumberStart:A}=t,{chunkOffset:s}=this;n.enqueue(await c0(x,i+s,Math.min(e,r-s),A)),s+e>r?n.close():this.chunkOffset+=e}});return t}}class yo extends L8{constructor(){super();const x=this,e=new WritableStream({write(t){return x.writeUint8Array(t)}});Object.defineProperty(x,b6,{get(){return e}})}writeUint8Array(){}}class y6 extends w6{constructor(x){super(),Object.assign(this,{blob:x,size:x.size})}async readUint8Array(x,e){const t=this,n=x+e;let r=await(x||n<t.size?t.blob.slice(x,n):t.blob).arrayBuffer();return r.byteLength>e&&(r=r.slice(x,n)),new Uint8Array(r)}}class T6 extends yo{init(x=0){Object.assign(this,{offset:0,array:new Uint8Array(x)}),super.init()}writeUint8Array(x){const e=this;if(e.offset+x.length>e.array.length){const t=e.array;e.array=new Uint8Array(t.length+x.length),e.array.set(t)}e.array.set(x,e.offset),e.offset+=x.length}getData(){return this.array}}class To extends w6{constructor(x){super(),this.readers=x}async init(){const x=this,{readers:e}=x;x.lastDiskNumber=0,x.lastDiskOffset=0,await Promise.all(e.map(async(t,n)=>{await t.init(),n!=e.length-1&&(x.lastDiskOffset+=t.size),x.size+=t.size})),super.init()}async readUint8Array(x,e,t=0){const n=this,{readers:i}=this;let r,A=t;A==-1&&(A=i.length-1);let s=x;for(;s>=i[A].size;)s-=i[A].size,A++;const B=i[A],o=B.size;if(s+e<=o)r=await c0(B,s,e);else{const a=o-s;r=new Uint8Array(e),r.set(await c0(B,s,a)),r.set(await n.readUint8Array(x+a,e-a,t),a)}return n.lastDiskNumber=Math.max(A,n.lastDiskNumber),r}}class g9 extends L8{constructor(x,e=4294967295){super();const t=this;Object.assign(t,{diskNumber:0,diskOffset:0,size:0,maxSize:e,availableSize:e});let n,i,r;const A=new WritableStream({async write(o){const{availableSize:a}=t;if(r)o.length>=a?(await s(o.slice(0,a)),await B(),t.diskOffset+=n.size,t.diskNumber++,r=null,await this.write(o.slice(a))):await s(o);else{const{value:f,done:F}=await x.next();if(F&&!f)throw new Error(bo);n=f,n.size=0,n.maxSize&&(t.maxSize=n.maxSize),t.availableSize=t.maxSize,await RE(n),i=f.writable,r=i.getWriter(),await this.write(o)}},async close(){await r.ready,await B()}});Object.defineProperty(t,b6,{get(){return A}});async function s(o){const a=o.length;a&&(await r.ready,await r.write(o),n.size+=a,t.size+=a,t.availableSize-=a)}async function B(){i.size=n.size,await r.close()}}}async function RE(E,x){E.init&&!E.initialized&&await E.init(x)}function So(E){return Array.isArray(E)&&(E=new To(E)),E instanceof ReadableStream&&(E={readable:E}),E}function ko(E){E.writable===H0&&typeof E.next==t6&&(E=new g9(E)),E instanceof WritableStream&&(E={writable:E});const{writable:x}=E;return x.size===H0&&(x.size=0),E instanceof g9||Object.assign(E,{diskNumber:0,diskOffset:0,availableSize:1/0,maxSize:1/0}),E}function c0(E,x,e,t){return E.readUint8Array(x,e,t)}const S6="\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ".split(""),Oo=S6.length==256;function Io(E){if(Oo){let x="";for(let e=0;e<E.length;e++)x+=S6[E[e]];return x}else return new TextDecoder().decode(E)}function Zt(E,x){return x&&x.trim().toLowerCase()=="cp437"?Io(E):new TextDecoder(x).decode(E)}const k6="filename",O6="rawFilename",I6="comment",L6="rawComment",N6="uncompressedSize",R6="compressedSize",M6="offset",Xt="diskNumberStart",zt="lastModDate",Qt="rawLastModDate",U6="lastAccessDate",Lo="rawLastAccessDate",P6="creationDate",No="rawCreationDate",Ro="internalFileAttribute",Mo="externalFileAttribute",Uo="msDosCompatible",Po="zip64",$o=[k6,O6,R6,N6,zt,Qt,I6,L6,U6,P6,M6,Xt,Xt,Ro,Mo,Uo,Po,"directory","bitFlag","encrypted","signature","filenameUTF8","commentUTF8","compressionMethod","version","versionMadeBy","extraField","rawExtraField","extraFieldZip64","extraFieldUnicodePath","extraFieldUnicodeComment","extraFieldAES","extraFieldNTFS","extraFieldExtendedTimestamp"];class _9{constructor(x){$o.forEach(e=>this[e]=x[e])}}const Ot="File format is not recognized",jo="End of central directory not found",Wo="End of Zip64 central directory not found",Vo="End of Zip64 central directory locator not found",Ho="Central directory header not found",qo="Local file header not found",Ko="Zip64 extra field not found",Yo="File contains encrypted entry",Jo="Encryption method not supported",v9="Compression method not supported",b9="Split zip file",w9="utf-8",y9="cp437",Go=[[N6,Mx],[R6,Mx],[M6,Mx],[Xt,hx]],Zo={[hx]:{getValue:t0,bytes:4},[Mx]:{getValue:vE,bytes:8}};class Xo{constructor(x,e={}){Object.assign(this,{reader:So(x),options:e,config:R7()})}async*getEntriesGenerator(x={}){const e=this;let{reader:t}=e;const{config:n}=e;if(await RE(t),(t.size===H0||!t.readUint8Array)&&(t=new y6(await new Response(t.readable).blob()),await RE(t)),t.size<zx)throw new Error(Ot);t.chunkSize=M7(n);const i=await ta(t,m7,t.size,zx,hx*16);if(!i){const D=await c0(t,0,4),v=s0(D);throw t0(v)==p7?new Error(b9):new Error(jo)}const r=s0(i);let A=t0(r,12),s=t0(r,16);const B=i.offset,o=A0(r,20),a=B+zx+o;let f=A0(r,4);const F=t.lastDiskNumber||0;let h=A0(r,6),l=A0(r,8),c=0,u=0;if(s==Mx||A==Mx||l==hx||h==hx){const D=await c0(t,i.offset-bt,bt),v=s0(D);if(t0(v,0)!=g7)throw new Error(Wo);s=vE(v,8);let S=await c0(t,s,wt,-1),T=s0(S);const M=i.offset-bt-wt;if(t0(T,0)!=r9&&s!=M){const R=s;s=M,c=s-R,S=await c0(t,s,wt,-1),T=s0(S)}if(t0(T,0)!=r9)throw new Error(Vo);f==hx&&(f=t0(T,16)),h==hx&&(h=t0(T,20)),l==hx&&(l=vE(T,32)),A==Mx&&(A=vE(T,40)),s-=A}if(s>=t.size&&(c=t.size-s-A-zx,s=t.size-A-zx),F!=f)throw new Error(b9);if(s<0)throw new Error(Ot);let C=0,d=await c0(t,s,A,h),m=s0(d);if(A){const D=i.offset-A;if(t0(m,C)!=i9&&s!=D){const v=s;s=D,c+=s-v,d=await c0(t,s,A,h),m=s0(d)}}const g=i.offset-s-(t.lastDiskOffset||0);if(A!=g&&g>=0&&(A=g,d=await c0(t,s,A,h),m=s0(d)),s<0||s>=t.size)throw new Error(Ot);const _=I0(e,x,"filenameEncoding"),b=I0(e,x,"commentEncoding");for(let D=0;D<l;D++){const v=new zo(t,n,e.options);if(t0(m,C)!=i9)throw new Error(Ho);$6(v,m,C+6);const S=!!v.bitFlag.languageEncodingFlag,T=C+46,M=T+v.filenameLength,R=M+v.extraFieldLength,N=A0(m,C+4),P=(N&0)==0,Y=d.subarray(T,M),i0=A0(m,C+32),W=R+i0,r0=d.subarray(R,W),q=S,G=S,f0=P&&(re(m,C+38)&o9)==o9,x0=t0(m,C+42)+c;Object.assign(v,{versionMadeBy:N,msDosCompatible:P,compressedSize:0,uncompressedSize:0,commentLength:i0,directory:f0,offset:x0,diskNumberStart:A0(m,C+34),internalFileAttribute:A0(m,C+36),externalFileAttribute:t0(m,C+38),rawFilename:Y,filenameUTF8:q,commentUTF8:G,rawExtraField:d.subarray(M,R)});const[e0,ox]=await Promise.all([Zt(Y,q?w9:_||y9),Zt(r0,G?w9:b||y9)]);Object.assign(v,{rawComment:r0,filename:e0,comment:ox,directory:f0||e0.endsWith(I7)}),u=Math.max(x0,u),await j6(v,v,m,C+6);const h0=new _9(v);h0.getData=(Tx,Sx)=>v.getData(Tx,h0,Sx),C=W;const{onprogress:ax}=x;if(ax)try{await ax(D+1,l,new _9(v))}catch{}yield h0}const w=I0(e,x,"extractPrependedData"),p=I0(e,x,"extractAppendedData");return w&&(e.prependedData=u>0?await c0(t,0,u):new Uint8Array),e.comment=o?await c0(t,B+zx,o):new Uint8Array,p&&(e.appendedData=a<t.size?await c0(t,a,t.size-a):new Uint8Array),!0}async getEntries(x={}){const e=[];for await(const t of this.getEntriesGenerator(x))e.push(t);return e}async close(){}}class zo{constructor(x,e,t){Object.assign(this,{reader:x,config:e,options:t})}async getData(x,e,t={}){const n=this,{reader:i,offset:r,diskNumberStart:A,extraFieldAES:s,compressionMethod:B,config:o,bitFlag:a,signature:f,rawLastModDate:F,uncompressedSize:h,compressedSize:l}=n,c=e.localDirectory={},u=await c0(i,r,30,A),C=s0(u);let d=I0(n,t,"password");if(d=d&&d.length&&d,s&&s.originalCompressionMethod!=h7)throw new Error(v9);if(B!=F7&&B!=C7)throw new Error(v9);if(t0(C,0)!=D7)throw new Error(qo);$6(c,C,4),c.rawExtraField=c.extraFieldLength?await c0(i,r+30+c.filenameLength,c.extraFieldLength,A):new Uint8Array,await j6(n,c,C,4,!0),Object.assign(e,{lastAccessDate:c.lastAccessDate,creationDate:c.creationDate});const m=n.encrypted&&c.encrypted,g=m&&!s;if(m){if(!g&&s.strength===H0)throw new Error(Jo);if(!d)throw new Error(Yo)}const _=r+30+c.filenameLength+c.extraFieldLength,b=l,w=i.readable;Object.assign(w,{diskNumberStart:A,offset:_,size:b});const p=I0(n,t,"signal"),D=I0(n,t,"checkPasswordOnly");D&&(x=new WritableStream),x=ko(x),await RE(x,h);const{writable:v}=x,{onstart:S,onprogress:T,onend:M}=t,R={options:{codecType:v6,password:d,zipCrypto:g,encryptionStrength:s&&s.strength,signed:I0(n,t,"checkSignature"),passwordVerification:g&&(a.dataDescriptor?F>>>8&255:f>>>24&255),signature:f,compressed:B!=0,encrypted:m,useWebWorkers:I0(n,t,"useWebWorkers"),useCompressionStream:I0(n,t,"useCompressionStream"),transferStreams:I0(n,t,"transferStreams"),checkPasswordOnly:D},config:o,streamOptions:{signal:p,size:b,onstart:S,onprogress:T,onend:M}};let N=0;try{({outputSize:N}=await _o({readable:w,writable:v},R))}catch(P){if(!D||P.message!=k8)throw P}finally{const P=I0(n,t,"preventClose");v.size+=N,!P&&!v.locked&&await v.getWriter().close()}return D?void 0:x.getData?x.getData():v}}function $6(E,x,e){const t=E.rawBitFlag=A0(x,e+2),n=(t&A9)==A9,i=t0(x,e+6);Object.assign(E,{encrypted:n,version:A0(x,e),bitFlag:{level:(t&O7)>>1,dataDescriptor:(t&s9)==s9,languageEncodingFlag:(t&B9)==B9},rawLastModDate:i,lastModDate:na(i),filenameLength:A0(x,e+22),extraFieldLength:A0(x,e+24)})}async function j6(E,x,e,t,n){const{rawExtraField:i}=x,r=x.extraField=new Map,A=s0(new Uint8Array(i));let s=0;try{for(;s<i.length;){const u=A0(A,s),C=A0(A,s+2);r.set(u,{type:u,data:i.slice(s+4,s+4+C)}),s+=4+C}}catch{}const B=A0(e,t+4);Object.assign(x,{signature:t0(e,t+10),uncompressedSize:t0(e,t+18),compressedSize:t0(e,t+14)});const o=r.get(_7);o&&(Qo(o,x),x.extraFieldZip64=o);const a=r.get(T7);a&&(await T9(a,k6,O6,x,E),x.extraFieldUnicodePath=a);const f=r.get(S7);f&&(await T9(f,I6,L6,x,E),x.extraFieldUnicodeComment=f);const F=r.get(v7);F?(xa(F,x,B),x.extraFieldAES=F):x.compressionMethod=B;const h=r.get(b7);h&&(ea(h,x),x.extraFieldNTFS=h);const l=r.get(y7);l&&(Ea(l,x,n),x.extraFieldExtendedTimestamp=l);const c=r.get(k7);c&&(x.extraFieldUSDZ=c)}function Qo(E,x){x.zip64=!0;const e=s0(E.data),t=Go.filter(([n,i])=>x[n]==i);for(let n=0,i=0;n<t.length;n++){const[r,A]=t[n];if(x[r]==A){const s=Zo[A];x[r]=E[r]=s.getValue(e,i),i+=s.bytes}else if(E[r])throw new Error(Ko)}}async function T9(E,x,e,t,n){const i=s0(E.data),r=new LE;r.append(n[e]);const A=s0(new Uint8Array(4));A.setUint32(0,r.get(),!0);const s=t0(i,1);Object.assign(E,{version:re(i,0),[x]:Zt(E.data.subarray(5)),valid:!n.bitFlag.languageEncodingFlag&&s==t0(A,0)}),E.valid&&(t[x]=E[x],t[x+"UTF8"]=!0)}function xa(E,x,e){const t=s0(E.data),n=re(t,4);Object.assign(E,{vendorVersion:re(t,0),vendorId:re(t,2),strength:n,originalCompressionMethod:e,compressionMethod:A0(t,5)}),x.compressionMethod=E.compressionMethod}function ea(E,x){const e=s0(E.data);let t=4,n;try{for(;t<E.data.length&&!n;){const i=A0(e,t),r=A0(e,t+2);i==w7&&(n=E.data.slice(t+4,t+4+r)),t+=4+r}}catch{}try{if(n&&n.length==24){const i=s0(n),r=i.getBigUint64(0,!0),A=i.getBigUint64(8,!0),s=i.getBigUint64(16,!0);Object.assign(E,{rawLastModDate:r,rawLastAccessDate:A,rawCreationDate:s});const B=It(r),o=It(A),a=It(s),f={lastModDate:B,lastAccessDate:o,creationDate:a};Object.assign(E,f),Object.assign(x,f)}}catch{}}function Ea(E,x,e){const t=s0(E.data),n=re(t,0),i=[],r=[];e?((n&1)==1&&(i.push(zt),r.push(Qt)),(n&2)==2&&(i.push(U6),r.push(Lo)),(n&4)==4&&(i.push(P6),r.push(No))):E.data.length>=5&&(i.push(zt),r.push(Qt));let A=1;i.forEach((s,B)=>{if(E.data.length>=A+4){const o=t0(t,A);x[s]=E[s]=new Date(o*1e3);const a=r[B];E[a]=o}A+=4})}async function ta(E,x,e,t,n){const i=new Uint8Array(4),r=s0(i);ia(r,0,x);const A=t+n;return await s(t)||await s(Math.min(A,e));async function s(B){const o=e-B,a=await c0(E,o,B);for(let f=a.length-t;f>=0;f--)if(a[f]==i[0]&&a[f+1]==i[1]&&a[f+2]==i[2]&&a[f+3]==i[3])return{offset:o+f,buffer:a.slice(f,f+t).buffer}}}function I0(E,x,e){return x[e]===H0?E.options[e]:x[e]}function na(E){const x=(E&4294901760)>>16,e=E&65535;try{return new Date(1980+((x&65024)>>9),((x&480)>>5)-1,x&31,(e&63488)>>11,(e&2016)>>5,(e&31)*2,0)}catch{}}function It(E){return new Date(Number(E/BigInt(1e4)-BigInt(116444736e5)))}function re(E,x){return E.getUint8(x)}function A0(E,x){return E.getUint16(x,!0)}function t0(E,x){return E.getUint32(x,!0)}function vE(E,x){return Number(E.getBigUint64(x,!0))}function ia(E,x,e){E.setUint32(x,e,!0)}function s0(E){return new DataView(E.buffer)}let W6;try{W6=import.meta.url}catch{}S8({baseURL:W6});vo(S8);S8({Deflate:G4,Inflate:d7});Le(!0);const K=new kr("#wml"),V6=()=>localStorage.getItem("theme"),ra=E=>localStorage.setItem("theme",E),N8=()=>{const E=V6();return E||(window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light")},R8=E=>{E==="auto"&&window.matchMedia("(prefers-color-scheme: dark)").matches?document.documentElement.setAttribute("data-bs-theme","dark"):document.documentElement.setAttribute("data-bs-theme",E),E==="light"?K.sendRawMidiMessage("F0,0A,7D,10,00,01,01,F7"):E==="dark"?K.sendRawMidiMessage("F0,0A,7D,10,00,01,02,F7"):K.sendRawMidiMessage("F0,0A,7D,10,00,01,00,F7")};R8(N8());const S9=(E,x=!1)=>{const e=document.querySelector("#bd-theme");if(!e)return;const t=document.querySelector("#bd-theme-text"),n=document.querySelector(".theme-icon-active use"),i=document.querySelector(`[data-bs-theme-value="${E}"]`),r=i.querySelector("svg use").getAttribute("href");document.querySelectorAll("[data-bs-theme-value]").forEach(s=>{s.classList.remove("active"),s.setAttribute("aria-pressed","false")}),i.classList.add("active"),i.setAttribute("aria-pressed","true"),n.setAttribute("href",r);const A=`${t.textContent} (${i.dataset.bsThemeValue})`;e.setAttribute("aria-label",A),x&&e.focus()};window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",()=>{const E=V6();E!=="light"&&E!=="dark"&&R8(N8())});const Aa=document.querySelectorAll("*[title]");[...Aa].map(E=>new Hx(E));let H6=!1;const fe=ri.parse(window.location.hash),sa=[".mid",".midi",".mld",".mml",".mms",".mmi",".ms2mml"];document.addEventListener("DOMContentLoaded",async()=>{K.setLoop(document.getElementById("playerloop").checked),K.setTempoRate(document.getElementById("tempo").value),K.setMasterVolume(document.getElementById("volume").value*16383),K.setWebMidiLink("https://logue.dev/sf2synth.js/?soundfont=Yamaha XG Sound Set Ver.2.0.sf2","wml"),[].slice.call(document.querySelectorAll("#control-tab button")).forEach(t=>{const n=new $x(t);t.addEventListener("click",i=>{i.preventDefault(),n.show()})});const x=document.getElementById("zips");document.getElementById("files").addEventListener("change",()=>J0()),x.addEventListener("change",t=>k9(t.target.value)),fe.zip&&!x8?x.value=fe.zip:aa(),k9(x.value);const e=document.getElementById("player");e.addEventListener("drop",t=>{const n=t.dataTransfer;n.files.length&&(t.preventDefault(),t.stopPropagation(),Ba(n.files[0])),e.classList.remove("bg-info")},!1),e.addEventListener("dragover",t=>{t.preventDefault(),t.stopPropagation(),e.classList.add("bg-info")},!1),e.addEventListener("dragleave",t=>{t.preventDefault(),t.stopPropagation(),e.classList.remove("bg-info")},!1),document.getElementById("tempo").addEventListener("change",t=>{const n=t.target.value;K.setTempoRate(n),document.getElementById("tempo_value").innerText=n}),document.getElementById("volume").addEventListener("change",t=>{const n=t.target.value;K.setMasterVolume(n*16383),document.getElementById("volume_value").innerText=n}),document.getElementById("prev").addEventListener("click",()=>{const t=document.getElementById("files"),n=t.selectedIndex;n===t.options.length?t.selectedIndex=t.options.length:t.selectedIndex=n-1,J0()}),document.getElementById("next").addEventListener("click",()=>{const t=document.getElementById("files"),n=t.selectedIndex;n===t.options.length?t.selectedIndex=0:t.selectedIndex=n+1,J0()}),document.getElementById("play").addEventListener("click",()=>{K.pause?K.play():K.stop()}),document.getElementById("stop").addEventListener("click",()=>{J0(),history.pushState("",document.title,window.location.pathname),setTimeout(()=>{K.stop()},51)}),document.getElementById("panic").addEventListener("click",()=>K.sendAllSoundOff()),document.getElementById("reset").addEventListener("click",()=>K.sendGmReset()),document.getElementById("download").addEventListener("click",async()=>{const t=document.getElementById("files"),i=t.querySelectorAll("option")[t.selectedIndex].value,s=await(await t.zip.getEntries({filenameEncoding:"shift_jis"})).find(a=>a.filename===i).getData(new T6),o=O4.createWriteStream(i,{size:s.byteLength}).getWriter();o.write(s),o.close()}),document.getElementById("synth").addEventListener("change",t=>{K.stop(),K.setWebMidiLink(t.target.value,"wml")}),S9(N8()),document.querySelectorAll("[data-bs-theme-value]").forEach(t=>{t.addEventListener("click",()=>{const n=t.getAttribute("data-bs-theme-value");ra(n),R8(n),S9(n,!0)})}),Le(!1)});function Ba(E){const x=document.getElementById("info");x.innerText="Now Loading...";const e=document.createElement("div");e.className="progress";const t=document.createElement("div");t.className="progress-bar progress-warning",e.appendChild(t),x.appendChild(e);const n=new FileReader;K.sendGmReset(),n.onload=i=>{const r=new Uint8Array(i.target.result);q6(E.name,r),x.removeChild(e),x.innerHtml=`Now Playing "${E.name}".`,x.classList.remove("alert-warning"),x.classList.add("alert-success")},n.onloadstart=()=>x.classList.remove("alert-success"),x.classList.add("alert-warning"),n.onprogress=i=>{if(i.lengthComputable){const r=i.loaded/i.total*100;t.style.width=r+"%",t.innerText=r+" %"}},n.readAsArrayBuffer(E)}let x8=!1;async function k9(E){Le(!0);const x=document.getElementById("files"),e=async A=>{for(;x.firstChild;)x.removeChild(x.firstChild);x.zip=new Xo(new y6(A)),(await x.zip.getEntries({filenameEncoding:"shift_jis"})).forEach(a=>{const f=a.filename.slice(a.filename.lastIndexOf(".")).toLowerCase();if(f==="/"||!sa.includes(f))return;const F=document.createElement("option");F.textContent=a.filename,F.value=a.filename,x.appendChild(F)});const B=x.selectedIndex;let o=B;for(;B==o;)o=~~(x.length*Math.random());x.selectedIndex=o,Le(!1),fe.file&&!x8&&(x.value=fe.file,J0()),x8=!0},t=await window.caches.open("zips"),n=await t.match(x.value);if(n){e(await n.blob());return}const i=await fetch(E,{method:"GET",mode:"no-cors",credentials:"include"});if(!i.ok)throw new Error("Network response was not ok.");const r=i.clone();t&&t.put(E,r),e(await i.blob()),Le(!1)}async function J0(){const E=document.getElementById("files"),x=E.value;if(!x)return;const t=(await E.zip.getEntries({filenameEncoding:"shift_jis"})).find(r=>r.filename===x),n=new T6;q6(x,await t.getData(n)),document.getElementById("info").innerHTML=`Now playing "${x}".`,document.title=`${x} - ${document.getElementById("zips").value} / Standard MIDI Player for Web`;const i=`#zip=${encodeURIComponent(document.getElementById("zips").value)}&file=${encodeURIComponent(x)}`;if(document.getElementById("music_title").value=K.getSequenceName(1),document.getElementById("copyright").value=K.getCopyright(),window.history?.pushState){window.history.pushState(document.title,null,i);return}document.querySelector('link[rel="canonical"]').setAttribute("href",`${location.href}/${i}`),fe.zip&&fe.file&&K.play()}function q6(E,x){switch(K.stop(),K.sendAllSoundOff(),K.sendGmReset(),document.getElementById("music_title").value="",document.getElementById("copyright").value="",document.getElementById("text_event").value="",document.title="SMF Player",E.split(".").pop().toLowerCase()){case"midi":case"mid":K.loadMidiFile(x);break;case"mld":K.loadMldFile(x);break;case"ms2mml":K.loadMs2MmlFile(x);break;case"mms":K.loadMakiMabiSequenceFile(x);break;case"mml":K.load3MleFile(x);break;case"mmi":K.loadMabiIccoFile(x);break}K.setMasterVolume(document.getElementById("volume").value*16383),K.play()}function oa(){const E=document.getElementById("files");E.selectedIndex=~~(E.length*Math.random()),J0()}function Le(E=!0){document.querySelectorAll("input, button, select").forEach(x=>x.disabled=E)}function aa(){const E=document.getElementById("zips");E.selectedIndex=~~(E.length*Math.random()),J0()}window.onmessage=E=>{const x=E.data,e=document.getElementById("files"),t=document.getElementById("play"),n=document.getElementById("info");switch(x){case"endoftrack":if(K.stop(),t.innerHTML='<em class="bi bi-play-fill"></em>',t.classList.add("btn-primary"),t.classList.remove("btn-success"),document.getElementById("random").chcked)oa();else{const i=document.getElementById("files");e.selectedIndex!==0&&(e.selectedIndex==i.options.length?i.selectedIndex=0:i.selectedIndex=e.selectedIndex+1,J0())}break;case"progress":n.innerText="Loading soundfont...";break;case"link,ready":H6=!0,document.getElementById("random").checked&&J0(),n.classList.add("alert-success"),n.classList.remove("alert-warning"),n.innerText="Ready.",document.querySelectorAll("input, button, select").forEach(i=>i.disabled="");break}};let O9="",I9="",Lt="";setInterval(()=>{const E=document.getElementById("music-progress").querySelector(".progress-bar"),x=document.getElementById("play");if(H6){K.pause?(x.innerHTML='<em class="bi bi-play"></em>',x.classList.remove("btn-success"),x.classList.add("btn-primary")):(x.innerHTML='<em class="bi bi-pause"></em>',x.classList.remove("btn-primary"),x.classList.add("btn-success"));const e=parseInt(K.getPosition()/K.getLength()*100);E.style.width=e+"%",E.innerText=e+"%",document.getElementById("time-now").innerText=K.getTime(),document.getElementById("time-total").innerText=K.getTotalTime(),document.getElementById("current-tempo").innerText=K.getTempo();const t=K.getLyrics();if(t&&t.length!==0&&O9!==t&&(Lt="",t.replace(/\//g,"<br />").replace(/>/g,"    ").replace(/&m/g,"👨‍🎤").replace(/&f/g,"👩‍🎤").replace(/&c/g,"👫"),Lt+=t,document.getElementById("lyrics").innerText=Lt),I9!==K.getTextEvent()&&(document.getElementById("text_event").value=K.getTextEvent()),O9=K.getLyrics(),I9=K.getTextEvent(),e===100){const n=document.getElementById("files");n.selectedIndex==n.options.length?n.selectedIndex=0:n.selectedIndex=n.selectedIndex+1,J0()}}},600);
