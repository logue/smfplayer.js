{"version":3,"file":"smf.parser.js","mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;;ACVA;AACA,IAAMA,IAAI,GAAG;AACXC,EAAAA,OAAO,EAAE,OADE;AAEXC,EAAAA,IAAI,EAAE;AAFK,CAAb;AAIA,iEAAeF,IAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;IACMG;AACJ;AACF;AACA;AACA;AACA;AACE,eAAYC,OAAZ,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsC;AAAA;;AACpC;AACA,OAAKF,OAAL,GAAeA,OAAf;AACA;;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACA;;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACD;AAGH;AACA;AACA;AACA;;;IACMC;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,wBAAYH,OAAZ,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCE,OAAtC,EAA+CC,aAA/C,EAA8DC,aAA9D,EAA6E;AAAA;;AAAA;;AAC3E,8BAAMN,OAAN,EAAeC,SAAf,EAA0BC,IAA1B;AACA;;AACA,UAAKE,OAAL,GAAeA,OAAf;AACA;;AACA,UAAKG,UAAL,GAAkBF,aAAlB;AACA;;AACA,UAAKG,UAAL,GAAkBF,aAAlB;AAP2E;AAQ5E;;;EAjBwBP;AAoB3B;AACA;AACA;AACA;;;IACMU;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACE,gCAAYT,OAAZ,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCQ,IAAtC,EAA4C;AAAA;;AAAA;;AAC1C,gCAAMV,OAAN,EAAeC,SAAf,EAA0BC,IAA1B;AACA;;AACA,WAAKQ,IAAL,GAAYA,IAAZ;AAH0C;AAI3C;;;EAXgCX;AAcnC;AACA;AACA;AACA;;;IACMY;;;;;AACJ;AACF;AACA;AACA;AACA;AACA;AACE,qBAAYX,OAAZ,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCQ,IAAtC,EAA4C;AAAA;;AAAA;;AAC1C,gCAAMV,OAAN,EAAeC,SAAf,EAA0BC,IAA1B;AACA;;AACA,WAAKQ,IAAL,GAAYA,IAAZ;AAH0C;AAI3C;;;EAXqBX;;;;;;;;;;;;;;;;;;;;;;ACjExB;AACA;AACA;IACqBa;AACnB;AACF;AACA;AACA;AACE,gBAAYC,KAAZ,EAAmC;AAAA,QAAhBC,SAAgB,uEAAJ,EAAI;;AAAA;;AACjC;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA;;AACA,SAAKE,EAAL,GAAUD,SAAS,CAACE,KAAV,IAAmB,CAA7B;AACA;;AACA,SAAKC,MAAL,GAAcH,SAAS,CAACG,MAAV,IAAoBJ,KAAK,CAACI,MAAN,GAAe,KAAKF,EAAtD;AACA;;AACA,SAAKG,SAAL,GAAiB,EAAjB;AACA;;AACA,SAAKC,MAAL,GAAc,KAAKJ,EAAnB;AACA;;AACA,SAAKK,OAAL,GAAeN,SAAS,CAACM,OAAV,KAAsB,KAAK,CAA3B,GAA+BN,SAAS,CAACM,OAAzC,GAAmD,IAAlE;AACA;;AACA,SAAKC,SAAL,GACEP,SAAS,CAACO,SAAV,KAAwB,KAAK,CAA7B,GAAiCP,SAAS,CAACO,SAA3C,GAAuD,KADzD;AAED;AAED;AACF;;;;;WACE,iBAAQ;AACN;AACA,UAAMJ,MAAM,GAAG,KAAKA,MAAL,GAAc,KAAKE,MAAlC;AAEA,WAAKD,SAAL,GAAiB,EAAjB;;AAEA,aAAO,KAAKH,EAAL,GAAUE,MAAjB,EAAyB;AACvB,aAAKK,UAAL;AACD;AACF;AAED;AACF;;;;WACE,sBAAa;AACX;AACA,UAAMT,KAAK,GAAG,KAAKA,KAAnB;AACA;;AACA,UAAIE,EAAE,GAAG,KAAKA,EAAd;AACA;;AACA,UAAIQ,IAAJ;AAEA,WAAKL,SAAL,CAAeM,IAAf,CACE,IAAIC,SAAJ,CACEC,MAAM,CAACC,YAAP,CAAoBd,KAAK,CAACE,EAAE,EAAH,CAAzB,EAAiCF,KAAK,CAACE,EAAE,EAAH,CAAtC,EAA8CF,KAAK,CAACE,EAAE,EAAH,CAAnD,EAA2DF,KAAK,CAACE,EAAE,EAAH,CAAhE,CADF,EAEGQ,IAAI,GAAG,KAAKF,SAAL,GACJ,CAAER,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EAAhB,GACEF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EADjB,GAEEF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,CAFjB,GAGCF,KAAK,CAACE,EAAE,EAAH,CAHP,MAIA,CALI,GAMJ,CAACF,KAAK,CAACE,EAAE,EAAH,CAAL,GACEF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,CADjB,GAEEF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EAFjB,GAGEF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EAHlB,MAIA,CAZN,EAaEA,EAbF,CADF;AAkBAA,MAAAA,EAAE,IAAIQ,IAAN,CA1BW,CA4BX;;AACA,UAAI,KAAKH,OAAL,IAAgB,CAAEL,EAAE,GAAG,KAAKI,MAAX,GAAqB,CAAtB,MAA6B,CAAjD,EAAoD;AAClDJ,QAAAA,EAAE;AACH;;AAED,WAAKA,EAAL,GAAUA,EAAV;AACD;AAED;AACF;AACA;AACA;;;;WACE,kBAASC,KAAT,EAAgB;AACd;AACA,UAAMY,KAAK,GAAG,KAAKV,SAAL,CAAeF,KAAf,CAAd;;AAEA,UAAIY,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpB,eAAO,IAAP;AACD;;AAED,aAAOA,KAAP;AACD;AAED;AACF;AACA;;;;WACE,6BAAoB;AAClB,aAAO,KAAKV,SAAL,CAAeD,MAAtB;AACD;;;;;AAGH;AACA;AACA;AACA;;;;;IACMQ;AACJ;AACF;AACA;AACA;AACA;AACE,mBAAYI,IAAZ,EAAkBN,IAAlB,EAAwBJ,MAAxB,EAAgC;AAAA;;AAC9B;AACA,OAAKU,IAAL,GAAYA,IAAZ;AACA;;AACA,OAAKN,IAAL,GAAYA,IAAZ;AACA;;AACA,OAAKJ,MAAL,GAAcA,MAAd;AACD;;;;;;UCrHH;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAEA;AACA;AACA;;IACqBW;AACnB;AACF;AACA;AACA;AACE,eAAYjB,KAAZ,EAAmC;AAAA,QAAhBC,SAAgB,uEAAJ,EAAI;;AAAA;;AACjCA,IAAAA,SAAS,CAACM,OAAV,GAAoB,KAApB;AACAN,IAAAA,SAAS,CAACO,SAAV,GAAsB,IAAtB;AAEA;;AACA,SAAKR,KAAL,GAAaA,KAAb;AACA;;AACA,SAAKE,EAAL,GAAUD,SAAS,CAACE,KAAV,IAAmB,CAA7B;AACA;;AACA,SAAKe,UAAL,GAAkB,CAAlB;AACA;AACJ;AACA;AACA;;AACI,SAAKC,WAAL,GAAmB,IAAIpB,6CAAJ,CAASC,KAAT,EAAgBC,SAAhB,CAAnB,CAdiC,CAgBjC;;AAEA;;AACA,SAAKmB,UAAL,GAAkB,CAAlB;AACA;;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA;;AACA,SAAKC,YAAL,GAAoB,GAApB;AACA;;AACA,SAAKC,MAAL,GAAc,EAAd;AACA;;AACA,SAAKC,WAAL,GAAmB,EAAnB;AAEA;;AACA,SAAKxC,OAAL,GAAeD,qDAAf;AACA;;AACA,SAAK0C,KAAL,GAAa1C,mDAAb;AACD;AAED;AACF;;;;;WACE,iBAAQ;AACN;AACA,UAAI2C,CAAC,GAAG,CAAR;AACA;;AACA,UAAIC,EAAE,GAAG,CAAT,CAJM,CAMN;;AACA,WAAKR,WAAL,CAAiBS,KAAjB,GAPM,CASN;;AACA,WAAKC,gBAAL,GAVM,CAYN;;AACA,WAAKH,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAG,KAAKN,cAAtB,EAAsCK,CAAC,GAAGC,EAA1C,EAA8C,EAAED,CAAhD,EAAmD;AACjD,aAAKI,eAAL;AACD;AACF;AAED;AACF;;;;WACE,4BAAmB;AACjB;AACA,UAAMf,KAAK,GAAG,KAAKI,WAAL,CAAiBY,QAAjB,CAA0B,KAAKb,UAAL,EAA1B,CAAd;AACA;;AACA,UAAMrB,IAAI,GAAG,KAAKG,KAAlB;AACA;;AACA,UAAIE,EAAE,GAAGa,KAAK,CAACT,MAAf;;AAEA,UAAI,CAACS,KAAD,IAAUA,KAAK,CAACC,IAAN,KAAe,MAA7B,EAAqC;AACnC,cAAM,IAAIgB,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,WAAKZ,UAAL,GAAmBvB,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAoBL,IAAI,CAACK,EAAE,EAAH,CAA1C;AACA,WAAKmB,cAAL,GAAuBxB,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAoBL,IAAI,CAACK,EAAE,EAAH,CAA9C;AACA,WAAKoB,YAAL,GAAqBzB,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAoBL,IAAI,CAACK,EAAE,EAAH,CAA5C;AACD;AAED;AACF;;;;WACE,2BAAkB;AAChB;AACA,UAAMa,KAAK,GAAG,KAAKI,WAAL,CAAiBY,QAAjB,CAA0B,KAAKb,UAAL,EAA1B,CAAd;AACA;;AACA,UAAMrB,IAAI,GAAG,KAAKG,KAAlB;AACA;;AACA,UAAIE,EAAE,GAAGa,KAAK,CAACT,MAAf;AACA;;AACA,UAAII,IAAI,GAAG,CAAX;AACA;;AACA,UAAItB,SAAS,GAAG,CAAhB;AACA;;AACA,UAAI6C,SAAS,GAAG,CAAhB;AACA;;AACA,UAAI1C,OAAO,GAAG,CAAd;AACA;;AACA,UAAI2C,aAAa,GAAG,CAAC,CAArB;AACA;;AACA,UAAIC,WAAW,GAAG,CAAC,CAAnB;AACA;;AACA,UAAIC,GAAG,GAAG,CAAV;AACA;;AACA,UAAIC,SAAS,GAAG,CAAhB;AACA;;AACA,UAAI/B,MAAM,GAAG,CAAb;AACA;;AACA,UAAIF,MAAM,GAAG,CAAb;AACA;;AACA,UAAIkC,MAAM,GAAG,CAAb;AACA;;AACA,UAAIC,KAAJ;AACA;;AACA,UAAIC,UAAJ;AAEA;;AACA,UAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB;AACA,YAAIC,MAAM,GAAG,CAAb;AAEAN,QAAAA,GAAG,GAAG,CAAN;;AAEA,WAAG;AACDA,UAAAA,GAAG,GAAGvC,IAAI,CAACK,EAAE,EAAH,CAAV;AACAwC,UAAAA,MAAM,GAAIA,MAAM,IAAI,CAAX,GAAiBN,GAAG,GAAG,IAAhC;AACD,SAHD,QAGS,CAACA,GAAG,GAAG,IAAP,MAAiB,CAH1B;;AAKA,eAAOM,MAAP;AACD,OAZD;;AAcA,UAAI,CAAC3B,KAAD,IAAUA,KAAK,CAACC,IAAN,KAAe,MAA7B,EAAqC;AACnC,cAAM,IAAIgB,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAEDtB,MAAAA,IAAI,GAAGK,KAAK,CAACT,MAAN,GAAeS,KAAK,CAACL,IAA5B;AACA,UAAMiC,UAAU,GAAG,EAAnB;AACA,UAAMC,UAAU,GAAG,EAAnB;;AAEA,aAAO1C,EAAE,GAAGQ,IAAZ,EAAkB;AAChB;AACAtB,QAAAA,SAAS,GAAGqD,UAAU,EAAtB;AACAJ,QAAAA,SAAS,IAAIjD,SAAb,CAHgB,CAKhB;;AACAkB,QAAAA,MAAM,GAAGJ,EAAT,CANgB,CAQhB;;AACAoC,QAAAA,MAAM,GAAGzC,IAAI,CAACK,EAAE,EAAH,CAAb;AACA+B,QAAAA,SAAS,GAAIK,MAAM,IAAI,CAAX,GAAgB,GAA5B;AACA/C,QAAAA,OAAO,GAAG+C,MAAM,GAAG,GAAnB,CAXgB,CAahB;;AACA,YAAIL,SAAS,GAAG,CAAhB,EAAmB;AACjBA,UAAAA,SAAS,GAAGC,aAAZ;AACA3C,UAAAA,OAAO,GAAG4C,WAAV;AACAG,UAAAA,MAAM,GAAIJ,aAAa,IAAI,CAAlB,GAAuBC,WAAhC;AACAjC,UAAAA,EAAE;AACFI,UAAAA,MAAM;AACP,SAND,MAMO;AACL4B,UAAAA,aAAa,GAAGD,SAAhB;AACAE,UAAAA,WAAW,GAAG5C,OAAd;AACD,SAvBe,CAyBhB;;;AACA,YAAMsD,KAAK,GAAG,CACZ,IADY,EAEZ,IAFY,EAGZ,IAHY,EAIZ,IAJY,EAKZ,IALY,EAMZ,IANY,EAOZ,IAPY,EAQZ,IARY,EASZ,SATY,EASD;AACX,gBAVY,EAWZ,gBAXY,EAYZ,eAZY,EAaZ,eAbY,EAcZ,mBAdY,EAeZ,WAfY,CAAd;;AAkBA,gBAAQZ,SAAR;AACE;AACA,eAAK,GAAL;AACA;;AACA,eAAK,GAAL;AACA;;AACA,eAAK,GAAL;AACA;;AACA,eAAK,GAAL;AACA;;AACA,eAAK,GAAL;AACA;;AACA,eAAK,GAAL;AACEM,YAAAA,KAAK,GAAG,IAAIjD,qDAAJ,CACNuD,KAAK,CAACZ,SAAD,CADC,EAEN7C,SAFM,EAGNiD,SAHM,EAIN9C,OAJM,EAKNM,IAAI,CAACK,EAAE,EAAH,CALE,EAMNL,IAAI,CAACK,EAAE,EAAH,CANE,CAAR;AAQA;;AACF,eAAK,GAAL;AACEqC,YAAAA,KAAK,GAAG,IAAIjD,qDAAJ,CACNuD,KAAK,CAACZ,SAAD,CADC,EAEN7C,SAFM,EAGNiD,SAHM,EAIN9C,OAJM,EAKNM,IAAI,CAACK,EAAE,EAAH,CALE,CAAR;AAOA;AACF;;AACA,eAAK,GAAL;AACE,oBAAQX,OAAR;AACE;AACA,mBAAK,GAAL;AACE6C,gBAAAA,GAAG,GAAGK,UAAU,EAAhB;;AACA,oBAAI5C,IAAI,CAACK,EAAE,GAAGkC,GAAL,GAAW,CAAZ,CAAJ,KAAuB,IAA3B,EAAiC;AAC/B,wBAAM,IAAIJ,KAAJ,CAAU,qBAAV,CAAN;AACD;;AACDO,gBAAAA,KAAK,GAAG,IAAI3C,6DAAJ,CACN,iBADM,EAENR,SAFM,EAGNiD,SAHM,EAINxC,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAkB,CAACA,EAAE,IAAIkC,GAAP,IAAc,CAAhC,CAJM,CAAR;AAMA;;AACF,mBAAK,GAAL;AACEA,gBAAAA,GAAG,GAAGK,UAAU,EAAhB;AACAF,gBAAAA,KAAK,GAAG,IAAI3C,6DAAJ,CACN,qBADM,EAENR,SAFM,EAGNiD,SAHM,EAINxC,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAJM,CAAR;AAMA;AACF;;AACA,mBAAK,GAAL;AACEH,gBAAAA,SAAS,GAAGpC,IAAI,CAACK,EAAE,EAAH,CAAhB;AACAkC,gBAAAA,GAAG,GAAGK,UAAU,EAAhB;;AACA,wBAAQR,SAAR;AACE,uBAAK,IAAL;AAAW;AACTM,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CACN,gBADM,EAENV,SAFM,EAGNiD,SAHM,EAIN,CAACxC,IAAI,CAACK,EAAE,EAAH,CAAL,EAAaL,IAAI,CAACK,EAAE,EAAH,CAAjB,CAJM,CAAR;AAMA;;AACF,uBAAK,IAAL;AAAW;AACTqC,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,WAAd,EAA2BV,SAA3B,EAAsCiD,SAAtC,EAAiD,CACvDxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CACE,IADF,EAEElD,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAFF,CADuD,CAAjD,CAAR;AAMA;;AACF,uBAAK,IAAL;AAAW;AACTG,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CACN,iBADM,EAENV,SAFM,EAGNiD,SAHM,EAIN,CACExB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CACE,IADF,EAEElD,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAFF,CADF,CAJM,CAAR;AAWA;;AACF,uBAAK,IAAL;AAAW;AACTG,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CACN,mBADM,EAENV,SAFM,EAGNiD,SAHM,EAIN,CACExB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CACE,IADF,EAEElD,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAFF,CADF,CAJM,CAAR;AAWA;;AACF,uBAAK,IAAL;AAAW;AACTG,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CACN,gBADM,EAENV,SAFM,EAGNiD,SAHM,EAIN,CACExB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CACE,IADF,EAEElD,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAFF,CADF,CAJM,CAAR;AAWA;;AACF,uBAAK,IAAL;AAAW;AACTG,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,QAAd,EAAwBV,SAAxB,EAAmCiD,SAAnC,EAA8C,CACpDxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CACE,IADF,EAEElD,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAFF,CADoD,CAA9C,CAAR;AAMA;;AACF,uBAAK,IAAL;AAAW;AACTG,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,QAAd,EAAwBV,SAAxB,EAAmCiD,SAAnC,EAA8C,CACpDxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CACE,IADF,EAEElD,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAFF,CADoD,CAA9C,CAAR;AAMA;;AACF,uBAAK,IAAL;AAAW;AACTG,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,UAAd,EAA0BV,SAA1B,EAAqCiD,SAArC,EAAgD,CACtDxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CACE,IADF,EAEElD,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAFF,CADsD,CAAhD,CAAR;AAMA;;AACF,uBAAK,IAAL;AAAW;AACTG,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CACN,mBADM,EAENV,SAFM,EAGNiD,SAHM,EAIN,CAACxC,IAAI,CAACK,EAAE,EAAH,CAAL,CAJM,CAAR;AAMA;;AACF,uBAAK,IAAL;AAAW;AACTqC,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,YAAd,EAA4BV,SAA5B,EAAuCiD,SAAvC,EAAkD,EAAlD,CAAR;AACA;;AACF,uBAAK,IAAL;AAAW;AACTE,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,UAAd,EAA0BV,SAA1B,EAAqCiD,SAArC,EAAgD,CACrDxC,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,EAAf,GAAsBL,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,CAApC,GAAyCL,IAAI,CAACK,EAAE,EAAH,CADS,CAAhD,CAAR;AAGA;;AACF,uBAAK,IAAL;AAAW;AACTqC,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,aAAd,EAA6BV,SAA7B,EAAwCiD,SAAxC,EAAmD,CACzDxC,IAAI,CAACK,EAAE,EAAH,CADqD,EAEzDL,IAAI,CAACK,EAAE,EAAH,CAFqD,EAGzDL,IAAI,CAACK,EAAE,EAAH,CAHqD,EAIzDL,IAAI,CAACK,EAAE,EAAH,CAJqD,EAKzDL,IAAI,CAACK,EAAE,EAAH,CALqD,CAAnD,CAAR;AAOA;;AACF,uBAAK,IAAL;AAAW;AACTqC,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,eAAd,EAA+BV,SAA/B,EAA0CiD,SAA1C,EAAqD,CAC3DxC,IAAI,CAACK,EAAE,EAAH,CADuD,EAE3DL,IAAI,CAACK,EAAE,EAAH,CAFuD,EAG3DL,IAAI,CAACK,EAAE,EAAH,CAHuD,EAI3DL,IAAI,CAACK,EAAE,EAAH,CAJuD,CAArD,CAAR;AAMA;;AACF,uBAAK,IAAL;AAAW;AACTqC,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,cAAd,EAA8BV,SAA9B,EAAyCiD,SAAzC,EAAoD,CAC1DxC,IAAI,CAACK,EAAE,EAAH,CADsD,EAE1DL,IAAI,CAACK,EAAE,EAAH,CAFsD,CAApD,CAAR;AAIA;;AACF,uBAAK,IAAL;AAAW;AACTqC,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CACN,mBADM,EAENV,SAFM,EAGNiD,SAHM,EAIN,CAACxC,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAAD,CAJM,CAAR;AAMA;;AACF;AACE;AACAG,oBAAAA,KAAK,GAAG,IAAIzC,kDAAJ,CAAc,SAAd,EAAyBV,SAAzB,EAAoCiD,SAApC,EAA+C,CACrDJ,SADqD,EAErDpC,IAAI,CAACiD,QAAL,CAAc5C,EAAd,EAAmBA,EAAE,IAAIkC,GAAzB,CAFqD,CAA/C,CAAR;AAjIJ;;AAsIA;;AACF;AACEY,gBAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb,EAAiCX,MAAM,CAACY,QAAP,CAAgB,EAAhB,CAAjC;AAnKJ;;AAqKA;AACF;;AACA;AACE,kBAAM,IAAIlB,KAAJ,CAAU,gBAAV,CAAN;AAzMJ,SA5CgB,CAwPhB;;;AACA5B,QAAAA,MAAM,GAAGF,EAAE,GAAGI,MAAd;AACAkC,QAAAA,UAAU,GAAG3C,IAAI,CAACiD,QAAL,CAAcxC,MAAd,EAAsBA,MAAM,GAAGF,MAA/B,CAAb;AACAoC,QAAAA,UAAU,CAAC,CAAD,CAAV,GAAgBF,MAAhB;;AACA,YACEC,KAAK,YAAYjD,qDAAjB,IACAiD,KAAK,CAACpD,OAAN,KAAkB,QADlB;AAEA;AACCoD,QAAAA,KAAD,CAAQ5C,UAAR,KAAuB,CAJzB,EAKE;AACA4C,UAAAA,KAAK,CAACpD,OAAN,GAAgB0D,KAAK,CAAC,CAAD,CAArB;AACAL,UAAAA,UAAU,GAAG,IAAIW,UAAJ,CAAe,CAC1B,OAAOZ,KAAK,CAAChD,OADa,EAE1BgD,KAAK,CAAC7C,UAFoB,EAG1B6C,KAAK,CAAC5C,UAHoB,CAAf,CAAb;AAKD;;AACDiD,QAAAA,UAAU,CAACjC,IAAX,CAAgB6B,UAAhB,EAzQgB,CA2QhB;;AACAG,QAAAA,UAAU,CAAChC,IAAX,CAAgB4B,KAAhB;AACD;;AAED,WAAKhB,MAAL,CAAYZ,IAAZ,CAAiBgC,UAAjB;AACA,WAAKnB,WAAL,CAAiBb,IAAjB,CAAsBiC,UAAtB;AACD","sources":["webpack://SMF/webpack/universalModuleDefinition","webpack://SMF/./src/meta.js","webpack://SMF/./src/midi_event.js","webpack://SMF/./src/riff.js","webpack://SMF/webpack/bootstrap","webpack://SMF/webpack/runtime/define property getters","webpack://SMF/webpack/runtime/hasOwnProperty shorthand","webpack://SMF/webpack/runtime/make namespace object","webpack://SMF/./src/smf.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SMF\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SMF\"] = factory();\n\telse\n\t\troot[\"SMF\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn ","// This file is auto-generated by the build system.\nconst Meta = {\n  version: '0.3.6',\n  date: '2021-11-04T11:03:20.907Z',\n};\nexport default Meta;","/**\n * Midi Event abstract Structure\n */\nclass Event {\n  /**\n   * @param {string} subtype event subtype name.\n   * @param {number} deltaTime delta time.\n   * @param {number} time time.\n   */\n  constructor(subtype, deltaTime, time) {\n    /** @type {string} */\n    this.subtype = subtype;\n    /** @type {number} */\n    this.deltaTime = deltaTime;\n    /** @type {number} */\n    this.time = time;\n  }\n}\n\n/**\n * Midi Channel Event Structure\n * @extends {Event}\n */\nclass ChannelEvent extends Event {\n  /**\n   * @param {string} subtype\n   * @param {number} deltaTime delta time.\n   * @param {number} time time.\n   * @param {number} channel\n   * @param {number=} optParameter1\n   * @param {number=} optParameter2\n   */\n  constructor(subtype, deltaTime, time, channel, optParameter1, optParameter2) {\n    super(subtype, deltaTime, time);\n    /** @type {number} */\n    this.channel = channel;\n    /** @type {(number|undefined)} */\n    this.parameter1 = optParameter1;\n    /** @type {(number|undefined)} */\n    this.parameter2 = optParameter2;\n  }\n}\n\n/**\n * System Exclusive Event Structure\n * @extends {Event}\n */\nclass SystemExclusiveEvent extends Event {\n  /**\n   * @param {string} subtype\n   * @param {number} deltaTime delta time.\n   * @param {number} time time.\n   * @param {ByteArray} data\n   */\n  constructor(subtype, deltaTime, time, data) {\n    super(subtype, deltaTime, time);\n    /** @type {ByteArray} */\n    this.data = data;\n  }\n}\n\n/**\n * Midi Meta Event Structure\n * @extends {Event}\n */\nclass MetaEvent extends Event {\n  /**\n   * @param {string} subtype\n   * @param {number} deltaTime delta time.\n   * @param {number} time time.\n   * @param {Array.<*>} data meta data.\n   */\n  constructor(subtype, deltaTime, time, data) {\n    super(subtype, deltaTime, time);\n    /** @type {Array.<*>} */\n    this.data = data;\n  };\n}\n\nexport {\n  ChannelEvent,\n  SystemExclusiveEvent,\n  MetaEvent,\n};\n","/**\n * Riff Parser class\n */\nexport default class Riff {\n  /**\n   * @param {ByteArray} input input buffer.\n   * @param {Object=} optParams option parameters.\n   */\n  constructor(input, optParams = {}) {\n    /** @type {ByteArray} */\n    this.input = input;\n    /** @type {number} */\n    this.ip = optParams.index || 0;\n    /** @type {number} */\n    this.length = optParams.length || input.length - this.ip;\n    /** @type {Array.<RiffChunk>} */\n    this.chunkList = [];\n    /** @type {number} */\n    this.offset = this.ip;\n    /** @type {boolean} */\n    this.padding = optParams.padding !== void 0 ? optParams.padding : true;\n    /** @type {boolean} */\n    this.bigEndian =\n      optParams.bigEndian !== void 0 ? optParams.bigEndian : false;\n  }\n\n  /**\n   */\n  parse() {\n    /** @type {number} */\n    const length = this.length + this.offset;\n\n    this.chunkList = [];\n\n    while (this.ip < length) {\n      this.parseChunk();\n    }\n  }\n\n  /**\n   */\n  parseChunk() {\n    /** @type {ByteArray} */\n    const input = this.input;\n    /** @type {number} */\n    let ip = this.ip;\n    /** @type {number} */\n    let size;\n\n    this.chunkList.push(\n      new RiffChunk(\n        String.fromCharCode(input[ip++], input[ip++], input[ip++], input[ip++]),\n        (size = this.bigEndian\n          ? ((input[ip++] << 24) |\n              (input[ip++] << 16) |\n              (input[ip++] << 8) |\n              input[ip++]) >>>\n            0\n          : (input[ip++] |\n              (input[ip++] << 8) |\n              (input[ip++] << 16) |\n              (input[ip++] << 24)) >>>\n            0),\n        ip\n      )\n    );\n\n    ip += size;\n\n    // padding\n    if (this.padding && ((ip - this.offset) & 1) === 1) {\n      ip++;\n    }\n\n    this.ip = ip;\n  }\n\n  /**\n   * @param {number} index chunk index.\n   * @return {?RiffChunk}\n   */\n  getChunk(index) {\n    /** @type {RiffChunk} */\n    const chunk = this.chunkList[index];\n\n    if (chunk === void 0) {\n      return null;\n    }\n\n    return chunk;\n  }\n\n  /**\n   * @return {number}\n   */\n  getNumberOfChunks() {\n    return this.chunkList.length;\n  }\n}\n\n/**\n * Riff Chunk Structure\n * @interface\n */\nclass RiffChunk {\n  /**\n   * @param {string} type\n   * @param {number} size\n   * @param {number} offset\n   */\n  constructor(type, size, offset) {\n    /** @type {string} */\n    this.type = type;\n    /** @type {number} */\n    this.size = size;\n    /** @type {number} */\n    this.offset = offset;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ChannelEvent, SystemExclusiveEvent, MetaEvent } from './midi_event';\nimport Meta from './meta';\nimport Riff from './riff';\n\n/**\n * Standard Midi File Parser class\n */\nexport default class SMF {\n  /**\n   * @param {ByteArray} input input buffer.\n   * @param {Object=} optParams option parameters.\n   */\n  constructor(input, optParams = {}) {\n    optParams.padding = false;\n    optParams.bigEndian = true;\n\n    /** @type {ByteArray} */\n    this.input = input;\n    /** @type {number} */\n    this.ip = optParams.index || 0;\n    /** @type {number} */\n    this.chunkIndex = 0;\n    /**\n     * @type {Riff}\n     * @private\n     */\n    this.riffParser_ = new Riff(input, optParams);\n\n    // MIDI File Information\n\n    /** @type {number} */\n    this.formatType = 0;\n    /** @type {number} */\n    this.numberOfTracks = 0;\n    /** @type {number} */\n    this.timeDivision = 480;\n    /** @type {Array.<Array.<Midi.Event>>} */\n    this.tracks = [];\n    /** @type {Array.<Array.<ByteArray>>} */\n    this.plainTracks = [];\n\n    /** @type {number} */\n    this.version = Meta.version;\n    /** @type {string} */\n    this.build = Meta.build;\n  }\n\n  /**\n   */\n  parse() {\n    /** @type {number} */\n    let i = 0;\n    /** @type {number} */\n    let il = 0;\n\n    // parse riff chunks\n    this.riffParser_.parse();\n\n    // parse header chunk\n    this.parseHeaderChunk();\n\n    // parse track chunks\n    for (i = 0, il = this.numberOfTracks; i < il; ++i) {\n      this.parseTrackChunk();\n    }\n  }\n\n  /**\n   */\n  parseHeaderChunk() {\n    /** @type {?{type: string, size: number, offset: number}} */\n    const chunk = this.riffParser_.getChunk(this.chunkIndex++);\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n\n    if (!chunk || chunk.type !== 'MThd') {\n      throw new Error('invalid header signature');\n    }\n\n    this.formatType = (data[ip++] << 8) | data[ip++];\n    this.numberOfTracks = (data[ip++] << 8) | data[ip++];\n    this.timeDivision = (data[ip++] << 8) | data[ip++];\n  }\n\n  /**\n   */\n  parseTrackChunk() {\n    /** @type {?{type: string, size: number, offset: number}} */\n    const chunk = this.riffParser_.getChunk(this.chunkIndex++);\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n    /** @type {number} */\n    let size = 0;\n    /** @type {number} */\n    let deltaTime = 0;\n    /** @type {number} */\n    let eventType = 0;\n    /** @type {number} */\n    let channel = 0;\n    /** @type {number} */\n    let prevEventType = -1;\n    /** @type {number} */\n    let prevChannel = -1;\n    /** @type {number} */\n    let tmp = 0;\n    /** @type {number} */\n    let totalTime = 0;\n    /** @type {number} */\n    let offset = 0;\n    /** @type {number} */\n    let length = 0;\n    /** @type {number} */\n    let status = 0;\n    /** @type {Event} */\n    let event;\n    /** @type {ByteArray} */\n    let plainBytes;\n\n    /** @return {number} */\n    const readNumber = () => {\n      /** @type {number} */\n      let result = 0;\n\n      tmp = 0;\n\n      do {\n        tmp = data[ip++];\n        result = (result << 7) | (tmp & 0x7f);\n      } while ((tmp & 0x80) !== 0);\n\n      return result;\n    };\n\n    if (!chunk || chunk.type !== 'MTrk') {\n      throw new Error('invalid header signature');\n    }\n\n    size = chunk.offset + chunk.size;\n    const eventQueue = [];\n    const plainQueue = [];\n\n    while (ip < size) {\n      // delta time\n      deltaTime = readNumber();\n      totalTime += deltaTime;\n\n      // offset\n      offset = ip;\n\n      // event type value, midi channel\n      status = data[ip++];\n      eventType = (status >> 4) & 0xf;\n      channel = status & 0xf;\n\n      // run status rule\n      if (eventType < 8) {\n        eventType = prevEventType;\n        channel = prevChannel;\n        status = (prevEventType << 4) | prevChannel;\n        ip--;\n        offset--;\n      } else {\n        prevEventType = eventType;\n        prevChannel = channel;\n      }\n\n      // TODO\n      const table = [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        'NoteOff', // 0x8\n        'NoteOn',\n        'NoteAftertouch',\n        'ControlChange',\n        'ProgramChange',\n        'ChannelAftertouch',\n        'PitchBend',\n      ];\n\n      switch (eventType) {\n        // channel events\n        case 0x8:\n        /* FALLTHROUGH */\n        case 0x9:\n        /* FALLTHROUGH */\n        case 0xa:\n        /* FALLTHROUGH */\n        case 0xb:\n        /* FALLTHROUGH */\n        case 0xd:\n        /* FALLTHROUGH */\n        case 0xe:\n          event = new ChannelEvent(\n            table[eventType],\n            deltaTime,\n            totalTime,\n            channel,\n            data[ip++],\n            data[ip++]\n          );\n          break;\n        case 0xc:\n          event = new ChannelEvent(\n            table[eventType],\n            deltaTime,\n            totalTime,\n            channel,\n            data[ip++]\n          );\n          break;\n        // meta events, system exclusive event\n        case 0xf:\n          switch (channel) {\n            // SysEx event\n            case 0x0:\n              tmp = readNumber();\n              if (data[ip + tmp - 1] !== 0xf7) {\n                throw new Error('invalid SysEx event');\n              }\n              event = new SystemExclusiveEvent(\n                'SystemExclusive',\n                deltaTime,\n                totalTime,\n                data.subarray(ip, (ip += tmp) - 1)\n              );\n              break;\n            case 0x7:\n              tmp = readNumber();\n              event = new SystemExclusiveEvent(\n                'SystemExclusive(F7)',\n                deltaTime,\n                totalTime,\n                data.subarray(ip, (ip += tmp))\n              );\n              break;\n            // meta event\n            case 0xf:\n              eventType = data[ip++];\n              tmp = readNumber();\n              switch (eventType) {\n                case 0x00: // sequence number\n                  event = new MetaEvent(\n                    'SequenceNumber',\n                    deltaTime,\n                    totalTime,\n                    [data[ip++], data[ip++]]\n                  );\n                  break;\n                case 0x01: // text event\n                  event = new MetaEvent('TextEvent', deltaTime, totalTime, [\n                    String.fromCharCode.apply(\n                      null,\n                      data.subarray(ip, (ip += tmp))\n                    ),\n                  ]);\n                  break;\n                case 0x02: // copyright notice\n                  event = new MetaEvent(\n                    'CopyrightNotice',\n                    deltaTime,\n                    totalTime,\n                    [\n                      String.fromCharCode.apply(\n                        null,\n                        data.subarray(ip, (ip += tmp))\n                      ),\n                    ]\n                  );\n                  break;\n                case 0x03: // sequence/track name\n                  event = new MetaEvent(\n                    'SequenceTrackName',\n                    deltaTime,\n                    totalTime,\n                    [\n                      String.fromCharCode.apply(\n                        null,\n                        data.subarray(ip, (ip += tmp))\n                      ),\n                    ]\n                  );\n                  break;\n                case 0x04: // instrument name\n                  event = new MetaEvent(\n                    'InstrumentName',\n                    deltaTime,\n                    totalTime,\n                    [\n                      String.fromCharCode.apply(\n                        null,\n                        data.subarray(ip, (ip += tmp))\n                      ),\n                    ]\n                  );\n                  break;\n                case 0x05: // lyrics\n                  event = new MetaEvent('Lyrics', deltaTime, totalTime, [\n                    String.fromCharCode.apply(\n                      null,\n                      data.subarray(ip, (ip += tmp))\n                    ),\n                  ]);\n                  break;\n                case 0x06: // marker\n                  event = new MetaEvent('Marker', deltaTime, totalTime, [\n                    String.fromCharCode.apply(\n                      null,\n                      data.subarray(ip, (ip += tmp))\n                    ),\n                  ]);\n                  break;\n                case 0x07: // cue point\n                  event = new MetaEvent('CuePoint', deltaTime, totalTime, [\n                    String.fromCharCode.apply(\n                      null,\n                      data.subarray(ip, (ip += tmp))\n                    ),\n                  ]);\n                  break;\n                case 0x20: // midi channel prefix\n                  event = new MetaEvent(\n                    'MidiChannelPrefix',\n                    deltaTime,\n                    totalTime,\n                    [data[ip++]]\n                  );\n                  break;\n                case 0x2f: // end of track\n                  event = new MetaEvent('EndOfTrack', deltaTime, totalTime, []);\n                  break;\n                case 0x51: // set tempo\n                  event = new MetaEvent('SetTempo', deltaTime, totalTime, [\n                    (data[ip++] << 16) | (data[ip++] << 8) | data[ip++],\n                  ]);\n                  break;\n                case 0x54: // smpte offset\n                  event = new MetaEvent('SmpteOffset', deltaTime, totalTime, [\n                    data[ip++],\n                    data[ip++],\n                    data[ip++],\n                    data[ip++],\n                    data[ip++],\n                  ]);\n                  break;\n                case 0x58: // time signature\n                  event = new MetaEvent('TimeSignature', deltaTime, totalTime, [\n                    data[ip++],\n                    data[ip++],\n                    data[ip++],\n                    data[ip++],\n                  ]);\n                  break;\n                case 0x59: // key signature\n                  event = new MetaEvent('KeySignature', deltaTime, totalTime, [\n                    data[ip++],\n                    data[ip++],\n                  ]);\n                  break;\n                case 0x7f: // sequencer specific\n                  event = new MetaEvent(\n                    'SequencerSpecific',\n                    deltaTime,\n                    totalTime,\n                    [data.subarray(ip, (ip += tmp))]\n                  );\n                  break;\n                default:\n                  // unknown\n                  event = new MetaEvent('Unknown', deltaTime, totalTime, [\n                    eventType,\n                    data.subarray(ip, (ip += tmp)),\n                  ]);\n              }\n              break;\n            default:\n              console.warn('unknown message:', status.toString(16));\n          }\n          break;\n        // error\n        default:\n          throw new Error('invalid status');\n      }\n\n      // plain queue\n      length = ip - offset;\n      plainBytes = data.subarray(offset, offset + length);\n      plainBytes[0] = status;\n      if (\n        event instanceof ChannelEvent &&\n        event.subtype === 'NoteOn' &&\n        /** @type {ChannelEvent} */\n        (event).parameter2 === 0\n      ) {\n        event.subtype = table[8];\n        plainBytes = new Uint8Array([\n          0x80 | event.channel,\n          event.parameter1,\n          event.parameter2,\n        ]);\n      }\n      plainQueue.push(plainBytes);\n\n      // event queue\n      eventQueue.push(event);\n    }\n\n    this.tracks.push(eventQueue);\n    this.plainTracks.push(plainQueue);\n  }\n}\n"],"names":["Meta","version","date","Event","subtype","deltaTime","time","ChannelEvent","channel","optParameter1","optParameter2","parameter1","parameter2","SystemExclusiveEvent","data","MetaEvent","Riff","input","optParams","ip","index","length","chunkList","offset","padding","bigEndian","parseChunk","size","push","RiffChunk","String","fromCharCode","chunk","type","SMF","chunkIndex","riffParser_","formatType","numberOfTracks","timeDivision","tracks","plainTracks","build","i","il","parse","parseHeaderChunk","parseTrackChunk","getChunk","Error","eventType","prevEventType","prevChannel","tmp","totalTime","status","event","plainBytes","readNumber","result","eventQueue","plainQueue","table","subarray","apply","console","warn","toString","Uint8Array"],"sourceRoot":""}